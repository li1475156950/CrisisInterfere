<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetCasClient.Fakes</name>
    </assembly>
    <members>
        <member name="T:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration">
            <summary>DotNetCasClient.Configuration.CasClientConfiguration 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.#ctor(DotNetCasClient.Configuration.CasClientConfiguration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.ArtifactParameterNameGet">
            <summary>设置 CasClientConfiguration.get_ArtifactParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AuthenticationTypeGet">
            <summary>设置 CasClientConfiguration.get_AuthenticationType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.BypassCasForHandlersGet">
            <summary>设置 CasClientConfiguration.get_BypassCasForHandlers() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.CasServerLoginUrlGet">
            <summary>设置 CasClientConfiguration.get_CasServerLoginUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.CasServerUrlPrefixGet">
            <summary>设置 CasClientConfiguration.get_CasServerUrlPrefix() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.ConfigGet">
            <summary>设置 CasClientConfiguration.get_Config() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.Constructor">
            <summary>设置 CasClientConfiguration.CasClientConfiguration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.CookiesRequiredUrlGet">
            <summary>设置 CasClientConfiguration.get_CookiesRequiredUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.EncodeServiceUrlGet">
            <summary>设置 CasClientConfiguration.get_EncodeServiceUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.GatewayGet">
            <summary>设置 CasClientConfiguration.get_Gateway() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.GatewayParameterNameGet">
            <summary>设置 CasClientConfiguration.get_GatewayParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.GatewayStatusCookieNameGet">
            <summary>设置 CasClientConfiguration.get_GatewayStatusCookieName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.NotAuthorizedUrlGet">
            <summary>设置 CasClientConfiguration.get_NotAuthorizedUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.ProxyCallbackParameterNameGet">
            <summary>设置 CasClientConfiguration.get_ProxyCallbackParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.ProxyCallbackUrlGet">
            <summary>设置 CasClientConfiguration.get_ProxyCallbackUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.ProxyTicketManagerGet">
            <summary>设置 CasClientConfiguration.get_ProxyTicketManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.RedirectAfterValidationGet">
            <summary>设置 CasClientConfiguration.get_RedirectAfterValidation() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.RenewGet">
            <summary>设置 CasClientConfiguration.get_Renew() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.RequireCasForContentTypesGet">
            <summary>设置 CasClientConfiguration.get_RequireCasForContentTypes() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.RequireCasForMissingContentTypesGet">
            <summary>设置 CasClientConfiguration.get_RequireCasForMissingContentTypes() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.ServerNameGet">
            <summary>设置 CasClientConfiguration.get_ServerName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.ServiceGet">
            <summary>设置 CasClientConfiguration.get_Service() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.ServiceParameterNameGet">
            <summary>设置 CasClientConfiguration.get_ServiceParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.ServiceTicketManagerGet">
            <summary>设置 CasClientConfiguration.get_ServiceTicketManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.SingleSignOutGet">
            <summary>设置 CasClientConfiguration.get_SingleSignOut() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.TicketTimeToleranceGet">
            <summary>设置 CasClientConfiguration.get_TicketTimeTolerance() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.TicketValidatorNameGet">
            <summary>设置 CasClientConfiguration.get_TicketValidatorName() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.ArtifactParameterNameGet">
            <summary>设置 CasClientConfiguration.get_ArtifactParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.AuthenticationTypeGet">
            <summary>设置 CasClientConfiguration.get_AuthenticationType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.BypassCasForHandlersGet">
            <summary>设置 CasClientConfiguration.get_BypassCasForHandlers() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.CasServerLoginUrlGet">
            <summary>设置 CasClientConfiguration.get_CasServerLoginUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.CasServerUrlPrefixGet">
            <summary>设置 CasClientConfiguration.get_CasServerUrlPrefix() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.CookiesRequiredUrlGet">
            <summary>设置 CasClientConfiguration.get_CookiesRequiredUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.EncodeServiceUrlGet">
            <summary>设置 CasClientConfiguration.get_EncodeServiceUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.GatewayGet">
            <summary>设置 CasClientConfiguration.get_Gateway() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.GatewayParameterNameGet">
            <summary>设置 CasClientConfiguration.get_GatewayParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.GatewayStatusCookieNameGet">
            <summary>设置 CasClientConfiguration.get_GatewayStatusCookieName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.NotAuthorizedUrlGet">
            <summary>设置 CasClientConfiguration.get_NotAuthorizedUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.ProxyCallbackParameterNameGet">
            <summary>设置 CasClientConfiguration.get_ProxyCallbackParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.ProxyCallbackUrlGet">
            <summary>设置 CasClientConfiguration.get_ProxyCallbackUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.ProxyTicketManagerGet">
            <summary>设置 CasClientConfiguration.get_ProxyTicketManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.RedirectAfterValidationGet">
            <summary>设置 CasClientConfiguration.get_RedirectAfterValidation() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.RenewGet">
            <summary>设置 CasClientConfiguration.get_Renew() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.RequireCasForContentTypesGet">
            <summary>设置 CasClientConfiguration.get_RequireCasForContentTypes() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.RequireCasForMissingContentTypesGet">
            <summary>设置 CasClientConfiguration.get_RequireCasForMissingContentTypes() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.ServerNameGet">
            <summary>设置 CasClientConfiguration.get_ServerName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.ServiceGet">
            <summary>设置 CasClientConfiguration.get_Service() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.ServiceParameterNameGet">
            <summary>设置 CasClientConfiguration.get_ServiceParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.ServiceTicketManagerGet">
            <summary>设置 CasClientConfiguration.get_ServiceTicketManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.SingleSignOutGet">
            <summary>设置 CasClientConfiguration.get_SingleSignOut() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.TicketTimeToleranceGet">
            <summary>设置 CasClientConfiguration.get_TicketTimeTolerance() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasClientConfiguration.AllInstances.TicketValidatorNameGet">
            <summary>设置 CasClientConfiguration.get_TicketValidatorName() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException">
            <summary>DotNetCasClient.Configuration.CasConfigurationException 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException.#ctor(DotNetCasClient.Configuration.CasConfigurationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException.ConstructorString">
            <summary>设置 CasConfigurationException.CasConfigurationException(String message) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException.ConstructorStringException">
            <summary>设置 CasConfigurationException.CasConfigurationException(String message, Exception exception) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Configuration.Fakes.ShimCasConfigurationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration">
            <summary>DotNetCasClient.Configuration.CasClientConfiguration 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>设置 ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.DeserializeElementXmlReaderBoolean">
            <summary>设置 ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.DeserializeSection(System.Xml.XmlReader)">
            <summary>设置 ConfigurationSection.DeserializeSection(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.DeserializeSectionXmlReader">
            <summary>设置 ConfigurationSection.DeserializeSection(XmlReader reader) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ElementPropertyGet">
            <summary>设置 ConfigurationElement.get_ElementProperty() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.Equals(System.Object)">
            <summary>设置 ConfigurationElement.Equals(Object compareTo) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.EqualsObject">
            <summary>设置 ConfigurationElement.Equals(Object compareTo) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.GetHashCode">
            <summary>设置 ConfigurationElement.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.GetHashCode01">
            <summary>设置 ConfigurationElement.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.GetRuntimeObject">
            <summary>设置 ConfigurationSection.GetRuntimeObject() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.GetRuntimeObject01">
            <summary>设置 ConfigurationSection.GetRuntimeObject() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.GetTransformedAssemblyString(System.String)">
            <summary>设置 ConfigurationElement.GetTransformedAssemblyString(String assemblyName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.GetTransformedAssemblyStringString">
            <summary>设置 ConfigurationElement.GetTransformedAssemblyString(String assemblyName) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.GetTransformedTypeString(System.String)">
            <summary>设置 ConfigurationElement.GetTransformedTypeString(String typeName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.GetTransformedTypeStringString">
            <summary>设置 ConfigurationElement.GetTransformedTypeString(String typeName) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.Init">
            <summary>设置 ConfigurationElement.Init() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.Init01">
            <summary>设置 ConfigurationElement.Init() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.InitializeDefault">
            <summary>设置 ConfigurationElement.InitializeDefault() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.InitializeDefault01">
            <summary>设置 ConfigurationElement.InitializeDefault() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.InitializeStub">
            <summary>初始化 type StubCasClientConfiguration 的新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.IsModified">
            <summary>设置 ConfigurationSection.IsModified() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.IsModified01">
            <summary>设置 ConfigurationSection.IsModified() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.IsReadOnly">
            <summary>设置 ConfigurationElement.IsReadOnly() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.IsReadOnly01">
            <summary>设置 ConfigurationElement.IsReadOnly() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ListErrors(System.Collections.IList)">
            <summary>设置 ConfigurationElement.ListErrors(IList errorList) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ListErrorsIList">
            <summary>设置 ConfigurationElement.ListErrors(IList errorList) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.OnDeserializeUnrecognizedAttributeStringString">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>设置 ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.OnRequiredPropertyNotFound(System.String)">
            <summary>设置 ConfigurationElement.OnRequiredPropertyNotFound(String name) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.OnRequiredPropertyNotFoundString">
            <summary>设置 ConfigurationElement.OnRequiredPropertyNotFound(String name) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.PostDeserialize">
            <summary>设置 ConfigurationElement.PostDeserialize() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.PostDeserialize01">
            <summary>设置 ConfigurationElement.PostDeserialize() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.PreSerialize(System.Xml.XmlWriter)">
            <summary>设置 ConfigurationElement.PreSerialize(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.PreSerializeXmlWriter">
            <summary>设置 ConfigurationElement.PreSerialize(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.PropertiesGet">
            <summary>设置 ConfigurationElement.get_Properties() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.Reset(System.Configuration.ConfigurationElement)">
            <summary>设置 ConfigurationElement.Reset(ConfigurationElement parentElement) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ResetConfigurationElement">
            <summary>设置 ConfigurationElement.Reset(ConfigurationElement parentElement) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ResetModified">
            <summary>设置 ConfigurationSection.ResetModified() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ResetModified01">
            <summary>设置 ConfigurationSection.ResetModified() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>设置 ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.SerializeElementXmlWriterBoolean">
            <summary>设置 ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>设置 ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>设置 ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>设置 ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.SerializeToXmlElementXmlWriterString">
            <summary>设置 ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.SetReadOnly">
            <summary>设置 ConfigurationElement.SetReadOnly() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.SetReadOnly01">
            <summary>设置 ConfigurationElement.SetReadOnly() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>设置 ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>设置 ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>设置 ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>设置 ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>设置 ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>设置 ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>设置 ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>设置 ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode) 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.ElementProperty">
            <summary>设置 ConfigurationElement.get_ElementProperty() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasClientConfiguration.Properties">
            <summary>设置 ConfigurationElement.get_Properties() 的 stub</summary>
        </member>
        <member name="T:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException">
            <summary>DotNetCasClient.Configuration.CasConfigurationException 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubCasConfigurationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubCasConfigurationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.InitializeStub">
            <summary>初始化 type StubCasConfigurationException 的新实例</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Configuration.Fakes.StubCasConfigurationException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:DotNetCasClient.Fakes.ShimCasAuthentication">
            <summary>DotNetCasClient.CasAuthentication 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthentication.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthentication.#ctor(DotNetCasClient.CasAuthentication)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthentication.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthentication.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.BypassCasForHandlersGet">
            <summary>设置 CasAuthentication.get_BypassCasForHandlers() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.CasProxyCallbackUrlGet">
            <summary>设置 CasAuthentication.get_CasProxyCallbackUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.CasServerLoginUrlGet">
            <summary>设置 CasAuthentication.get_CasServerLoginUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.CasServerUrlPrefixGet">
            <summary>设置 CasAuthentication.get_CasServerUrlPrefix() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ClearAuthCookie">
            <summary>设置 CasAuthentication.ClearAuthCookie() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.Constructor">
            <summary>设置 CasAuthentication.CasAuthentication() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.CookiesRequiredUrlGet">
            <summary>设置 CasAuthentication.get_CookiesRequiredUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.CreateFormsAuthenticationTicketStringStringStringNullableOfDateTimeNullableOfDateTime">
            <summary>设置 CasAuthentication.CreateFormsAuthenticationTicket(String netId, String cookiePath, String serviceTicket, Nullable`1&lt;DateTime&gt; validFromDate, Nullable`1&lt;DateTime&gt; validUntilDate) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.CurrentPrincipalGet">
            <summary>设置 CasAuthentication.get_CurrentPrincipal() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ExtractSingleSignOutTicketFromSamlResponseString">
            <summary>设置 CasAuthentication.ExtractSingleSignOutTicketFromSamlResponse(String xmlAsString) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.FormsLoginUrlGet">
            <summary>设置 CasAuthentication.get_FormsLoginUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.FormsTimeoutGet">
            <summary>设置 CasAuthentication.get_FormsTimeout() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.GatewayAuthenticateBoolean">
            <summary>设置 CasAuthentication.GatewayAuthenticate(Boolean ignoreGatewayStatusCookie) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.GatewayGet">
            <summary>设置 CasAuthentication.get_Gateway() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.GatewayParameterNameGet">
            <summary>设置 CasAuthentication.get_GatewayParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.GatewayStatusCookieNameGet">
            <summary>设置 CasAuthentication.get_GatewayStatusCookieName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.GetAuthCookieFormsAuthenticationTicket">
            <summary>设置 CasAuthentication.GetAuthCookie(FormsAuthenticationTicket ticket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.GetFormsAuthenticationTicket">
            <summary>设置 CasAuthentication.GetFormsAuthenticationTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.GetGatewayStatus">
            <summary>设置 CasAuthentication.GetGatewayStatus() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.GetProxyTicketIdForString">
            <summary>设置 CasAuthentication.GetProxyTicketIdFor(String targetServiceUrl) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.Initialize">
            <summary>设置 CasAuthentication.Initialize() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.LogAndThrowConfigurationExceptionString">
            <summary>设置 CasAuthentication.LogAndThrowConfigurationException(String message) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.LogAndThrowOperationExceptionString">
            <summary>设置 CasAuthentication.LogAndThrowOperationException(String message) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.NotAuthorizedUrlGet">
            <summary>设置 CasAuthentication.get_NotAuthorizedUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProcessIncomingSingleSignOutRequestsGet">
            <summary>设置 CasAuthentication.get_ProcessIncomingSingleSignOutRequests() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProcessProxyCallbackRequest">
            <summary>设置 CasAuthentication.ProcessProxyCallbackRequest() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProcessRequestAuthentication">
            <summary>设置 CasAuthentication.ProcessRequestAuthentication() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProcessSingleSignOutRequest">
            <summary>设置 CasAuthentication.ProcessSingleSignOutRequest() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProcessTicketValidation">
            <summary>设置 CasAuthentication.ProcessTicketValidation() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProxyCallbackParameterNameGet">
            <summary>设置 CasAuthentication.get_ProxyCallbackParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProxyRedirectString">
            <summary>设置 CasAuthentication.ProxyRedirect(String url) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProxyRedirectStringBoolean">
            <summary>设置 CasAuthentication.ProxyRedirect(String url, Boolean endResponse) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProxyRedirectStringString">
            <summary>设置 CasAuthentication.ProxyRedirect(String url, String proxyTicketUrlParameter) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProxyRedirectStringStringBoolean">
            <summary>设置 CasAuthentication.ProxyRedirect(String url, String proxyTicketUrlParameter, Boolean endResponse) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProxyTicketManagerGet">
            <summary>设置 CasAuthentication.get_ProxyTicketManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ProxyTicketManagerProviderGet">
            <summary>设置 CasAuthentication.get_ProxyTicketManagerProvider() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RedirectAfterValidationGet">
            <summary>设置 CasAuthentication.get_RedirectAfterValidation() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RedirectFromFailedGatewayCallback">
            <summary>设置 CasAuthentication.RedirectFromFailedGatewayCallback() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RedirectFromLoginCallback">
            <summary>设置 CasAuthentication.RedirectFromLoginCallback() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RedirectToCookiesRequiredPage">
            <summary>设置 CasAuthentication.RedirectToCookiesRequiredPage() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RedirectToLoginPage">
            <summary>设置 CasAuthentication.RedirectToLoginPage() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RedirectToLoginPageBoolean">
            <summary>设置 CasAuthentication.RedirectToLoginPage(Boolean forceRenew) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RedirectToNotAuthorizedPage">
            <summary>设置 CasAuthentication.RedirectToNotAuthorizedPage() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RenewGet">
            <summary>设置 CasAuthentication.get_Renew() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RequireCasForContentTypesGet">
            <summary>设置 CasAuthentication.get_RequireCasForContentTypes() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.RequireCasForMissingContentTypesGet">
            <summary>设置 CasAuthentication.get_RequireCasForMissingContentTypes() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ServerNameGet">
            <summary>设置 CasAuthentication.get_ServerName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ServiceTicketManagerGet">
            <summary>设置 CasAuthentication.get_ServiceTicketManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.ServiceTicketManagerProviderGet">
            <summary>设置 CasAuthentication.get_ServiceTicketManagerProvider() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.SetAuthCookieFormsAuthenticationTicket">
            <summary>设置 CasAuthentication.SetAuthCookie(FormsAuthenticationTicket clientTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.SetGatewayStatusCookieGatewayStatus">
            <summary>设置 CasAuthentication.SetGatewayStatusCookie(GatewayStatus gatewayStatus) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.SingleSignOut">
            <summary>设置 CasAuthentication.SingleSignOut() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.StaticConstructor">
            <summary>设置 CasAuthentication.CasAuthentication() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.TicketTimeToleranceGet">
            <summary>设置 CasAuthentication.get_TicketTimeTolerance() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthentication.TicketValidatorNameGet">
            <summary>设置 CasAuthentication.get_TicketValidatorName() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Fakes.ShimCasAuthentication.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Fakes.ShimCasAuthenticationModule">
            <summary>DotNetCasClient.CasAuthenticationModule 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthenticationModule.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthenticationModule.#ctor(DotNetCasClient.CasAuthenticationModule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthenticationModule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthenticationModule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthenticationModule.Bind(System.Web.IHttpModule)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.Constructor">
            <summary>设置 CasAuthenticationModule.CasAuthenticationModule() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.Dispose">
            <summary>设置 CasAuthenticationModule.Dispose() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.InitHttpApplication">
            <summary>设置 CasAuthenticationModule.Init(HttpApplication context) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.OnAuthenticateRequestObjectEventArgs">
            <summary>设置 CasAuthenticationModule.OnAuthenticateRequest(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.OnBeginRequestObjectEventArgs">
            <summary>设置 CasAuthenticationModule.OnBeginRequest(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.OnEndRequestObjectEventArgs">
            <summary>设置 CasAuthenticationModule.OnEndRequest(Object sender, EventArgs e) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.StaticConstructor">
            <summary>设置 CasAuthenticationModule.CasAuthenticationModule() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Fakes.ShimCasAuthenticationModule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.AllInstances.Dispose">
            <summary>设置 CasAuthenticationModule.Dispose() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationModule.AllInstances.InitHttpApplication">
            <summary>设置 CasAuthenticationModule.Init(HttpApplication context) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Fakes.ShimCasAuthenticationTicket">
            <summary>DotNetCasClient.CasAuthenticationTicket 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.#ctor(DotNetCasClient.CasAuthenticationTicket)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AssertionGet">
            <summary>设置 CasAuthenticationTicket.get_Assertion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AssertionSetIAssertion">
            <summary>设置 CasAuthenticationTicket.set_Assertion(IAssertion value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ClientHostAddressGet">
            <summary>设置 CasAuthenticationTicket.get_ClientHostAddress() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ClientHostAddressSetString">
            <summary>设置 CasAuthenticationTicket.set_ClientHostAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.Constructor">
            <summary>设置 CasAuthenticationTicket.CasAuthenticationTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ConstructorStringStringStringIAssertion">
            <summary>设置 CasAuthenticationTicket.CasAuthenticationTicket(String serviceTicket, String originatingServiceName, String clientHostAddress, IAssertion assertion) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ExpiredGet">
            <summary>设置 CasAuthenticationTicket.get_Expired() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.NetIdGet">
            <summary>设置 CasAuthenticationTicket.get_NetId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.NetIdSetString">
            <summary>设置 CasAuthenticationTicket.set_NetId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.OriginatingServiceNameGet">
            <summary>设置 CasAuthenticationTicket.get_OriginatingServiceName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.OriginatingServiceNameSetString">
            <summary>设置 CasAuthenticationTicket.set_OriginatingServiceName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ProxiesGet">
            <summary>设置 CasAuthenticationTicket.get_Proxies() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ProxiesSetListOfString">
            <summary>设置 CasAuthenticationTicket.set_Proxies(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ProxyGrantingTicketGet">
            <summary>设置 CasAuthenticationTicket.get_ProxyGrantingTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ProxyGrantingTicketIouGet">
            <summary>设置 CasAuthenticationTicket.get_ProxyGrantingTicketIou() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ProxyGrantingTicketIouSetString">
            <summary>设置 CasAuthenticationTicket.set_ProxyGrantingTicketIou(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ProxyGrantingTicketSetString">
            <summary>设置 CasAuthenticationTicket.set_ProxyGrantingTicket(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ServiceTicketGet">
            <summary>设置 CasAuthenticationTicket.get_ServiceTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ServiceTicketSetString">
            <summary>设置 CasAuthenticationTicket.set_ServiceTicket(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ToString">
            <summary>设置 CasAuthenticationTicket.ToString() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ValidFromDateGet">
            <summary>设置 CasAuthenticationTicket.get_ValidFromDate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ValidFromDateSetDateTime">
            <summary>设置 CasAuthenticationTicket.set_ValidFromDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ValidUntilDateGet">
            <summary>设置 CasAuthenticationTicket.get_ValidUntilDate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.ValidUntilDateSetDateTime">
            <summary>设置 CasAuthenticationTicket.set_ValidUntilDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.AssertionGet">
            <summary>设置 CasAuthenticationTicket.get_Assertion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.AssertionSetIAssertion">
            <summary>设置 CasAuthenticationTicket.set_Assertion(IAssertion value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ClientHostAddressGet">
            <summary>设置 CasAuthenticationTicket.get_ClientHostAddress() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ClientHostAddressSetString">
            <summary>设置 CasAuthenticationTicket.set_ClientHostAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ExpiredGet">
            <summary>设置 CasAuthenticationTicket.get_Expired() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.NetIdGet">
            <summary>设置 CasAuthenticationTicket.get_NetId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.NetIdSetString">
            <summary>设置 CasAuthenticationTicket.set_NetId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.OriginatingServiceNameGet">
            <summary>设置 CasAuthenticationTicket.get_OriginatingServiceName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.OriginatingServiceNameSetString">
            <summary>设置 CasAuthenticationTicket.set_OriginatingServiceName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ProxiesGet">
            <summary>设置 CasAuthenticationTicket.get_Proxies() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ProxiesSetListOfString">
            <summary>设置 CasAuthenticationTicket.set_Proxies(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ProxyGrantingTicketGet">
            <summary>设置 CasAuthenticationTicket.get_ProxyGrantingTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ProxyGrantingTicketIouGet">
            <summary>设置 CasAuthenticationTicket.get_ProxyGrantingTicketIou() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ProxyGrantingTicketIouSetString">
            <summary>设置 CasAuthenticationTicket.set_ProxyGrantingTicketIou(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ProxyGrantingTicketSetString">
            <summary>设置 CasAuthenticationTicket.set_ProxyGrantingTicket(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ServiceTicketGet">
            <summary>设置 CasAuthenticationTicket.get_ServiceTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ServiceTicketSetString">
            <summary>设置 CasAuthenticationTicket.set_ServiceTicket(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ToString01">
            <summary>设置 CasAuthenticationTicket.ToString() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ValidFromDateGet">
            <summary>设置 CasAuthenticationTicket.get_ValidFromDate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ValidFromDateSetDateTime">
            <summary>设置 CasAuthenticationTicket.set_ValidFromDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ValidUntilDateGet">
            <summary>设置 CasAuthenticationTicket.get_ValidUntilDate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Fakes.ShimCasAuthenticationTicket.AllInstances.ValidUntilDateSetDateTime">
            <summary>设置 CasAuthenticationTicket.set_ValidUntilDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Logging.Fakes.ShimCategory">
            <summary>DotNetCasClient.Logging.Category 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.ShimCategory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.ShimCategory.#ctor(DotNetCasClient.Logging.Category)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.ShimCategory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.ShimCategory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.ConfigGet">
            <summary>设置 Category.get_Config() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.ConstructorString">
            <summary>设置 Category.Category(String name) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.HttpModuleGet">
            <summary>设置 Category.get_HttpModule() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.NameGet">
            <summary>设置 Category.get_Name() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.ProtocolGet">
            <summary>设置 Category.get_Protocol() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.SecurityGet">
            <summary>设置 Category.get_Security() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.SourceGet">
            <summary>设置 Category.get_Source() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.StaticConstructor">
            <summary>设置 Category.Category() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Logging.Fakes.ShimCategory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.AllInstances.NameGet">
            <summary>设置 Category.get_Name() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimCategory.AllInstances.SourceGet">
            <summary>设置 Category.get_Source() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Logging.Fakes.ShimLogger">
            <summary>DotNetCasClient.Logging.Logger 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.ShimLogger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.ShimLogger.#ctor(DotNetCasClient.Logging.Logger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.ShimLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.ShimLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.ConstructorCategory">
            <summary>设置 Logger.Logger(Category category) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.DebugStringObjectArray">
            <summary>设置 Logger.Debug(String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.ErrorStringObjectArray">
            <summary>设置 Logger.Error(String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.InfoStringObjectArray">
            <summary>设置 Logger.Info(String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.TraceTraceEventTypeStringObjectArray">
            <summary>设置 Logger.Trace(TraceEventType type, String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.WarnStringObjectArray">
            <summary>设置 Logger.Warn(String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Logging.Fakes.ShimLogger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.AllInstances.DebugStringObjectArray">
            <summary>设置 Logger.Debug(String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.AllInstances.ErrorStringObjectArray">
            <summary>设置 Logger.Error(String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.AllInstances.InfoStringObjectArray">
            <summary>设置 Logger.Info(String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.AllInstances.TraceTraceEventTypeStringObjectArray">
            <summary>设置 Logger.Trace(TraceEventType type, String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.ShimLogger.AllInstances.WarnStringObjectArray">
            <summary>设置 Logger.Warn(String message, Object[] parameters) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Logging.Fakes.StubLogger">
            <summary>DotNetCasClient.Logging.Logger 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.StubLogger.#ctor(DotNetCasClient.Logging.Category)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Logging.Fakes.StubLogger.InitializeStub">
            <summary>初始化 type StubLogger 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.StubLogger.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.StubLogger.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Logging.Fakes.StubLogger.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.ShimAssertion">
            <summary>DotNetCasClient.Security.Assertion 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimAssertion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimAssertion.#ctor(DotNetCasClient.Security.Assertion)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimAssertion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimAssertion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimAssertion.Bind(DotNetCasClient.Security.IAssertion)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AttributesGet">
            <summary>设置 Assertion.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AttributesSetDictionaryOfStringIListOfString">
            <summary>设置 Assertion.set_Attributes(Dictionary`2&lt;String,IList`1&lt;String&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.ConstructorString">
            <summary>设置 Assertion.Assertion(String principalName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.ConstructorStringDateTimeDateTime">
            <summary>设置 Assertion.Assertion(String principalName, DateTime validFromDate, DateTime validUntilDate) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.ConstructorStringDateTimeDateTimeIDictionaryOfStringIListOfString">
            <summary>设置 Assertion.Assertion(String principalName, DateTime validFromDate, DateTime validUntilDate, IDictionary`2&lt;String,IList`1&lt;String&gt;&gt; attributes) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.ConstructorStringIDictionaryOfStringIListOfString">
            <summary>设置 Assertion.Assertion(String principalName, IDictionary`2&lt;String,IList`1&lt;String&gt;&gt; attributes) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.PrincipalNameGet">
            <summary>设置 Assertion.get_PrincipalName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.PrincipalNameSetString">
            <summary>设置 Assertion.set_PrincipalName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.ValidFromDateGet">
            <summary>设置 Assertion.get_ValidFromDate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.ValidFromDateSetDateTime">
            <summary>设置 Assertion.set_ValidFromDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.ValidUntilDateGet">
            <summary>设置 Assertion.get_ValidUntilDate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.ValidUntilDateSetDateTime">
            <summary>设置 Assertion.set_ValidUntilDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.ShimAssertion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AllInstances.AttributesGet">
            <summary>设置 Assertion.get_Attributes() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AllInstances.AttributesSetDictionaryOfStringIListOfString">
            <summary>设置 Assertion.set_Attributes(Dictionary`2&lt;String,IList`1&lt;String&gt;&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AllInstances.PrincipalNameGet">
            <summary>设置 Assertion.get_PrincipalName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AllInstances.PrincipalNameSetString">
            <summary>设置 Assertion.set_PrincipalName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AllInstances.ValidFromDateGet">
            <summary>设置 Assertion.get_ValidFromDate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AllInstances.ValidFromDateSetDateTime">
            <summary>设置 Assertion.set_ValidFromDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AllInstances.ValidUntilDateGet">
            <summary>设置 Assertion.get_ValidUntilDate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertion.AllInstances.ValidUntilDateSetDateTime">
            <summary>设置 Assertion.set_ValidUntilDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider">
            <summary>DotNetCasClient.Security.AssertionRoleProvider 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.#ctor(DotNetCasClient.Security.AssertionRoleProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AddUsersToRolesStringArrayStringArray">
            <summary>设置 AssertionRoleProvider.AddUsersToRoles(String[] usernames, String[] roleNames) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.ApplicationNameGet">
            <summary>设置 AssertionRoleProvider.get_ApplicationName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.ApplicationNameSetString">
            <summary>设置 AssertionRoleProvider.set_ApplicationName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.Constructor">
            <summary>设置 AssertionRoleProvider.AssertionRoleProvider() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.CreateRoleString">
            <summary>设置 AssertionRoleProvider.CreateRole(String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.DeleteRoleStringBoolean">
            <summary>设置 AssertionRoleProvider.DeleteRole(String roleName, Boolean throwOnPopulatedRole) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.FindUsersInRoleStringString">
            <summary>设置 AssertionRoleProvider.FindUsersInRole(String roleName, String usernameToMatch) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.GetAllRoles">
            <summary>设置 AssertionRoleProvider.GetAllRoles() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.GetCurrentUserRoles">
            <summary>设置 AssertionRoleProvider.GetCurrentUserRoles() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.GetRolesForUserString">
            <summary>设置 AssertionRoleProvider.GetRolesForUser(String username) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.GetUsersInRoleString">
            <summary>设置 AssertionRoleProvider.GetUsersInRole(String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.InitializeStringNameValueCollection">
            <summary>设置 AssertionRoleProvider.Initialize(String name, NameValueCollection config) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.IsUserInRoleStringString">
            <summary>设置 AssertionRoleProvider.IsUserInRole(String username, String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.RemoveUsersFromRolesStringArrayStringArray">
            <summary>设置 AssertionRoleProvider.RemoveUsersFromRoles(String[] usernames, String[] roleNames) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.RoleExistsString">
            <summary>设置 AssertionRoleProvider.RoleExists(String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.StaticConstructor">
            <summary>设置 AssertionRoleProvider.AssertionRoleProvider() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.AddUsersToRolesStringArrayStringArray">
            <summary>设置 AssertionRoleProvider.AddUsersToRoles(String[] usernames, String[] roleNames) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.ApplicationNameGet">
            <summary>设置 AssertionRoleProvider.get_ApplicationName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.ApplicationNameSetString">
            <summary>设置 AssertionRoleProvider.set_ApplicationName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.CreateRoleString">
            <summary>设置 AssertionRoleProvider.CreateRole(String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.DeleteRoleStringBoolean">
            <summary>设置 AssertionRoleProvider.DeleteRole(String roleName, Boolean throwOnPopulatedRole) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.FindUsersInRoleStringString">
            <summary>设置 AssertionRoleProvider.FindUsersInRole(String roleName, String usernameToMatch) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.GetAllRoles">
            <summary>设置 AssertionRoleProvider.GetAllRoles() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.GetCurrentUserRoles">
            <summary>设置 AssertionRoleProvider.GetCurrentUserRoles() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.GetRolesForUserString">
            <summary>设置 AssertionRoleProvider.GetRolesForUser(String username) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.GetUsersInRoleString">
            <summary>设置 AssertionRoleProvider.GetUsersInRole(String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.InitializeStringNameValueCollection">
            <summary>设置 AssertionRoleProvider.Initialize(String name, NameValueCollection config) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.IsUserInRoleStringString">
            <summary>设置 AssertionRoleProvider.IsUserInRole(String username, String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.RemoveUsersFromRolesStringArrayStringArray">
            <summary>设置 AssertionRoleProvider.RemoveUsersFromRoles(String[] usernames, String[] roleNames) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimAssertionRoleProvider.AllInstances.RoleExistsString">
            <summary>设置 AssertionRoleProvider.RoleExists(String roleName) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.ShimCasPrincipal">
            <summary>DotNetCasClient.Security.CasPrincipal 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimCasPrincipal.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimCasPrincipal.#ctor(DotNetCasClient.Security.CasPrincipal)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimCasPrincipal.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimCasPrincipal.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimCasPrincipal.Bind(DotNetCasClient.Security.ICasPrincipal)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimCasPrincipal.Bind(System.Security.Principal.IPrincipal)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AssertionGet">
            <summary>设置 CasPrincipal.get_Assertion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AssertionSetIAssertion">
            <summary>设置 CasPrincipal.set_Assertion(IAssertion value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.ConstructorIAssertion">
            <summary>设置 CasPrincipal.CasPrincipal(IAssertion assertion) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.ConstructorIAssertionString">
            <summary>设置 CasPrincipal.CasPrincipal(IAssertion assertion, String proxyGrantingTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.ConstructorIAssertionStringIEnumerableOfString">
            <summary>设置 CasPrincipal.CasPrincipal(IAssertion assertion, String proxyGrantingTicket, IEnumerable`1&lt;String&gt; proxies) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.GetPassword">
            <summary>设置 CasPrincipal.GetPassword() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.IdentityGet">
            <summary>设置 CasPrincipal.get_Identity() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.IdentitySetIIdentity">
            <summary>设置 CasPrincipal.set_Identity(IIdentity value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.IsInRoleString">
            <summary>设置 CasPrincipal.IsInRole(String role) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.ProxiesGet">
            <summary>设置 CasPrincipal.get_Proxies() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.ProxiesSetIEnumerableOfString">
            <summary>设置 CasPrincipal.set_Proxies(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.ProxyGrantingTicketGet">
            <summary>设置 CasPrincipal.get_ProxyGrantingTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.ProxyGrantingTicketSetString">
            <summary>设置 CasPrincipal.set_ProxyGrantingTicket(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.AssertionGet">
            <summary>设置 CasPrincipal.get_Assertion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.AssertionSetIAssertion">
            <summary>设置 CasPrincipal.set_Assertion(IAssertion value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.GetPassword">
            <summary>设置 CasPrincipal.GetPassword() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.IdentityGet">
            <summary>设置 CasPrincipal.get_Identity() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.IdentitySetIIdentity">
            <summary>设置 CasPrincipal.set_Identity(IIdentity value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.IsInRoleString">
            <summary>设置 CasPrincipal.IsInRole(String role) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.ProxiesGet">
            <summary>设置 CasPrincipal.get_Proxies() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.ProxiesSetIEnumerableOfString">
            <summary>设置 CasPrincipal.set_Proxies(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.ProxyGrantingTicketGet">
            <summary>设置 CasPrincipal.get_ProxyGrantingTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimCasPrincipal.AllInstances.ProxyGrantingTicketSetString">
            <summary>设置 CasPrincipal.set_ProxyGrantingTicket(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider">
            <summary>DotNetCasClient.Security.ReadOnlyXmlRoleProvider 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.#ctor(DotNetCasClient.Security.ReadOnlyXmlRoleProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AddUsersToRolesStringArrayStringArray">
            <summary>设置 ReadOnlyXmlRoleProvider.AddUsersToRoles(String[] usernames, String[] roleNames) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.ApplicationNameGet">
            <summary>设置 ReadOnlyXmlRoleProvider.get_ApplicationName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.ApplicationNameSetString">
            <summary>设置 ReadOnlyXmlRoleProvider.set_ApplicationName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.Constructor">
            <summary>设置 ReadOnlyXmlRoleProvider.ReadOnlyXmlRoleProvider() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.CreateRoleString">
            <summary>设置 ReadOnlyXmlRoleProvider.CreateRole(String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.DeleteRoleStringBoolean">
            <summary>设置 ReadOnlyXmlRoleProvider.DeleteRole(String roleName, Boolean throwOnPopulatedRole) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.FindUsersInRoleStringString">
            <summary>设置 ReadOnlyXmlRoleProvider.FindUsersInRole(String roleName, String usernameToMatch) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.GetAllRoles">
            <summary>设置 ReadOnlyXmlRoleProvider.GetAllRoles() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.GetRolesForUserString">
            <summary>设置 ReadOnlyXmlRoleProvider.GetRolesForUser(String username) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.GetUsersInRoleString">
            <summary>设置 ReadOnlyXmlRoleProvider.GetUsersInRole(String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.InitializeStringNameValueCollection">
            <summary>设置 ReadOnlyXmlRoleProvider.Initialize(String name, NameValueCollection config) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.IsUserInRoleStringString">
            <summary>设置 ReadOnlyXmlRoleProvider.IsUserInRole(String username, String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.ReadRoleDataStore">
            <summary>设置 ReadOnlyXmlRoleProvider.ReadRoleDataStore() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.RemoveUsersFromRolesStringArrayStringArray">
            <summary>设置 ReadOnlyXmlRoleProvider.RemoveUsersFromRoles(String[] usernames, String[] roleNames) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.RoleExistsString">
            <summary>设置 ReadOnlyXmlRoleProvider.RoleExists(String roleName) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.AddUsersToRolesStringArrayStringArray">
            <summary>设置 ReadOnlyXmlRoleProvider.AddUsersToRoles(String[] usernames, String[] roleNames) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.ApplicationNameGet">
            <summary>设置 ReadOnlyXmlRoleProvider.get_ApplicationName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.ApplicationNameSetString">
            <summary>设置 ReadOnlyXmlRoleProvider.set_ApplicationName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.CreateRoleString">
            <summary>设置 ReadOnlyXmlRoleProvider.CreateRole(String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.DeleteRoleStringBoolean">
            <summary>设置 ReadOnlyXmlRoleProvider.DeleteRole(String roleName, Boolean throwOnPopulatedRole) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.FindUsersInRoleStringString">
            <summary>设置 ReadOnlyXmlRoleProvider.FindUsersInRole(String roleName, String usernameToMatch) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.GetAllRoles">
            <summary>设置 ReadOnlyXmlRoleProvider.GetAllRoles() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.GetRolesForUserString">
            <summary>设置 ReadOnlyXmlRoleProvider.GetRolesForUser(String username) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.GetUsersInRoleString">
            <summary>设置 ReadOnlyXmlRoleProvider.GetUsersInRole(String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.InitializeStringNameValueCollection">
            <summary>设置 ReadOnlyXmlRoleProvider.Initialize(String name, NameValueCollection config) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.IsUserInRoleStringString">
            <summary>设置 ReadOnlyXmlRoleProvider.IsUserInRole(String username, String roleName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.ReadRoleDataStore">
            <summary>设置 ReadOnlyXmlRoleProvider.ReadRoleDataStore() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.RemoveUsersFromRolesStringArrayStringArray">
            <summary>设置 ReadOnlyXmlRoleProvider.RemoveUsersFromRoles(String[] usernames, String[] roleNames) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.ShimReadOnlyXmlRoleProvider.AllInstances.RoleExistsString">
            <summary>设置 ReadOnlyXmlRoleProvider.RoleExists(String roleName) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.StubAssertion">
            <summary>DotNetCasClient.Security.Assertion 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertion.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertion.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertion.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertion.#ctor(System.String,System.DateTime,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertion.InitializeStub">
            <summary>初始化 type StubAssertion 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubAssertion.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubAssertion.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubAssertion.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider">
            <summary>DotNetCasClient.Security.AssertionRoleProvider 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.AddUsersToRoles(System.String[],System.String[])">
            <summary>设置 AssertionRoleProvider.AddUsersToRoles(String[] usernames, String[] roleNames) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.AddUsersToRolesStringArrayStringArray">
            <summary>设置 AssertionRoleProvider.AddUsersToRoles(String[] usernames, String[] roleNames) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.ApplicationNameGet">
            <summary>设置 AssertionRoleProvider.get_ApplicationName() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.ApplicationNameSetString">
            <summary>设置 AssertionRoleProvider.set_ApplicationName(String value) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.AttachBackingFieldToApplicationName">
            <summary>附加委托以将 StubAssertionRoleProvider.ApplicationName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.CreateRole(System.String)">
            <summary>设置 AssertionRoleProvider.CreateRole(String roleName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.CreateRoleString">
            <summary>设置 AssertionRoleProvider.CreateRole(String roleName) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.DeleteRole(System.String,System.Boolean)">
            <summary>设置 AssertionRoleProvider.DeleteRole(String roleName, Boolean throwOnPopulatedRole) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.DeleteRoleStringBoolean">
            <summary>设置 AssertionRoleProvider.DeleteRole(String roleName, Boolean throwOnPopulatedRole) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.DescriptionGet">
            <summary>设置 ProviderBase.get_Description() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.FindUsersInRole(System.String,System.String)">
            <summary>设置 AssertionRoleProvider.FindUsersInRole(String roleName, String usernameToMatch) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.FindUsersInRoleStringString">
            <summary>设置 AssertionRoleProvider.FindUsersInRole(String roleName, String usernameToMatch) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.GetAllRoles">
            <summary>设置 AssertionRoleProvider.GetAllRoles() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.GetAllRoles01">
            <summary>设置 AssertionRoleProvider.GetAllRoles() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.GetRolesForUser(System.String)">
            <summary>设置 AssertionRoleProvider.GetRolesForUser(String username) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.GetRolesForUserString">
            <summary>设置 AssertionRoleProvider.GetRolesForUser(String username) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.GetUsersInRole(System.String)">
            <summary>设置 AssertionRoleProvider.GetUsersInRole(String roleName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.GetUsersInRoleString">
            <summary>设置 AssertionRoleProvider.GetUsersInRole(String roleName) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>设置 AssertionRoleProvider.Initialize(String name, NameValueCollection config) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.InitializeStringNameValueCollection">
            <summary>设置 AssertionRoleProvider.Initialize(String name, NameValueCollection config) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.InitializeStub">
            <summary>初始化 type StubAssertionRoleProvider 的新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.IsUserInRole(System.String,System.String)">
            <summary>设置 AssertionRoleProvider.IsUserInRole(String username, String roleName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.IsUserInRoleStringString">
            <summary>设置 AssertionRoleProvider.IsUserInRole(String username, String roleName) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.NameGet">
            <summary>设置 ProviderBase.get_Name() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
            <summary>设置 AssertionRoleProvider.RemoveUsersFromRoles(String[] usernames, String[] roleNames) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.RemoveUsersFromRolesStringArrayStringArray">
            <summary>设置 AssertionRoleProvider.RemoveUsersFromRoles(String[] usernames, String[] roleNames) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.RoleExists(System.String)">
            <summary>设置 AssertionRoleProvider.RoleExists(String roleName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.RoleExistsString">
            <summary>设置 AssertionRoleProvider.RoleExists(String roleName) 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.ApplicationName">
            <summary>设置 AssertionRoleProvider.get_ApplicationName() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.Description">
            <summary>设置 ProviderBase.get_Description() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubAssertionRoleProvider.Name">
            <summary>设置 ProviderBase.get_Name() 的 stub</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.StubCasPrincipal">
            <summary>DotNetCasClient.Security.CasPrincipal 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubCasPrincipal.#ctor(DotNetCasClient.Security.IAssertion)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubCasPrincipal.#ctor(DotNetCasClient.Security.IAssertion,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubCasPrincipal.#ctor(DotNetCasClient.Security.IAssertion,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubCasPrincipal.InitializeStub">
            <summary>初始化 type StubCasPrincipal 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubCasPrincipal.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubCasPrincipal.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubCasPrincipal.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.StubIAssertion">
            <summary>DotNetCasClient.Security.IAssertion 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubIAssertion.#ctor">
            <summary>初始化 type StubIAssertion 的新实例</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubIAssertion.AttributesGet">
            <summary>设置 IAssertion.get_Attributes() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubIAssertion.PrincipalNameGet">
            <summary>设置 IAssertion.get_PrincipalName() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubIAssertion.ValidFromDateGet">
            <summary>设置 IAssertion.get_ValidFromDate() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubIAssertion.ValidUntilDateGet">
            <summary>设置 IAssertion.get_ValidUntilDate() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubIAssertion.dncc::DotNetCasClient#Security#IAssertion#Attributes">
            <summary>设置 IAssertion.get_Attributes() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubIAssertion.dncc::DotNetCasClient#Security#IAssertion#PrincipalName">
            <summary>设置 IAssertion.get_PrincipalName() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubIAssertion.dncc::DotNetCasClient#Security#IAssertion#ValidFromDate">
            <summary>设置 IAssertion.get_ValidFromDate() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubIAssertion.dncc::DotNetCasClient#Security#IAssertion#ValidUntilDate">
            <summary>设置 IAssertion.get_ValidUntilDate() 的 stub</summary>
        </member>
        <member name="T:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider">
            <summary>DotNetCasClient.Security.ReadOnlyXmlRoleProvider 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.AddUsersToRoles(System.String[],System.String[])">
            <summary>设置 ReadOnlyXmlRoleProvider.AddUsersToRoles(String[] usernames, String[] roleNames) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.AddUsersToRolesStringArrayStringArray">
            <summary>设置 ReadOnlyXmlRoleProvider.AddUsersToRoles(String[] usernames, String[] roleNames) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.ApplicationNameGet">
            <summary>设置 ReadOnlyXmlRoleProvider.get_ApplicationName() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.ApplicationNameSetString">
            <summary>设置 ReadOnlyXmlRoleProvider.set_ApplicationName(String value) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.AttachBackingFieldToApplicationName">
            <summary>附加委托以将 StubReadOnlyXmlRoleProvider.ApplicationName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.CreateRole(System.String)">
            <summary>设置 ReadOnlyXmlRoleProvider.CreateRole(String roleName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.CreateRoleString">
            <summary>设置 ReadOnlyXmlRoleProvider.CreateRole(String roleName) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.DeleteRole(System.String,System.Boolean)">
            <summary>设置 ReadOnlyXmlRoleProvider.DeleteRole(String roleName, Boolean throwOnPopulatedRole) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.DeleteRoleStringBoolean">
            <summary>设置 ReadOnlyXmlRoleProvider.DeleteRole(String roleName, Boolean throwOnPopulatedRole) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.DescriptionGet">
            <summary>设置 ProviderBase.get_Description() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.FindUsersInRole(System.String,System.String)">
            <summary>设置 ReadOnlyXmlRoleProvider.FindUsersInRole(String roleName, String usernameToMatch) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.FindUsersInRoleStringString">
            <summary>设置 ReadOnlyXmlRoleProvider.FindUsersInRole(String roleName, String usernameToMatch) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.GetAllRoles">
            <summary>设置 ReadOnlyXmlRoleProvider.GetAllRoles() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.GetAllRoles01">
            <summary>设置 ReadOnlyXmlRoleProvider.GetAllRoles() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.GetRolesForUser(System.String)">
            <summary>设置 ReadOnlyXmlRoleProvider.GetRolesForUser(String username) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.GetRolesForUserString">
            <summary>设置 ReadOnlyXmlRoleProvider.GetRolesForUser(String username) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.GetUsersInRole(System.String)">
            <summary>设置 ReadOnlyXmlRoleProvider.GetUsersInRole(String roleName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.GetUsersInRoleString">
            <summary>设置 ReadOnlyXmlRoleProvider.GetUsersInRole(String roleName) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>设置 ReadOnlyXmlRoleProvider.Initialize(String name, NameValueCollection config) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.InitializeStringNameValueCollection">
            <summary>设置 ReadOnlyXmlRoleProvider.Initialize(String name, NameValueCollection config) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.InitializeStub">
            <summary>初始化 type StubReadOnlyXmlRoleProvider 的新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.IsUserInRole(System.String,System.String)">
            <summary>设置 ReadOnlyXmlRoleProvider.IsUserInRole(String username, String roleName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.IsUserInRoleStringString">
            <summary>设置 ReadOnlyXmlRoleProvider.IsUserInRole(String username, String roleName) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.NameGet">
            <summary>设置 ProviderBase.get_Name() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
            <summary>设置 ReadOnlyXmlRoleProvider.RemoveUsersFromRoles(String[] usernames, String[] roleNames) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.RemoveUsersFromRolesStringArrayStringArray">
            <summary>设置 ReadOnlyXmlRoleProvider.RemoveUsersFromRoles(String[] usernames, String[] roleNames) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.RoleExists(System.String)">
            <summary>设置 ReadOnlyXmlRoleProvider.RoleExists(String roleName) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.RoleExistsString">
            <summary>设置 ReadOnlyXmlRoleProvider.RoleExists(String roleName) 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.ApplicationName">
            <summary>设置 ReadOnlyXmlRoleProvider.get_ApplicationName() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.Description">
            <summary>设置 ProviderBase.get_Description() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DotNetCasClient.Security.Fakes.StubReadOnlyXmlRoleProvider.Name">
            <summary>设置 ProviderBase.get_Name() 的 stub</summary>
        </member>
        <member name="T:DotNetCasClient.State.Fakes.ShimMemoryCacheManager">
            <summary>DotNetCasClient.State.MemoryCacheManager 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.#ctor(DotNetCasClient.State.MemoryCacheManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 MemoryCacheManager.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.Clear">
            <summary>设置 MemoryCacheManager.Clear() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.Constructor">
            <summary>设置 MemoryCacheManager.MemoryCacheManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.ContainsString">
            <summary>设置 MemoryCacheManager.Contains(String key) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.Count">
            <summary>设置 MemoryCacheManager.Count() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.GetAll">
            <summary>设置 MemoryCacheManager.GetAll() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.GetString">
            <summary>设置 MemoryCacheManager.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.InstanceGet">
            <summary>设置 MemoryCacheManager.get_Instance() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.RemoveString">
            <summary>设置 MemoryCacheManager.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.SetStringObjectDateTime">
            <summary>设置 MemoryCacheManager.Set(String key, Object value, DateTime expiration) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.SetStringObjectTimeSpan">
            <summary>设置 MemoryCacheManager.Set(String key, Object value, TimeSpan expiration) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.StaticConstructor">
            <summary>设置 MemoryCacheManager.MemoryCacheManager() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DotNetCasClient.State.MemoryCacheManager,System.String,``0})">
            <summary>设置 MemoryCacheManager.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances.Clear">
            <summary>设置 MemoryCacheManager.Clear() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances.ContainsString">
            <summary>设置 MemoryCacheManager.Contains(String key) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances.Count">
            <summary>设置 MemoryCacheManager.Count() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances.GetAll">
            <summary>设置 MemoryCacheManager.GetAll() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances.GetString">
            <summary>设置 MemoryCacheManager.Get(String key) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances.RemoveString">
            <summary>设置 MemoryCacheManager.Remove(String key) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances.SetStringObjectDateTime">
            <summary>设置 MemoryCacheManager.Set(String key, Object value, DateTime expiration) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheManager.AllInstances.SetStringObjectTimeSpan">
            <summary>设置 MemoryCacheManager.Set(String key, Object value, TimeSpan expiration) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager">
            <summary>DotNetCasClient.State.MemoryCacheProxyTicketManager 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.#ctor(DotNetCasClient.State.MemoryCacheProxyTicketManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.Bind(DotNetCasClient.State.IProxyTicketManager)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.Constructor">
            <summary>设置 MemoryCacheProxyTicketManager.MemoryCacheProxyTicketManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.GetProxyGrantingTicketString">
            <summary>设置 MemoryCacheProxyTicketManager.GetProxyGrantingTicket(String proxyGrantingTicketIou) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.Initialize">
            <summary>设置 MemoryCacheProxyTicketManager.Initialize() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.InsertProxyGrantingTicketMappingStringString">
            <summary>设置 MemoryCacheProxyTicketManager.InsertProxyGrantingTicketMapping(String proxyGrantingTicketIou, String proxyGrantingTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.RemoveExpiredMappings">
            <summary>设置 MemoryCacheProxyTicketManager.RemoveExpiredMappings() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.StaticConstructor">
            <summary>设置 MemoryCacheProxyTicketManager.MemoryCacheProxyTicketManager() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.AllInstances.GetProxyGrantingTicketString">
            <summary>设置 MemoryCacheProxyTicketManager.GetProxyGrantingTicket(String proxyGrantingTicketIou) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.AllInstances.Initialize">
            <summary>设置 MemoryCacheProxyTicketManager.Initialize() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.AllInstances.InsertProxyGrantingTicketMappingStringString">
            <summary>设置 MemoryCacheProxyTicketManager.InsertProxyGrantingTicketMapping(String proxyGrantingTicketIou, String proxyGrantingTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheProxyTicketManager.AllInstances.RemoveExpiredMappings">
            <summary>设置 MemoryCacheProxyTicketManager.RemoveExpiredMappings() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager">
            <summary>DotNetCasClient.State.MemoryCacheServiceTicketManager 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.#ctor(DotNetCasClient.State.MemoryCacheServiceTicketManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.Bind(DotNetCasClient.State.IServiceTicketManager)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.Constructor">
            <summary>设置 MemoryCacheServiceTicketManager.MemoryCacheServiceTicketManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.ContainsTicketString">
            <summary>设置 MemoryCacheServiceTicketManager.ContainsTicket(String serviceTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.GetAllServiceTickets">
            <summary>设置 MemoryCacheServiceTicketManager.GetAllServiceTickets() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.GetAllTicketedUsers">
            <summary>设置 MemoryCacheServiceTicketManager.GetAllTicketedUsers() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.GetAllTickets">
            <summary>设置 MemoryCacheServiceTicketManager.GetAllTickets() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.GetTicketKeyString">
            <summary>设置 MemoryCacheServiceTicketManager.GetTicketKey(String serviceTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.GetTicketString">
            <summary>设置 MemoryCacheServiceTicketManager.GetTicket(String serviceTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.GetUserServiceTicketsString">
            <summary>设置 MemoryCacheServiceTicketManager.GetUserServiceTickets(String netId) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.GetUserTicketsString">
            <summary>设置 MemoryCacheServiceTicketManager.GetUserTickets(String netId) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.Initialize">
            <summary>设置 MemoryCacheServiceTicketManager.Initialize() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.InsertTicketCasAuthenticationTicketDateTime">
            <summary>设置 MemoryCacheServiceTicketManager.InsertTicket(CasAuthenticationTicket casAuthenticationTicket, DateTime expiration) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.RemoveExpiredTickets">
            <summary>设置 MemoryCacheServiceTicketManager.RemoveExpiredTickets() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.RevokeTicketString">
            <summary>设置 MemoryCacheServiceTicketManager.RevokeTicket(String serviceTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.RevokeUserTicketsString">
            <summary>设置 MemoryCacheServiceTicketManager.RevokeUserTickets(String netId) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.StaticConstructor">
            <summary>设置 MemoryCacheServiceTicketManager.MemoryCacheServiceTicketManager() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.UpdateTicketExpirationCasAuthenticationTicketDateTime">
            <summary>设置 MemoryCacheServiceTicketManager.UpdateTicketExpiration(CasAuthenticationTicket casAuthenticationTicket, DateTime newExpiration) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.VerifyClientTicketCasAuthenticationTicket">
            <summary>设置 MemoryCacheServiceTicketManager.VerifyClientTicket(CasAuthenticationTicket casAuthenticationTicket) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.ContainsTicketString">
            <summary>设置 MemoryCacheServiceTicketManager.ContainsTicket(String serviceTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.GetAllServiceTickets">
            <summary>设置 MemoryCacheServiceTicketManager.GetAllServiceTickets() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.GetAllTicketedUsers">
            <summary>设置 MemoryCacheServiceTicketManager.GetAllTicketedUsers() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.GetAllTickets">
            <summary>设置 MemoryCacheServiceTicketManager.GetAllTickets() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.GetTicketString">
            <summary>设置 MemoryCacheServiceTicketManager.GetTicket(String serviceTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.GetUserServiceTicketsString">
            <summary>设置 MemoryCacheServiceTicketManager.GetUserServiceTickets(String netId) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.GetUserTicketsString">
            <summary>设置 MemoryCacheServiceTicketManager.GetUserTickets(String netId) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.Initialize">
            <summary>设置 MemoryCacheServiceTicketManager.Initialize() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.InsertTicketCasAuthenticationTicketDateTime">
            <summary>设置 MemoryCacheServiceTicketManager.InsertTicket(CasAuthenticationTicket casAuthenticationTicket, DateTime expiration) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.RemoveExpiredTickets">
            <summary>设置 MemoryCacheServiceTicketManager.RemoveExpiredTickets() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.RevokeTicketString">
            <summary>设置 MemoryCacheServiceTicketManager.RevokeTicket(String serviceTicket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.RevokeUserTicketsString">
            <summary>设置 MemoryCacheServiceTicketManager.RevokeUserTickets(String netId) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.UpdateTicketExpirationCasAuthenticationTicketDateTime">
            <summary>设置 MemoryCacheServiceTicketManager.UpdateTicketExpiration(CasAuthenticationTicket casAuthenticationTicket, DateTime newExpiration) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.ShimMemoryCacheServiceTicketManager.AllInstances.VerifyClientTicketCasAuthenticationTicket">
            <summary>设置 MemoryCacheServiceTicketManager.VerifyClientTicket(CasAuthenticationTicket casAuthenticationTicket) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.State.Fakes.StubIProxyTicketManager">
            <summary>DotNetCasClient.State.IProxyTicketManager 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIProxyTicketManager.#ctor">
            <summary>初始化 type StubIProxyTicketManager 的新实例</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIProxyTicketManager.dncc::DotNetCasClient#State#IProxyTicketManager#GetProxyGrantingTicket(System.String)">
            <summary>设置 IProxyTicketManager.GetProxyGrantingTicket(String proxyGrantingTicketIou) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIProxyTicketManager.dncc::DotNetCasClient#State#IProxyTicketManager#Initialize">
            <summary>设置 IProxyTicketManager.Initialize() 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIProxyTicketManager.dncc::DotNetCasClient#State#IProxyTicketManager#InsertProxyGrantingTicketMapping(System.String,System.String)">
            <summary>设置 IProxyTicketManager.InsertProxyGrantingTicketMapping(String proxyGrantingTicketIou, String proxyGrantingTicket) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIProxyTicketManager.dncc::DotNetCasClient#State#IProxyTicketManager#RemoveExpiredMappings">
            <summary>设置 IProxyTicketManager.RemoveExpiredMappings() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIProxyTicketManager.GetProxyGrantingTicketString">
            <summary>设置 IProxyTicketManager.GetProxyGrantingTicket(String proxyGrantingTicketIou) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIProxyTicketManager.Initialize">
            <summary>设置 IProxyTicketManager.Initialize() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIProxyTicketManager.InsertProxyGrantingTicketMappingStringString">
            <summary>设置 IProxyTicketManager.InsertProxyGrantingTicketMapping(String proxyGrantingTicketIou, String proxyGrantingTicket) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIProxyTicketManager.RemoveExpiredMappings">
            <summary>设置 IProxyTicketManager.RemoveExpiredMappings() 的 stub</summary>
        </member>
        <member name="T:DotNetCasClient.State.Fakes.StubIServiceTicketManager">
            <summary>DotNetCasClient.State.IServiceTicketManager 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.#ctor">
            <summary>初始化 type StubIServiceTicketManager 的新实例</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.ContainsTicketString">
            <summary>设置 IServiceTicketManager.ContainsTicket(String serviceTicket) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#ContainsTicket(System.String)">
            <summary>设置 IServiceTicketManager.ContainsTicket(String serviceTicket) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#GetAllServiceTickets">
            <summary>设置 IServiceTicketManager.GetAllServiceTickets() 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#GetAllTicketedUsers">
            <summary>设置 IServiceTicketManager.GetAllTicketedUsers() 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#GetAllTickets">
            <summary>设置 IServiceTicketManager.GetAllTickets() 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#GetTicket(System.String)">
            <summary>设置 IServiceTicketManager.GetTicket(String serviceTicket) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#GetUserServiceTickets(System.String)">
            <summary>设置 IServiceTicketManager.GetUserServiceTickets(String netId) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#GetUserTickets(System.String)">
            <summary>设置 IServiceTicketManager.GetUserTickets(String netId) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#Initialize">
            <summary>设置 IServiceTicketManager.Initialize() 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#InsertTicket(DotNetCasClient.CasAuthenticationTicket,System.DateTime)">
            <summary>设置 IServiceTicketManager.InsertTicket(CasAuthenticationTicket casAuthenticationTicket, DateTime expiration) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#RemoveExpiredTickets">
            <summary>设置 IServiceTicketManager.RemoveExpiredTickets() 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#RevokeTicket(System.String)">
            <summary>设置 IServiceTicketManager.RevokeTicket(String serviceTicket) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#RevokeUserTickets(System.String)">
            <summary>设置 IServiceTicketManager.RevokeUserTickets(String netId) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#UpdateTicketExpiration(DotNetCasClient.CasAuthenticationTicket,System.DateTime)">
            <summary>设置 IServiceTicketManager.UpdateTicketExpiration(CasAuthenticationTicket casAuthenticationTicket, DateTime newExpiration) 的 存根</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubIServiceTicketManager.dncc::DotNetCasClient#State#IServiceTicketManager#VerifyClientTicket(DotNetCasClient.CasAuthenticationTicket)">
            <summary>设置 IServiceTicketManager.VerifyClientTicket(CasAuthenticationTicket casAuthenticationTicket) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.GetAllServiceTickets">
            <summary>设置 IServiceTicketManager.GetAllServiceTickets() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.GetAllTicketedUsers">
            <summary>设置 IServiceTicketManager.GetAllTicketedUsers() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.GetAllTickets">
            <summary>设置 IServiceTicketManager.GetAllTickets() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.GetTicketString">
            <summary>设置 IServiceTicketManager.GetTicket(String serviceTicket) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.GetUserServiceTicketsString">
            <summary>设置 IServiceTicketManager.GetUserServiceTickets(String netId) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.GetUserTicketsString">
            <summary>设置 IServiceTicketManager.GetUserTickets(String netId) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.Initialize">
            <summary>设置 IServiceTicketManager.Initialize() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.InsertTicketCasAuthenticationTicketDateTime">
            <summary>设置 IServiceTicketManager.InsertTicket(CasAuthenticationTicket casAuthenticationTicket, DateTime expiration) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.RemoveExpiredTickets">
            <summary>设置 IServiceTicketManager.RemoveExpiredTickets() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.RevokeTicketString">
            <summary>设置 IServiceTicketManager.RevokeTicket(String serviceTicket) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.RevokeUserTicketsString">
            <summary>设置 IServiceTicketManager.RevokeUserTickets(String netId) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.UpdateTicketExpirationCasAuthenticationTicketDateTime">
            <summary>设置 IServiceTicketManager.UpdateTicketExpiration(CasAuthenticationTicket casAuthenticationTicket, DateTime newExpiration) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.State.Fakes.StubIServiceTicketManager.VerifyClientTicketCasAuthenticationTicket">
            <summary>设置 IServiceTicketManager.VerifyClientTicket(CasAuthenticationTicket casAuthenticationTicket) 的 stub</summary>
        </member>
        <member name="T:DotNetCasClient.State.Fakes.StubMemoryCacheProxyTicketManager">
            <summary>DotNetCasClient.State.MemoryCacheProxyTicketManager 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubMemoryCacheProxyTicketManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.State.Fakes.StubMemoryCacheProxyTicketManager.InitializeStub">
            <summary>初始化 type StubMemoryCacheProxyTicketManager 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.StubMemoryCacheProxyTicketManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.StubMemoryCacheProxyTicketManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.State.Fakes.StubMemoryCacheProxyTicketManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Utils.Fakes.ShimAssertionUtil">
            <summary>DotNetCasClient.Utils.AssertionUtil 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimAssertionUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimAssertionUtil.#ctor(DotNetCasClient.Utils.AssertionUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimAssertionUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimAssertionUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimAssertionUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimAssertionUtil.Constructor">
            <summary>设置 AssertionUtil.AssertionUtil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimAssertionUtil.GetAttributeString">
            <summary>设置 AssertionUtil.GetAttribute(String attributeName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimAssertionUtil.GetAttributesString">
            <summary>设置 AssertionUtil.GetAttributes(String attributeName) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Utils.Fakes.ShimAssertionUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Utils.Fakes.ShimCommonUtils">
            <summary>DotNetCasClient.Utils.CommonUtils 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimCommonUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimCommonUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimCommonUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimCommonUtils.AssertNotNullObjectString">
            <summary>设置 CommonUtils.AssertNotNull(Object entity, String message) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimCommonUtils.AssertNotNullOrEmptyStringString">
            <summary>设置 CommonUtils.AssertNotNullOrEmpty(String entity, String message) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimCommonUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder">
            <summary>DotNetCasClient.Utils.EnhancedUriBuilder 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.#ctor(DotNetCasClient.Utils.EnhancedUriBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.CombineStringString">
            <summary>设置 EnhancedUriBuilder.Combine(String hostOrPathPortion, String pathPortion) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.Constructor">
            <summary>设置 EnhancedUriBuilder.EnhancedUriBuilder() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.ConstructorString">
            <summary>设置 EnhancedUriBuilder.EnhancedUriBuilder(String uri) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.ConstructorStringString">
            <summary>设置 EnhancedUriBuilder.EnhancedUriBuilder(String schemeName, String hostName) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.ConstructorStringStringInt32">
            <summary>设置 EnhancedUriBuilder.EnhancedUriBuilder(String scheme, String host, Int32 portNumber) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.ConstructorStringStringInt32String">
            <summary>设置 EnhancedUriBuilder.EnhancedUriBuilder(String scheme, String host, Int32 port, String pathValue) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.ConstructorStringStringInt32StringString">
            <summary>设置 EnhancedUriBuilder.EnhancedUriBuilder(String scheme, String host, Int32 port, String path, String extraValue) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.ConstructorUri">
            <summary>设置 EnhancedUriBuilder.EnhancedUriBuilder(Uri uri) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.CreateItemsFromQuery">
            <summary>设置 EnhancedUriBuilder.CreateItemsFromQuery() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.CreateQueryFromItems">
            <summary>设置 EnhancedUriBuilder.CreateQueryFromItems() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.QueryGet">
            <summary>设置 EnhancedUriBuilder.get_Query() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.QueryItemsGet">
            <summary>设置 EnhancedUriBuilder.get_QueryItems() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.QuerySetString">
            <summary>设置 EnhancedUriBuilder.set_Query(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.SyncQuery">
            <summary>设置 EnhancedUriBuilder.SyncQuery() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.SyncQueryItems">
            <summary>设置 EnhancedUriBuilder.SyncQueryItems() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.ToString">
            <summary>设置 EnhancedUriBuilder.ToString() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.UriGet">
            <summary>设置 EnhancedUriBuilder.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances.CreateItemsFromQuery">
            <summary>设置 EnhancedUriBuilder.CreateItemsFromQuery() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances.CreateQueryFromItems">
            <summary>设置 EnhancedUriBuilder.CreateQueryFromItems() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances.QueryGet">
            <summary>设置 EnhancedUriBuilder.get_Query() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances.QueryItemsGet">
            <summary>设置 EnhancedUriBuilder.get_QueryItems() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances.QuerySetString">
            <summary>设置 EnhancedUriBuilder.set_Query(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances.SyncQuery">
            <summary>设置 EnhancedUriBuilder.SyncQuery() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances.SyncQueryItems">
            <summary>设置 EnhancedUriBuilder.SyncQueryItems() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances.ToString01">
            <summary>设置 EnhancedUriBuilder.ToString() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimEnhancedUriBuilder.AllInstances.UriGet">
            <summary>设置 EnhancedUriBuilder.get_Uri() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Utils.Fakes.ShimUrlUtil">
            <summary>DotNetCasClient.Utils.UrlUtil 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimUrlUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimUrlUtil.#ctor(DotNetCasClient.Utils.UrlUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimUrlUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.ShimUrlUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.ConstructLoginRedirectUrlBooleanBoolean">
            <summary>设置 UrlUtil.ConstructLoginRedirectUrl(Boolean gateway, Boolean renew) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.ConstructProxyCallbackUrl">
            <summary>设置 UrlUtil.ConstructProxyCallbackUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.ConstructProxyCallbackUrlBoolean">
            <summary>设置 UrlUtil.ConstructProxyCallbackUrl(Boolean gateway) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.ConstructProxyTicketRequestUrlStringString">
            <summary>设置 UrlUtil.ConstructProxyTicketRequestUrl(String proxyGrantingTicketId, String targetService) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.ConstructServiceUrlBoolean">
            <summary>设置 UrlUtil.ConstructServiceUrl(Boolean gateway) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.ConstructSingleSignOutRedirectUrl">
            <summary>设置 UrlUtil.ConstructSingleSignOutRedirectUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.ConstructValidateUrlStringBooleanBooleanNameValueCollection">
            <summary>设置 UrlUtil.ConstructValidateUrl(String serviceTicket, Boolean gateway, Boolean renew, NameValueCollection customParameters) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.Constructor">
            <summary>设置 UrlUtil.UrlUtil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.GetProxyRedirectUrlString">
            <summary>设置 UrlUtil.GetProxyRedirectUrl(String targetService) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.GetProxyRedirectUrlStringString">
            <summary>设置 UrlUtil.GetProxyRedirectUrl(String targetService, String proxyTicketUrlParameter) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.RemoveCasArtifactsFromUrlString">
            <summary>设置 UrlUtil.RemoveCasArtifactsFromUrl(String url) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.ShimUrlUtil.ResolveUrlString">
            <summary>设置 UrlUtil.ResolveUrl(String url) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Utils.Fakes.ShimUrlUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder">
            <summary>DotNetCasClient.Utils.EnhancedUriBuilder 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.#ctor(System.Uri)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.#ctor(System.String,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.Equals(System.Object)">
            <summary>设置 UriBuilder.Equals(Object rparam) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.EqualsObject">
            <summary>设置 UriBuilder.Equals(Object rparam) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.GetHashCode">
            <summary>设置 UriBuilder.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.GetHashCode01">
            <summary>设置 UriBuilder.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.InitializeStub">
            <summary>初始化 type StubEnhancedUriBuilder 的新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.ToString">
            <summary>设置 EnhancedUriBuilder.ToString() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.ToString01">
            <summary>设置 EnhancedUriBuilder.ToString() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Utils.Fakes.StubEnhancedUriBuilder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Fakes.ShimTicketValidationException">
            <summary>DotNetCasClient.Validation.TicketValidationException 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.#ctor(DotNetCasClient.Validation.TicketValidationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.CodeGet">
            <summary>设置 TicketValidationException.get_Code() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.CodeSetString">
            <summary>设置 TicketValidationException.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.ConstructorString">
            <summary>设置 TicketValidationException.TicketValidationException(String message) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.ConstructorStringException">
            <summary>设置 TicketValidationException.TicketValidationException(String message, Exception exception) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.ConstructorStringString">
            <summary>设置 TicketValidationException.TicketValidationException(String message, String code) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.ConstructorStringStringException">
            <summary>设置 TicketValidationException.TicketValidationException(String message, String code, Exception exception) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.AllInstances.CodeGet">
            <summary>设置 TicketValidationException.get_Code() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.ShimTicketValidationException.AllInstances.CodeSetString">
            <summary>设置 TicketValidationException.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Fakes.StubTicketValidationException">
            <summary>DotNetCasClient.Validation.TicketValidationException 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.#ctor(System.String,System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubTicketValidationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubTicketValidationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.InitializeStub">
            <summary>初始化 type StubTicketValidationException 的新实例</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Fakes.StubTicketValidationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.Fakes.StubTicketValidationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.StubTicketValidationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.StubTicketValidationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.StubTicketValidationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.StubTicketValidationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.StubTicketValidationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.StubTicketValidationException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.StubTicketValidationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Fakes.StubTicketValidationException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure">
            <summary>DotNetCasClient.Validation.Schema.Cas20.ClearPass.ClearPassFailure 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.#ctor(DotNetCasClient.Validation.Schema.Cas20.ClearPass.ClearPassFailure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.Constructor">
            <summary>设置 ClearPassFailure.ClearPassFailure() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.MessageGet">
            <summary>设置 ClearPassFailure.get_Message() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.MessageSetString">
            <summary>设置 ClearPassFailure.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.AllInstances.MessageGet">
            <summary>设置 ClearPassFailure.get_Message() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassFailure.AllInstances.MessageSetString">
            <summary>设置 ClearPassFailure.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse">
            <summary>DotNetCasClient.Validation.Schema.Cas20.ClearPass.ClearPassResponse 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.#ctor(DotNetCasClient.Validation.Schema.Cas20.ClearPass.ClearPassResponse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.Constructor">
            <summary>设置 ClearPassResponse.ClearPassResponse() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.IsClearPassFailureGet">
            <summary>设置 ClearPassResponse.get_IsClearPassFailure() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.IsClearPassSuccessGet">
            <summary>设置 ClearPassResponse.get_IsClearPassSuccess() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.ItemGet">
            <summary>设置 ClearPassResponse.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.ItemSetObject">
            <summary>设置 ClearPassResponse.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.ParseResponseString">
            <summary>设置 ClearPassResponse.ParseResponse(String responseXml) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.AllInstances.IsClearPassFailureGet">
            <summary>设置 ClearPassResponse.get_IsClearPassFailure() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.AllInstances.IsClearPassSuccessGet">
            <summary>设置 ClearPassResponse.get_IsClearPassSuccess() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.AllInstances.ItemGet">
            <summary>设置 ClearPassResponse.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassResponse.AllInstances.ItemSetObject">
            <summary>设置 ClearPassResponse.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess">
            <summary>DotNetCasClient.Validation.Schema.Cas20.ClearPass.ClearPassSuccess 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.#ctor(DotNetCasClient.Validation.Schema.Cas20.ClearPass.ClearPassSuccess)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.Constructor">
            <summary>设置 ClearPassSuccess.ClearPassSuccess() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.CredentialsGet">
            <summary>设置 ClearPassSuccess.get_Credentials() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.CredentialsSetString">
            <summary>设置 ClearPassSuccess.set_Credentials(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.AllInstances.CredentialsGet">
            <summary>设置 ClearPassSuccess.get_Credentials() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.ClearPass.Fakes.ShimClearPassSuccess.AllInstances.CredentialsSetString">
            <summary>设置 ClearPassSuccess.set_Credentials(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure">
            <summary>DotNetCasClient.Validation.Schema.Cas20.AuthenticationFailure 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.#ctor(DotNetCasClient.Validation.Schema.Cas20.AuthenticationFailure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.CodeGet">
            <summary>设置 AuthenticationFailure.get_Code() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.CodeSetString">
            <summary>设置 AuthenticationFailure.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.Constructor">
            <summary>设置 AuthenticationFailure.AuthenticationFailure() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.IsInternalErrorGet">
            <summary>设置 AuthenticationFailure.get_IsInternalError() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.IsInvalidRequesterGet">
            <summary>设置 AuthenticationFailure.get_IsInvalidRequester() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.IsInvalidServiceGet">
            <summary>设置 AuthenticationFailure.get_IsInvalidService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.IsInvalidTicketGet">
            <summary>设置 AuthenticationFailure.get_IsInvalidTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.MessageGet">
            <summary>设置 AuthenticationFailure.get_Message() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.MessageSetString">
            <summary>设置 AuthenticationFailure.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.AllInstances.CodeGet">
            <summary>设置 AuthenticationFailure.get_Code() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.AllInstances.CodeSetString">
            <summary>设置 AuthenticationFailure.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.AllInstances.IsInternalErrorGet">
            <summary>设置 AuthenticationFailure.get_IsInternalError() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.AllInstances.IsInvalidRequesterGet">
            <summary>设置 AuthenticationFailure.get_IsInvalidRequester() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.AllInstances.IsInvalidServiceGet">
            <summary>设置 AuthenticationFailure.get_IsInvalidService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.AllInstances.IsInvalidTicketGet">
            <summary>设置 AuthenticationFailure.get_IsInvalidTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.AllInstances.MessageGet">
            <summary>设置 AuthenticationFailure.get_Message() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationFailure.AllInstances.MessageSetString">
            <summary>设置 AuthenticationFailure.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess">
            <summary>DotNetCasClient.Validation.Schema.Cas20.AuthenticationSuccess 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.#ctor(DotNetCasClient.Validation.Schema.Cas20.AuthenticationSuccess)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.Constructor">
            <summary>设置 AuthenticationSuccess.AuthenticationSuccess() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.ProxiesGet">
            <summary>设置 AuthenticationSuccess.get_Proxies() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.ProxiesSetStringArray">
            <summary>设置 AuthenticationSuccess.set_Proxies(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.ProxyGrantingTicketGet">
            <summary>设置 AuthenticationSuccess.get_ProxyGrantingTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.ProxyGrantingTicketSetString">
            <summary>设置 AuthenticationSuccess.set_ProxyGrantingTicket(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.UserGet">
            <summary>设置 AuthenticationSuccess.get_User() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.UserSetString">
            <summary>设置 AuthenticationSuccess.set_User(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.AllInstances.ProxiesGet">
            <summary>设置 AuthenticationSuccess.get_Proxies() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.AllInstances.ProxiesSetStringArray">
            <summary>设置 AuthenticationSuccess.set_Proxies(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.AllInstances.ProxyGrantingTicketGet">
            <summary>设置 AuthenticationSuccess.get_ProxyGrantingTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.AllInstances.ProxyGrantingTicketSetString">
            <summary>设置 AuthenticationSuccess.set_ProxyGrantingTicket(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.AllInstances.UserGet">
            <summary>设置 AuthenticationSuccess.get_User() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimAuthenticationSuccess.AllInstances.UserSetString">
            <summary>设置 AuthenticationSuccess.set_User(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure">
            <summary>DotNetCasClient.Validation.Schema.Cas20.ProxyFailure 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.#ctor(DotNetCasClient.Validation.Schema.Cas20.ProxyFailure)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.CodeGet">
            <summary>设置 ProxyFailure.get_Code() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.CodeSetString">
            <summary>设置 ProxyFailure.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.Constructor">
            <summary>设置 ProxyFailure.ProxyFailure() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.MessageGet">
            <summary>设置 ProxyFailure.get_Message() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.MessageSetString">
            <summary>设置 ProxyFailure.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.AllInstances.CodeGet">
            <summary>设置 ProxyFailure.get_Code() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.AllInstances.CodeSetString">
            <summary>设置 ProxyFailure.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.AllInstances.MessageGet">
            <summary>设置 ProxyFailure.get_Message() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxyFailure.AllInstances.MessageSetString">
            <summary>设置 ProxyFailure.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess">
            <summary>DotNetCasClient.Validation.Schema.Cas20.ProxySuccess 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.#ctor(DotNetCasClient.Validation.Schema.Cas20.ProxySuccess)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.Constructor">
            <summary>设置 ProxySuccess.ProxySuccess() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.ProxyTicketGet">
            <summary>设置 ProxySuccess.get_ProxyTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.ProxyTicketSetString">
            <summary>设置 ProxySuccess.set_ProxyTicket(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.AllInstances.ProxyTicketGet">
            <summary>设置 ProxySuccess.get_ProxyTicket() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimProxySuccess.AllInstances.ProxyTicketSetString">
            <summary>设置 ProxySuccess.set_ProxyTicket(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse">
            <summary>DotNetCasClient.Validation.Schema.Cas20.ServiceResponse 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.#ctor(DotNetCasClient.Validation.Schema.Cas20.ServiceResponse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.Constructor">
            <summary>设置 ServiceResponse.ServiceResponse() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.IsAuthenticationFailureGet">
            <summary>设置 ServiceResponse.get_IsAuthenticationFailure() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.IsAuthenticationSuccessGet">
            <summary>设置 ServiceResponse.get_IsAuthenticationSuccess() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.IsProxyFailureGet">
            <summary>设置 ServiceResponse.get_IsProxyFailure() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.IsProxySuccessGet">
            <summary>设置 ServiceResponse.get_IsProxySuccess() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.ItemGet">
            <summary>设置 ServiceResponse.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.ItemSetObject">
            <summary>设置 ServiceResponse.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.ParseResponseString">
            <summary>设置 ServiceResponse.ParseResponse(String responseXml) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.AllInstances.IsAuthenticationFailureGet">
            <summary>设置 ServiceResponse.get_IsAuthenticationFailure() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.AllInstances.IsAuthenticationSuccessGet">
            <summary>设置 ServiceResponse.get_IsAuthenticationSuccess() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.AllInstances.IsProxyFailureGet">
            <summary>设置 ServiceResponse.get_IsProxyFailure() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.AllInstances.IsProxySuccessGet">
            <summary>设置 ServiceResponse.get_IsProxySuccess() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.AllInstances.ItemGet">
            <summary>设置 ServiceResponse.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Cas20.Fakes.ShimServiceResponse.AllInstances.ItemSetObject">
            <summary>设置 ServiceResponse.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.AttributeDesignatorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.AttributeDesignatorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.AttributeNameGet">
            <summary>设置 AttributeDesignatorType.get_AttributeName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.AttributeNameSetString">
            <summary>设置 AttributeDesignatorType.set_AttributeName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.AttributeNamespaceGet">
            <summary>设置 AttributeDesignatorType.get_AttributeNamespace() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.AttributeNamespaceSetString">
            <summary>设置 AttributeDesignatorType.set_AttributeNamespace(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.Constructor">
            <summary>设置 AttributeDesignatorType.AttributeDesignatorType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.AllInstances.AttributeNameGet">
            <summary>设置 AttributeDesignatorType.get_AttributeName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.AllInstances.AttributeNameSetString">
            <summary>设置 AttributeDesignatorType.set_AttributeName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.AllInstances.AttributeNamespaceGet">
            <summary>设置 AttributeDesignatorType.get_AttributeNamespace() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeDesignatorType.AllInstances.AttributeNamespaceSetString">
            <summary>设置 AttributeDesignatorType.set_AttributeNamespace(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.AttributeType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.AttributeType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.AttributeValueGet">
            <summary>设置 AttributeType.get_AttributeValue() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.AttributeValueSetObjectArray">
            <summary>设置 AttributeType.set_AttributeValue(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.Constructor">
            <summary>设置 AttributeType.AttributeType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.AttributeValueGet">
            <summary>设置 AttributeType.get_AttributeValue() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.AttributeValueSetObjectArray">
            <summary>设置 AttributeType.set_AttributeValue(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeDesignatorType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.AttributeDesignatorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeDesignatorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeDesignatorType.InitializeStub">
            <summary>初始化 type StubAttributeDesignatorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeDesignatorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeDesignatorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeDesignatorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.AttributeType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeType.InitializeStub">
            <summary>初始化 type StubAttributeType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Attribute.Fakes.StubAttributeType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.ActionType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.ActionType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.Constructor">
            <summary>设置 ActionType.ActionType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.NamespaceGet">
            <summary>设置 ActionType.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.NamespaceSetString">
            <summary>设置 ActionType.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.ValueGet">
            <summary>设置 ActionType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.ValueSetString">
            <summary>设置 ActionType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.AllInstances.NamespaceGet">
            <summary>设置 ActionType.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.AllInstances.NamespaceSetString">
            <summary>设置 ActionType.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.AllInstances.ValueGet">
            <summary>设置 ActionType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimActionType.AllInstances.ValueSetString">
            <summary>设置 ActionType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.AdviceType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.AdviceType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.Constructor">
            <summary>设置 AdviceType.AdviceType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.ItemsGet">
            <summary>设置 AdviceType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.ItemsSetObjectArray">
            <summary>设置 AdviceType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.AllInstances.ItemsGet">
            <summary>设置 AdviceType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAdviceType.AllInstances.ItemsSetObjectArray">
            <summary>设置 AdviceType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.AssertionType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.AssertionType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AdviceGet">
            <summary>设置 AssertionType.get_Advice() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AdviceSetObjectArray">
            <summary>设置 AssertionType.set_Advice(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AssertionIdGet">
            <summary>设置 AssertionType.get_AssertionId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AssertionIdSetString">
            <summary>设置 AssertionType.set_AssertionId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.ConditionsGet">
            <summary>设置 AssertionType.get_Conditions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.ConditionsSetConditionsType">
            <summary>设置 AssertionType.set_Conditions(ConditionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.Constructor">
            <summary>设置 AssertionType.AssertionType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.IssueInstantGet">
            <summary>设置 AssertionType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.IssueInstantSetDateTime">
            <summary>设置 AssertionType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.IssuerGet">
            <summary>设置 AssertionType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.IssuerSetString">
            <summary>设置 AssertionType.set_Issuer(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.ItemsGet">
            <summary>设置 AssertionType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.ItemsSetStatementAbstractTypeArray">
            <summary>设置 AssertionType.set_Items(StatementAbstractType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.MajorVersionGet">
            <summary>设置 AssertionType.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.MajorVersionSetString">
            <summary>设置 AssertionType.set_MajorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.MinorVersionGet">
            <summary>设置 AssertionType.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.MinorVersionSetString">
            <summary>设置 AssertionType.set_MinorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.SignatureGet">
            <summary>设置 AssertionType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.SignatureSetSignatureType">
            <summary>设置 AssertionType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.AdviceGet">
            <summary>设置 AssertionType.get_Advice() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.AdviceSetObjectArray">
            <summary>设置 AssertionType.set_Advice(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.AssertionIdGet">
            <summary>设置 AssertionType.get_AssertionId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.AssertionIdSetString">
            <summary>设置 AssertionType.set_AssertionId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.ConditionsGet">
            <summary>设置 AssertionType.get_Conditions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.ConditionsSetConditionsType">
            <summary>设置 AssertionType.set_Conditions(ConditionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.IssueInstantGet">
            <summary>设置 AssertionType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.IssueInstantSetDateTime">
            <summary>设置 AssertionType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.IssuerGet">
            <summary>设置 AssertionType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.IssuerSetString">
            <summary>设置 AssertionType.set_Issuer(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.ItemsGet">
            <summary>设置 AssertionType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.ItemsSetStatementAbstractTypeArray">
            <summary>设置 AssertionType.set_Items(StatementAbstractType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.MajorVersionGet">
            <summary>设置 AssertionType.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.MajorVersionSetString">
            <summary>设置 AssertionType.set_MajorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.MinorVersionGet">
            <summary>设置 AssertionType.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.MinorVersionSetString">
            <summary>设置 AssertionType.set_MinorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.SignatureGet">
            <summary>设置 AssertionType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAssertionType.AllInstances.SignatureSetSignatureType">
            <summary>设置 AssertionType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.AudienceRestrictionConditionType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.AudienceRestrictionConditionType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.AudienceGet">
            <summary>设置 AudienceRestrictionConditionType.get_Audience() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.AudienceSetStringArray">
            <summary>设置 AudienceRestrictionConditionType.set_Audience(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.Constructor">
            <summary>设置 AudienceRestrictionConditionType.AudienceRestrictionConditionType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.AllInstances.AudienceGet">
            <summary>设置 AudienceRestrictionConditionType.get_Audience() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAudienceRestrictionConditionType.AllInstances.AudienceSetStringArray">
            <summary>设置 AudienceRestrictionConditionType.set_Audience(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.AuthorityBindingType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.AuthorityBindingType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.AuthorityKindGet">
            <summary>设置 AuthorityBindingType.get_AuthorityKind() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.AuthorityKindSetXmlQualifiedName">
            <summary>设置 AuthorityBindingType.set_AuthorityKind(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.BindingGet">
            <summary>设置 AuthorityBindingType.get_Binding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.BindingSetString">
            <summary>设置 AuthorityBindingType.set_Binding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.Constructor">
            <summary>设置 AuthorityBindingType.AuthorityBindingType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.LocationGet">
            <summary>设置 AuthorityBindingType.get_Location() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.LocationSetString">
            <summary>设置 AuthorityBindingType.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.AllInstances.AuthorityKindGet">
            <summary>设置 AuthorityBindingType.get_AuthorityKind() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.AllInstances.AuthorityKindSetXmlQualifiedName">
            <summary>设置 AuthorityBindingType.set_AuthorityKind(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.AllInstances.BindingGet">
            <summary>设置 AuthorityBindingType.get_Binding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.AllInstances.BindingSetString">
            <summary>设置 AuthorityBindingType.set_Binding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.AllInstances.LocationGet">
            <summary>设置 AuthorityBindingType.get_Location() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimAuthorityBindingType.AllInstances.LocationSetString">
            <summary>设置 AuthorityBindingType.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.ConditionAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.ConditionAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionAbstractType.Constructor">
            <summary>设置 ConditionAbstractType.ConditionAbstractType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.ConditionsType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.ConditionsType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.Constructor">
            <summary>设置 ConditionsType.ConditionsType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.ItemsGet">
            <summary>设置 ConditionsType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.ItemsSetConditionAbstractTypeArray">
            <summary>设置 ConditionsType.set_Items(ConditionAbstractType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.NotBeforeGet">
            <summary>设置 ConditionsType.get_NotBefore() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.NotBeforeSetDateTime">
            <summary>设置 ConditionsType.set_NotBefore(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.NotBeforeSpecifiedGet">
            <summary>设置 ConditionsType.get_NotBeforeSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.NotBeforeSpecifiedSetBoolean">
            <summary>设置 ConditionsType.set_NotBeforeSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.NotOnOrAfterGet">
            <summary>设置 ConditionsType.get_NotOnOrAfter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.NotOnOrAfterSetDateTime">
            <summary>设置 ConditionsType.set_NotOnOrAfter(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.NotOnOrAfterSpecifiedGet">
            <summary>设置 ConditionsType.get_NotOnOrAfterSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.NotOnOrAfterSpecifiedSetBoolean">
            <summary>设置 ConditionsType.set_NotOnOrAfterSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.ItemsGet">
            <summary>设置 ConditionsType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.ItemsSetConditionAbstractTypeArray">
            <summary>设置 ConditionsType.set_Items(ConditionAbstractType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.NotBeforeGet">
            <summary>设置 ConditionsType.get_NotBefore() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.NotBeforeSetDateTime">
            <summary>设置 ConditionsType.set_NotBefore(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.NotBeforeSpecifiedGet">
            <summary>设置 ConditionsType.get_NotBeforeSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.NotBeforeSpecifiedSetBoolean">
            <summary>设置 ConditionsType.set_NotBeforeSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.NotOnOrAfterGet">
            <summary>设置 ConditionsType.get_NotOnOrAfter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.NotOnOrAfterSetDateTime">
            <summary>设置 ConditionsType.set_NotOnOrAfter(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.NotOnOrAfterSpecifiedGet">
            <summary>设置 ConditionsType.get_NotOnOrAfterSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimConditionsType.AllInstances.NotOnOrAfterSpecifiedSetBoolean">
            <summary>设置 ConditionsType.set_NotOnOrAfterSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimDoNotCacheConditionType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.DoNotCacheConditionType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimDoNotCacheConditionType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimDoNotCacheConditionType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.DoNotCacheConditionType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimDoNotCacheConditionType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimDoNotCacheConditionType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimDoNotCacheConditionType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimDoNotCacheConditionType.Constructor">
            <summary>设置 DoNotCacheConditionType.DoNotCacheConditionType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimDoNotCacheConditionType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.EvidenceType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.EvidenceType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.Constructor">
            <summary>设置 EvidenceType.EvidenceType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.ItemsGet">
            <summary>设置 EvidenceType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.ItemsSetObjectArray">
            <summary>设置 EvidenceType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.AllInstances.ItemsGet">
            <summary>设置 EvidenceType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimEvidenceType.AllInstances.ItemsSetObjectArray">
            <summary>设置 EvidenceType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.NameIdentifierType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.NameIdentifierType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.Constructor">
            <summary>设置 NameIdentifierType.NameIdentifierType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.FormatGet">
            <summary>设置 NameIdentifierType.get_Format() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.FormatSetString">
            <summary>设置 NameIdentifierType.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.NameQualifierGet">
            <summary>设置 NameIdentifierType.get_NameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.NameQualifierSetString">
            <summary>设置 NameIdentifierType.set_NameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.ValueGet">
            <summary>设置 NameIdentifierType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.ValueSetString">
            <summary>设置 NameIdentifierType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.AllInstances.FormatGet">
            <summary>设置 NameIdentifierType.get_Format() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.AllInstances.FormatSetString">
            <summary>设置 NameIdentifierType.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.AllInstances.NameQualifierGet">
            <summary>设置 NameIdentifierType.get_NameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.AllInstances.NameQualifierSetString">
            <summary>设置 NameIdentifierType.set_NameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.AllInstances.ValueGet">
            <summary>设置 NameIdentifierType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimNameIdentifierType.AllInstances.ValueSetString">
            <summary>设置 NameIdentifierType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectConfirmationType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectConfirmationType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.ConfirmationMethodGet">
            <summary>设置 SubjectConfirmationType.get_ConfirmationMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.ConfirmationMethodSetStringArray">
            <summary>设置 SubjectConfirmationType.set_ConfirmationMethod(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.Constructor">
            <summary>设置 SubjectConfirmationType.SubjectConfirmationType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.KeyInfoGet">
            <summary>设置 SubjectConfirmationType.get_KeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.KeyInfoSetKeyInfoType">
            <summary>设置 SubjectConfirmationType.set_KeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.SubjectConfirmationDataGet">
            <summary>设置 SubjectConfirmationType.get_SubjectConfirmationData() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.SubjectConfirmationDataSetObject">
            <summary>设置 SubjectConfirmationType.set_SubjectConfirmationData(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.ConfirmationMethodGet">
            <summary>设置 SubjectConfirmationType.get_ConfirmationMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.ConfirmationMethodSetStringArray">
            <summary>设置 SubjectConfirmationType.set_ConfirmationMethod(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.KeyInfoGet">
            <summary>设置 SubjectConfirmationType.get_KeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.KeyInfoSetKeyInfoType">
            <summary>设置 SubjectConfirmationType.set_KeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.SubjectConfirmationDataGet">
            <summary>设置 SubjectConfirmationType.get_SubjectConfirmationData() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.SubjectConfirmationDataSetObject">
            <summary>设置 SubjectConfirmationType.set_SubjectConfirmationData(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectLocalityType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectLocalityType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.Constructor">
            <summary>设置 SubjectLocalityType.SubjectLocalityType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.DnsAddressGet">
            <summary>设置 SubjectLocalityType.get_DnsAddress() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.DnsAddressSetString">
            <summary>设置 SubjectLocalityType.set_DnsAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.IpAddressGet">
            <summary>设置 SubjectLocalityType.get_IpAddress() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.IpAddressSetString">
            <summary>设置 SubjectLocalityType.set_IpAddress(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.AllInstances.DnsAddressGet">
            <summary>设置 SubjectLocalityType.get_DnsAddress() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.AllInstances.DnsAddressSetString">
            <summary>设置 SubjectLocalityType.set_DnsAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.AllInstances.IpAddressGet">
            <summary>设置 SubjectLocalityType.get_IpAddress() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectLocalityType.AllInstances.IpAddressSetString">
            <summary>设置 SubjectLocalityType.set_IpAddress(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.Constructor">
            <summary>设置 SubjectType.SubjectType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.ItemsGet">
            <summary>设置 SubjectType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.ItemsSetObjectArray">
            <summary>设置 SubjectType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.AllInstances.ItemsGet">
            <summary>设置 SubjectType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.ShimSubjectType.AllInstances.ItemsSetObjectArray">
            <summary>设置 SubjectType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubActionType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.ActionType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubActionType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubActionType.InitializeStub">
            <summary>初始化 type StubActionType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubActionType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubActionType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubActionType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAdviceType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.AdviceType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAdviceType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAdviceType.InitializeStub">
            <summary>初始化 type StubAdviceType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAdviceType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAdviceType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAdviceType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAssertionType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.AssertionType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAssertionType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAssertionType.InitializeStub">
            <summary>初始化 type StubAssertionType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAssertionType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAssertionType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAssertionType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAudienceRestrictionConditionType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.AudienceRestrictionConditionType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAudienceRestrictionConditionType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAudienceRestrictionConditionType.InitializeStub">
            <summary>初始化 type StubAudienceRestrictionConditionType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAudienceRestrictionConditionType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAudienceRestrictionConditionType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAudienceRestrictionConditionType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAuthorityBindingType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.AuthorityBindingType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAuthorityBindingType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAuthorityBindingType.InitializeStub">
            <summary>初始化 type StubAuthorityBindingType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAuthorityBindingType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAuthorityBindingType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubAuthorityBindingType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.ConditionAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionAbstractType.InitializeStub">
            <summary>初始化 type StubConditionAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionsType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.ConditionsType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionsType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionsType.InitializeStub">
            <summary>初始化 type StubConditionsType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionsType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionsType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubConditionsType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubDoNotCacheConditionType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.DoNotCacheConditionType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubDoNotCacheConditionType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubDoNotCacheConditionType.InitializeStub">
            <summary>初始化 type StubDoNotCacheConditionType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubDoNotCacheConditionType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubDoNotCacheConditionType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubDoNotCacheConditionType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubEvidenceType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.EvidenceType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubEvidenceType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubEvidenceType.InitializeStub">
            <summary>初始化 type StubEvidenceType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubEvidenceType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubEvidenceType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubEvidenceType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubNameIdentifierType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.NameIdentifierType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubNameIdentifierType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubNameIdentifierType.InitializeStub">
            <summary>初始化 type StubNameIdentifierType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubNameIdentifierType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubNameIdentifierType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubNameIdentifierType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectConfirmationType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectConfirmationType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectConfirmationType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectConfirmationType.InitializeStub">
            <summary>初始化 type StubSubjectConfirmationType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectConfirmationType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectConfirmationType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectConfirmationType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectLocalityType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectLocalityType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectLocalityType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectLocalityType.InitializeStub">
            <summary>初始化 type StubSubjectLocalityType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectLocalityType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectLocalityType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectLocalityType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectType.InitializeStub">
            <summary>初始化 type StubSubjectType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Fakes.StubSubjectType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.ShimStatementAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.StatementAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.ShimStatementAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.StatementAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.ShimStatementAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.ShimStatementAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.ShimStatementAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.ShimStatementAbstractType.Constructor">
            <summary>设置 StatementAbstractType.StatementAbstractType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.ShimStatementAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.StubStatementAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.StatementAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.StubStatementAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.StubStatementAbstractType.InitializeStub">
            <summary>初始化 type StubStatementAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.StubStatementAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.StubStatementAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.Statement.Fakes.StubStatementAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.AttributeStatementType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.AttributeStatementType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.AttributeGet">
            <summary>设置 AttributeStatementType.get_Attribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.AttributeSetAttributeTypeArray">
            <summary>设置 AttributeStatementType.set_Attribute(AttributeType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.Constructor">
            <summary>设置 AttributeStatementType.AttributeStatementType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.AllInstances.AttributeGet">
            <summary>设置 AttributeStatementType.get_Attribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAttributeStatementType.AllInstances.AttributeSetAttributeTypeArray">
            <summary>设置 AttributeStatementType.set_Attribute(AttributeType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.AuthenticationStatementType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.AuthenticationStatementType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AuthenticationInstantGet">
            <summary>设置 AuthenticationStatementType.get_AuthenticationInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AuthenticationInstantSetDateTime">
            <summary>设置 AuthenticationStatementType.set_AuthenticationInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AuthenticationMethodGet">
            <summary>设置 AuthenticationStatementType.get_AuthenticationMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AuthenticationMethodSetString">
            <summary>设置 AuthenticationStatementType.set_AuthenticationMethod(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AuthorityBindingGet">
            <summary>设置 AuthenticationStatementType.get_AuthorityBinding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AuthorityBindingSetAuthorityBindingTypeArray">
            <summary>设置 AuthenticationStatementType.set_AuthorityBinding(AuthorityBindingType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.Constructor">
            <summary>设置 AuthenticationStatementType.AuthenticationStatementType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.SubjectLocalityGet">
            <summary>设置 AuthenticationStatementType.get_SubjectLocality() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.SubjectLocalitySetSubjectLocalityType">
            <summary>设置 AuthenticationStatementType.set_SubjectLocality(SubjectLocalityType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AllInstances.AuthenticationInstantGet">
            <summary>设置 AuthenticationStatementType.get_AuthenticationInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AllInstances.AuthenticationInstantSetDateTime">
            <summary>设置 AuthenticationStatementType.set_AuthenticationInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AllInstances.AuthenticationMethodGet">
            <summary>设置 AuthenticationStatementType.get_AuthenticationMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AllInstances.AuthenticationMethodSetString">
            <summary>设置 AuthenticationStatementType.set_AuthenticationMethod(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AllInstances.AuthorityBindingGet">
            <summary>设置 AuthenticationStatementType.get_AuthorityBinding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AllInstances.AuthorityBindingSetAuthorityBindingTypeArray">
            <summary>设置 AuthenticationStatementType.set_AuthorityBinding(AuthorityBindingType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AllInstances.SubjectLocalityGet">
            <summary>设置 AuthenticationStatementType.get_SubjectLocality() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthenticationStatementType.AllInstances.SubjectLocalitySetSubjectLocalityType">
            <summary>设置 AuthenticationStatementType.set_SubjectLocality(SubjectLocalityType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.AuthorizationDecisionStatementType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.AuthorizationDecisionStatementType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.ActionGet">
            <summary>设置 AuthorizationDecisionStatementType.get_Action() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.ActionSetActionTypeArray">
            <summary>设置 AuthorizationDecisionStatementType.set_Action(ActionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.Constructor">
            <summary>设置 AuthorizationDecisionStatementType.AuthorizationDecisionStatementType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.DecisionGet">
            <summary>设置 AuthorizationDecisionStatementType.get_Decision() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.DecisionSetDecisionType">
            <summary>设置 AuthorizationDecisionStatementType.set_Decision(DecisionType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.EvidenceGet">
            <summary>设置 AuthorizationDecisionStatementType.get_Evidence() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.EvidenceSetObjectArray">
            <summary>设置 AuthorizationDecisionStatementType.set_Evidence(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.ResourceGet">
            <summary>设置 AuthorizationDecisionStatementType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.ResourceSetString">
            <summary>设置 AuthorizationDecisionStatementType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.AllInstances.ActionGet">
            <summary>设置 AuthorizationDecisionStatementType.get_Action() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.AllInstances.ActionSetActionTypeArray">
            <summary>设置 AuthorizationDecisionStatementType.set_Action(ActionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.AllInstances.DecisionGet">
            <summary>设置 AuthorizationDecisionStatementType.get_Decision() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.AllInstances.DecisionSetDecisionType">
            <summary>设置 AuthorizationDecisionStatementType.set_Decision(DecisionType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.AllInstances.EvidenceGet">
            <summary>设置 AuthorizationDecisionStatementType.get_Evidence() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.AllInstances.EvidenceSetObjectArray">
            <summary>设置 AuthorizationDecisionStatementType.set_Evidence(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.AllInstances.ResourceGet">
            <summary>设置 AuthorizationDecisionStatementType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimAuthorizationDecisionStatementType.AllInstances.ResourceSetString">
            <summary>设置 AuthorizationDecisionStatementType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.SubjectStatementAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.SubjectStatementAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.Constructor">
            <summary>设置 SubjectStatementAbstractType.SubjectStatementAbstractType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.SubjectGet">
            <summary>设置 SubjectStatementAbstractType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.SubjectSetSubjectType">
            <summary>设置 SubjectStatementAbstractType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.AllInstances.SubjectGet">
            <summary>设置 SubjectStatementAbstractType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.ShimSubjectStatementAbstractType.AllInstances.SubjectSetSubjectType">
            <summary>设置 SubjectStatementAbstractType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAttributeStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.AttributeStatementType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAttributeStatementType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAttributeStatementType.InitializeStub">
            <summary>初始化 type StubAttributeStatementType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAttributeStatementType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAttributeStatementType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAttributeStatementType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthenticationStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.AuthenticationStatementType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthenticationStatementType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthenticationStatementType.InitializeStub">
            <summary>初始化 type StubAuthenticationStatementType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthenticationStatementType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthenticationStatementType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthenticationStatementType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthorizationDecisionStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.AuthorizationDecisionStatementType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthorizationDecisionStatementType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthorizationDecisionStatementType.InitializeStub">
            <summary>初始化 type StubAuthorizationDecisionStatementType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthorizationDecisionStatementType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthorizationDecisionStatementType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubAuthorizationDecisionStatementType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubSubjectStatementAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.SubjectStatementAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubSubjectStatementAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubSubjectStatementAbstractType.InitializeStub">
            <summary>初始化 type StubSubjectStatementAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubSubjectStatementAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubSubjectStatementAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Assertion.SubjectStatement.Fakes.StubSubjectStatementAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.StatusCodeType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.StatusCodeType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.Constructor">
            <summary>设置 StatusCodeType.StatusCodeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.StatusCodeGet">
            <summary>设置 StatusCodeType.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.StatusCodeSetStatusCodeType">
            <summary>设置 StatusCodeType.set_StatusCode(StatusCodeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.ValueGet">
            <summary>设置 StatusCodeType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.ValueSetXmlQualifiedName">
            <summary>设置 StatusCodeType.set_Value(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.AllInstances.StatusCodeGet">
            <summary>设置 StatusCodeType.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.AllInstances.StatusCodeSetStatusCodeType">
            <summary>设置 StatusCodeType.set_StatusCode(StatusCodeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.AllInstances.ValueGet">
            <summary>设置 StatusCodeType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusCodeType.AllInstances.ValueSetXmlQualifiedName">
            <summary>设置 StatusCodeType.set_Value(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.StatusDetailType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.StatusDetailType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.AnyGet">
            <summary>设置 StatusDetailType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.AnySetXmlElementArray">
            <summary>设置 StatusDetailType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.Constructor">
            <summary>设置 StatusDetailType.StatusDetailType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.AllInstances.AnyGet">
            <summary>设置 StatusDetailType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusDetailType.AllInstances.AnySetXmlElementArray">
            <summary>设置 StatusDetailType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.StatusType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.StatusType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.Constructor">
            <summary>设置 StatusType.StatusType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.StatusCodeGet">
            <summary>设置 StatusType.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.StatusCodeSetStatusCodeType">
            <summary>设置 StatusType.set_StatusCode(StatusCodeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.StatusDetailGet">
            <summary>设置 StatusType.get_StatusDetail() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.StatusDetailSetStatusDetailType">
            <summary>设置 StatusType.set_StatusDetail(StatusDetailType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.StatusMessageGet">
            <summary>设置 StatusType.get_StatusMessage() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.StatusMessageSetString">
            <summary>设置 StatusType.set_StatusMessage(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.AllInstances.StatusCodeGet">
            <summary>设置 StatusType.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.AllInstances.StatusCodeSetStatusCodeType">
            <summary>设置 StatusType.set_StatusCode(StatusCodeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.AllInstances.StatusDetailGet">
            <summary>设置 StatusType.get_StatusDetail() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.AllInstances.StatusDetailSetStatusDetailType">
            <summary>设置 StatusType.set_StatusDetail(StatusDetailType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.AllInstances.StatusMessageGet">
            <summary>设置 StatusType.get_StatusMessage() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.ShimStatusType.AllInstances.StatusMessageSetString">
            <summary>设置 StatusType.set_StatusMessage(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusCodeType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.StatusCodeType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusCodeType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusCodeType.InitializeStub">
            <summary>初始化 type StubStatusCodeType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusCodeType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusCodeType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusCodeType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusDetailType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.StatusDetailType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusDetailType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusDetailType.InitializeStub">
            <summary>初始化 type StubStatusDetailType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusDetailType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusDetailType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusDetailType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.StatusType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusType.InitializeStub">
            <summary>初始化 type StubStatusType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Fakes.StubStatusType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.RequestAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.RequestAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.Constructor">
            <summary>设置 RequestAbstractType.RequestAbstractType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.IssueInstantGet">
            <summary>设置 RequestAbstractType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.IssueInstantSetDateTime">
            <summary>设置 RequestAbstractType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.MajorVersionGet">
            <summary>设置 RequestAbstractType.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.MajorVersionSetString">
            <summary>设置 RequestAbstractType.set_MajorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.MinorVersionGet">
            <summary>设置 RequestAbstractType.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.MinorVersionSetString">
            <summary>设置 RequestAbstractType.set_MinorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.RequestIdGet">
            <summary>设置 RequestAbstractType.get_RequestId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.RequestIdSetString">
            <summary>设置 RequestAbstractType.set_RequestId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.RespondWithGet">
            <summary>设置 RequestAbstractType.get_RespondWith() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.RespondWithSetXmlQualifiedNameArray">
            <summary>设置 RequestAbstractType.set_RespondWith(XmlQualifiedName[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.SignatureGet">
            <summary>设置 RequestAbstractType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.SignatureSetSignatureType">
            <summary>设置 RequestAbstractType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.IssueInstantGet">
            <summary>设置 RequestAbstractType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.IssueInstantSetDateTime">
            <summary>设置 RequestAbstractType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.MajorVersionGet">
            <summary>设置 RequestAbstractType.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.MajorVersionSetString">
            <summary>设置 RequestAbstractType.set_MajorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.MinorVersionGet">
            <summary>设置 RequestAbstractType.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.MinorVersionSetString">
            <summary>设置 RequestAbstractType.set_MinorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.RequestIdGet">
            <summary>设置 RequestAbstractType.get_RequestId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.RequestIdSetString">
            <summary>设置 RequestAbstractType.set_RequestId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.RespondWithGet">
            <summary>设置 RequestAbstractType.get_RespondWith() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.RespondWithSetXmlQualifiedNameArray">
            <summary>设置 RequestAbstractType.set_RespondWith(XmlQualifiedName[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.SignatureGet">
            <summary>设置 RequestAbstractType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.SignatureSetSignatureType">
            <summary>设置 RequestAbstractType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.RequestType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.RequestType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.Constructor">
            <summary>设置 RequestType.RequestType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.ItemsElementNameGet">
            <summary>设置 RequestType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.ItemsElementNameSetRequestTypeItemsElementNamesArray">
            <summary>设置 RequestType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.ItemsGet">
            <summary>设置 RequestType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.ItemsSetObjectArray">
            <summary>设置 RequestType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.AllInstances.ItemsElementNameGet">
            <summary>设置 RequestType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.AllInstances.ItemsElementNameSetRequestTypeItemsElementNamesArray">
            <summary>设置 RequestType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.AllInstances.ItemsGet">
            <summary>设置 RequestType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.ShimRequestType.AllInstances.ItemsSetObjectArray">
            <summary>设置 RequestType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.RequestAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestAbstractType.InitializeStub">
            <summary>初始化 type StubRequestAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.RequestType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestType.InitializeStub">
            <summary>初始化 type StubRequestType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Request.Fakes.StubRequestType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.ResponseAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.ResponseAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.Constructor">
            <summary>设置 ResponseAbstractType.ResponseAbstractType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.InResponseToGet">
            <summary>设置 ResponseAbstractType.get_InResponseTo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.InResponseToSetString">
            <summary>设置 ResponseAbstractType.set_InResponseTo(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.IssueInstantGet">
            <summary>设置 ResponseAbstractType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.IssueInstantSetDateTime">
            <summary>设置 ResponseAbstractType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.MajorVersionGet">
            <summary>设置 ResponseAbstractType.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.MajorVersionSetString">
            <summary>设置 ResponseAbstractType.set_MajorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.MinorVersionGet">
            <summary>设置 ResponseAbstractType.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.MinorVersionSetString">
            <summary>设置 ResponseAbstractType.set_MinorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.RecipientGet">
            <summary>设置 ResponseAbstractType.get_Recipient() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.RecipientSetString">
            <summary>设置 ResponseAbstractType.set_Recipient(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.ResponseIdGet">
            <summary>设置 ResponseAbstractType.get_ResponseId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.ResponseIdSetString">
            <summary>设置 ResponseAbstractType.set_ResponseId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.SignatureGet">
            <summary>设置 ResponseAbstractType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.SignatureSetSignatureType">
            <summary>设置 ResponseAbstractType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.InResponseToGet">
            <summary>设置 ResponseAbstractType.get_InResponseTo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.InResponseToSetString">
            <summary>设置 ResponseAbstractType.set_InResponseTo(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.IssueInstantGet">
            <summary>设置 ResponseAbstractType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.IssueInstantSetDateTime">
            <summary>设置 ResponseAbstractType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.MajorVersionGet">
            <summary>设置 ResponseAbstractType.get_MajorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.MajorVersionSetString">
            <summary>设置 ResponseAbstractType.set_MajorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.MinorVersionGet">
            <summary>设置 ResponseAbstractType.get_MinorVersion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.MinorVersionSetString">
            <summary>设置 ResponseAbstractType.set_MinorVersion(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.RecipientGet">
            <summary>设置 ResponseAbstractType.get_Recipient() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.RecipientSetString">
            <summary>设置 ResponseAbstractType.set_Recipient(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.ResponseIdGet">
            <summary>设置 ResponseAbstractType.get_ResponseId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.ResponseIdSetString">
            <summary>设置 ResponseAbstractType.set_ResponseId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.SignatureGet">
            <summary>设置 ResponseAbstractType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseAbstractType.AllInstances.SignatureSetSignatureType">
            <summary>设置 ResponseAbstractType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.ResponseType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.ResponseType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.AssertionGet">
            <summary>设置 ResponseType.get_Assertion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.AssertionSetAssertionTypeArray">
            <summary>设置 ResponseType.set_Assertion(AssertionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.Constructor">
            <summary>设置 ResponseType.ResponseType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.StatusGet">
            <summary>设置 ResponseType.get_Status() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.StatusSetStatusType">
            <summary>设置 ResponseType.set_Status(StatusType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.AllInstances.AssertionGet">
            <summary>设置 ResponseType.get_Assertion() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.AllInstances.AssertionSetAssertionTypeArray">
            <summary>设置 ResponseType.set_Assertion(AssertionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.AllInstances.StatusGet">
            <summary>设置 ResponseType.get_Status() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.ShimResponseType.AllInstances.StatusSetStatusType">
            <summary>设置 ResponseType.set_Status(StatusType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.ResponseAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseAbstractType.InitializeStub">
            <summary>初始化 type StubResponseAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.ResponseType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseType.InitializeStub">
            <summary>初始化 type StubResponseType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.Response.Fakes.StubResponseType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.AttributeQueryType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.AttributeQueryType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AttributeDesignatorGet">
            <summary>设置 AttributeQueryType.get_AttributeDesignator() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AttributeDesignatorSetAttributeDesignatorTypeArray">
            <summary>设置 AttributeQueryType.set_AttributeDesignator(AttributeDesignatorType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.Constructor">
            <summary>设置 AttributeQueryType.AttributeQueryType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.ResourceGet">
            <summary>设置 AttributeQueryType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.ResourceSetString">
            <summary>设置 AttributeQueryType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AllInstances.AttributeDesignatorGet">
            <summary>设置 AttributeQueryType.get_AttributeDesignator() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AllInstances.AttributeDesignatorSetAttributeDesignatorTypeArray">
            <summary>设置 AttributeQueryType.set_AttributeDesignator(AttributeDesignatorType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AllInstances.ResourceGet">
            <summary>设置 AttributeQueryType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AllInstances.ResourceSetString">
            <summary>设置 AttributeQueryType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.AuthenticationQueryType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.AuthenticationQueryType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.AuthenticationMethodGet">
            <summary>设置 AuthenticationQueryType.get_AuthenticationMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.AuthenticationMethodSetString">
            <summary>设置 AuthenticationQueryType.set_AuthenticationMethod(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.Constructor">
            <summary>设置 AuthenticationQueryType.AuthenticationQueryType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.AllInstances.AuthenticationMethodGet">
            <summary>设置 AuthenticationQueryType.get_AuthenticationMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthenticationQueryType.AllInstances.AuthenticationMethodSetString">
            <summary>设置 AuthenticationQueryType.set_AuthenticationMethod(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.AuthorizationDecisionQueryType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.AuthorizationDecisionQueryType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.ActionGet">
            <summary>设置 AuthorizationDecisionQueryType.get_Action() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.ActionSetActionTypeArray">
            <summary>设置 AuthorizationDecisionQueryType.set_Action(ActionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.Constructor">
            <summary>设置 AuthorizationDecisionQueryType.AuthorizationDecisionQueryType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.EvidenceGet">
            <summary>设置 AuthorizationDecisionQueryType.get_Evidence() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.EvidenceSetObjectArray">
            <summary>设置 AuthorizationDecisionQueryType.set_Evidence(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.ResourceGet">
            <summary>设置 AuthorizationDecisionQueryType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.ResourceSetString">
            <summary>设置 AuthorizationDecisionQueryType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.AllInstances.ActionGet">
            <summary>设置 AuthorizationDecisionQueryType.get_Action() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.AllInstances.ActionSetActionTypeArray">
            <summary>设置 AuthorizationDecisionQueryType.set_Action(ActionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.AllInstances.EvidenceGet">
            <summary>设置 AuthorizationDecisionQueryType.get_Evidence() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.AllInstances.EvidenceSetObjectArray">
            <summary>设置 AuthorizationDecisionQueryType.set_Evidence(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.AllInstances.ResourceGet">
            <summary>设置 AuthorizationDecisionQueryType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimAuthorizationDecisionQueryType.AllInstances.ResourceSetString">
            <summary>设置 AuthorizationDecisionQueryType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimQueryAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.QueryAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimQueryAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.QueryAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimQueryAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimQueryAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimQueryAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimQueryAbstractType.Constructor">
            <summary>设置 QueryAbstractType.QueryAbstractType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimQueryAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.SubjectQueryAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.SubjectQueryAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.Constructor">
            <summary>设置 SubjectQueryAbstractType.SubjectQueryAbstractType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.SubjectGet">
            <summary>设置 SubjectQueryAbstractType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.SubjectSetSubjectType">
            <summary>设置 SubjectQueryAbstractType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.AllInstances.SubjectGet">
            <summary>设置 SubjectQueryAbstractType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.AllInstances.SubjectSetSubjectType">
            <summary>设置 SubjectQueryAbstractType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAttributeQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.AttributeQueryType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.InitializeStub">
            <summary>初始化 type StubAttributeQueryType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthenticationQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.AuthenticationQueryType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthenticationQueryType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthenticationQueryType.InitializeStub">
            <summary>初始化 type StubAuthenticationQueryType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthenticationQueryType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthenticationQueryType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthenticationQueryType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthorizationDecisionQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.AuthorizationDecisionQueryType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthorizationDecisionQueryType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthorizationDecisionQueryType.InitializeStub">
            <summary>初始化 type StubAuthorizationDecisionQueryType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthorizationDecisionQueryType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthorizationDecisionQueryType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubAuthorizationDecisionQueryType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubQueryAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.QueryAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubQueryAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubQueryAbstractType.InitializeStub">
            <summary>初始化 type StubQueryAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubQueryAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubQueryAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubQueryAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.SubjectQueryAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.InitializeStub">
            <summary>初始化 type StubSubjectQueryAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml11.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.AttributeType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.AttributeType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AnyAttrGet">
            <summary>设置 AttributeType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AnyAttrSetXmlAttributeArray">
            <summary>设置 AttributeType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AttributeValueGet">
            <summary>设置 AttributeType.get_AttributeValue() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AttributeValueSetObjectArray">
            <summary>设置 AttributeType.set_AttributeValue(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.Constructor">
            <summary>设置 AttributeType.AttributeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.FriendlyNameGet">
            <summary>设置 AttributeType.get_FriendlyName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.FriendlyNameSetString">
            <summary>设置 AttributeType.set_FriendlyName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.NameFormatGet">
            <summary>设置 AttributeType.get_NameFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.NameFormatSetString">
            <summary>设置 AttributeType.set_NameFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.NameGet">
            <summary>设置 AttributeType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.NameSetString">
            <summary>设置 AttributeType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.AnyAttrGet">
            <summary>设置 AttributeType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 AttributeType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.AttributeValueGet">
            <summary>设置 AttributeType.get_AttributeValue() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.AttributeValueSetObjectArray">
            <summary>设置 AttributeType.set_AttributeValue(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.FriendlyNameGet">
            <summary>设置 AttributeType.get_FriendlyName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.FriendlyNameSetString">
            <summary>设置 AttributeType.set_FriendlyName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.NameFormatGet">
            <summary>设置 AttributeType.get_NameFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.NameFormatSetString">
            <summary>设置 AttributeType.set_NameFormat(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.NameGet">
            <summary>设置 AttributeType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.ShimAttributeType.AllInstances.NameSetString">
            <summary>设置 AttributeType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.StubAttributeType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.AttributeType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.StubAttributeType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.StubAttributeType.InitializeStub">
            <summary>初始化 type StubAttributeType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.StubAttributeType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.StubAttributeType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Attribute.Fakes.StubAttributeType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.AudienceRestrictionType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.AudienceRestrictionType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.AudienceGet">
            <summary>设置 AudienceRestrictionType.get_Audience() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.AudienceSetStringArray">
            <summary>设置 AudienceRestrictionType.set_Audience(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.Constructor">
            <summary>设置 AudienceRestrictionType.AudienceRestrictionType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.AllInstances.AudienceGet">
            <summary>设置 AudienceRestrictionType.get_Audience() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimAudienceRestrictionType.AllInstances.AudienceSetStringArray">
            <summary>设置 AudienceRestrictionType.set_Audience(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.ConditionAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.ConditionAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionAbstractType.Constructor">
            <summary>设置 ConditionAbstractType.ConditionAbstractType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.ConditionsType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.ConditionsType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.Constructor">
            <summary>设置 ConditionsType.ConditionsType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.ItemsGet">
            <summary>设置 ConditionsType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.ItemsSetConditionAbstractTypeArray">
            <summary>设置 ConditionsType.set_Items(ConditionAbstractType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.NotBeforeGet">
            <summary>设置 ConditionsType.get_NotBefore() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.NotBeforeSetDateTime">
            <summary>设置 ConditionsType.set_NotBefore(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.NotBeforeSpecifiedGet">
            <summary>设置 ConditionsType.get_NotBeforeSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.NotBeforeSpecifiedSetBoolean">
            <summary>设置 ConditionsType.set_NotBeforeSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.NotOnOrAfterGet">
            <summary>设置 ConditionsType.get_NotOnOrAfter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.NotOnOrAfterSetDateTime">
            <summary>设置 ConditionsType.set_NotOnOrAfter(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.NotOnOrAfterSpecifiedGet">
            <summary>设置 ConditionsType.get_NotOnOrAfterSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.NotOnOrAfterSpecifiedSetBoolean">
            <summary>设置 ConditionsType.set_NotOnOrAfterSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.ItemsGet">
            <summary>设置 ConditionsType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.ItemsSetConditionAbstractTypeArray">
            <summary>设置 ConditionsType.set_Items(ConditionAbstractType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.NotBeforeGet">
            <summary>设置 ConditionsType.get_NotBefore() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.NotBeforeSetDateTime">
            <summary>设置 ConditionsType.set_NotBefore(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.NotBeforeSpecifiedGet">
            <summary>设置 ConditionsType.get_NotBeforeSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.NotBeforeSpecifiedSetBoolean">
            <summary>设置 ConditionsType.set_NotBeforeSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.NotOnOrAfterGet">
            <summary>设置 ConditionsType.get_NotOnOrAfter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.NotOnOrAfterSetDateTime">
            <summary>设置 ConditionsType.set_NotOnOrAfter(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.NotOnOrAfterSpecifiedGet">
            <summary>设置 ConditionsType.get_NotOnOrAfterSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimConditionsType.AllInstances.NotOnOrAfterSpecifiedSetBoolean">
            <summary>设置 ConditionsType.set_NotOnOrAfterSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimOneTimeUseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.OneTimeUseType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimOneTimeUseType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimOneTimeUseType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.OneTimeUseType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimOneTimeUseType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimOneTimeUseType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimOneTimeUseType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimOneTimeUseType.Constructor">
            <summary>设置 OneTimeUseType.OneTimeUseType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimOneTimeUseType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.ProxyRestrictionType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.ProxyRestrictionType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.AudienceGet">
            <summary>设置 ProxyRestrictionType.get_Audience() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.AudienceSetStringArray">
            <summary>设置 ProxyRestrictionType.set_Audience(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.Constructor">
            <summary>设置 ProxyRestrictionType.ProxyRestrictionType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.CountGet">
            <summary>设置 ProxyRestrictionType.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.CountSetString">
            <summary>设置 ProxyRestrictionType.set_Count(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.AllInstances.AudienceGet">
            <summary>设置 ProxyRestrictionType.get_Audience() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.AllInstances.AudienceSetStringArray">
            <summary>设置 ProxyRestrictionType.set_Audience(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.AllInstances.CountGet">
            <summary>设置 ProxyRestrictionType.get_Count() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.ShimProxyRestrictionType.AllInstances.CountSetString">
            <summary>设置 ProxyRestrictionType.set_Count(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubAudienceRestrictionType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.AudienceRestrictionType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubAudienceRestrictionType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubAudienceRestrictionType.InitializeStub">
            <summary>初始化 type StubAudienceRestrictionType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubAudienceRestrictionType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubAudienceRestrictionType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubAudienceRestrictionType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.ConditionAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionAbstractType.InitializeStub">
            <summary>初始化 type StubConditionAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionsType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.ConditionsType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionsType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionsType.InitializeStub">
            <summary>初始化 type StubConditionsType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionsType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionsType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubConditionsType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubOneTimeUseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.OneTimeUseType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubOneTimeUseType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubOneTimeUseType.InitializeStub">
            <summary>初始化 type StubOneTimeUseType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubOneTimeUseType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubOneTimeUseType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubOneTimeUseType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubProxyRestrictionType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.ProxyRestrictionType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubProxyRestrictionType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubProxyRestrictionType.InitializeStub">
            <summary>初始化 type StubProxyRestrictionType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubProxyRestrictionType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubProxyRestrictionType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Condition.Fakes.StubProxyRestrictionType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.ActionType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.ActionType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.Constructor">
            <summary>设置 ActionType.ActionType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.NamespaceGet">
            <summary>设置 ActionType.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.NamespaceSetString">
            <summary>设置 ActionType.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.ValueGet">
            <summary>设置 ActionType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.ValueSetString">
            <summary>设置 ActionType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.AllInstances.NamespaceGet">
            <summary>设置 ActionType.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.AllInstances.NamespaceSetString">
            <summary>设置 ActionType.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.AllInstances.ValueGet">
            <summary>设置 ActionType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimActionType.AllInstances.ValueSetString">
            <summary>设置 ActionType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.AdviceType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.AdviceType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.Constructor">
            <summary>设置 AdviceType.AdviceType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.ItemsElementNameGet">
            <summary>设置 AdviceType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.ItemsElementNameSetAdviceTypeItemsElementNamesArray">
            <summary>设置 AdviceType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.ItemsGet">
            <summary>设置 AdviceType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.ItemsSetObjectArray">
            <summary>设置 AdviceType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.AllInstances.ItemsElementNameGet">
            <summary>设置 AdviceType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.AllInstances.ItemsElementNameSetAdviceTypeItemsElementNamesArray">
            <summary>设置 AdviceType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.AllInstances.ItemsGet">
            <summary>设置 AdviceType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAdviceType.AllInstances.ItemsSetObjectArray">
            <summary>设置 AdviceType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.AssertionType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.AssertionType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AdviceGet">
            <summary>设置 AssertionType.get_Advice() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AdviceSetAdviceType">
            <summary>设置 AssertionType.set_Advice(AdviceType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.ConditionsGet">
            <summary>设置 AssertionType.get_Conditions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.ConditionsSetConditionsType">
            <summary>设置 AssertionType.set_Conditions(ConditionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.Constructor">
            <summary>设置 AssertionType.AssertionType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.IdGet">
            <summary>设置 AssertionType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.IdSetString">
            <summary>设置 AssertionType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.IssueInstantGet">
            <summary>设置 AssertionType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.IssueInstantSetDateTime">
            <summary>设置 AssertionType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.IssuerGet">
            <summary>设置 AssertionType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.IssuerSetNameIdType">
            <summary>设置 AssertionType.set_Issuer(NameIdType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.ItemsGet">
            <summary>设置 AssertionType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.ItemsSetStatementAbstractTypeArray">
            <summary>设置 AssertionType.set_Items(StatementAbstractType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.SignatureGet">
            <summary>设置 AssertionType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.SignatureSetSignatureType">
            <summary>设置 AssertionType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.SubjectGet">
            <summary>设置 AssertionType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.SubjectSetSubjectType">
            <summary>设置 AssertionType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.VersionGet">
            <summary>设置 AssertionType.get_Version() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.VersionSetString">
            <summary>设置 AssertionType.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.AdviceGet">
            <summary>设置 AssertionType.get_Advice() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.AdviceSetAdviceType">
            <summary>设置 AssertionType.set_Advice(AdviceType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.ConditionsGet">
            <summary>设置 AssertionType.get_Conditions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.ConditionsSetConditionsType">
            <summary>设置 AssertionType.set_Conditions(ConditionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.IdGet">
            <summary>设置 AssertionType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.IdSetString">
            <summary>设置 AssertionType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.IssueInstantGet">
            <summary>设置 AssertionType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.IssueInstantSetDateTime">
            <summary>设置 AssertionType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.IssuerGet">
            <summary>设置 AssertionType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.IssuerSetNameIdType">
            <summary>设置 AssertionType.set_Issuer(NameIdType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.ItemsGet">
            <summary>设置 AssertionType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.ItemsSetStatementAbstractTypeArray">
            <summary>设置 AssertionType.set_Items(StatementAbstractType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.SignatureGet">
            <summary>设置 AssertionType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.SignatureSetSignatureType">
            <summary>设置 AssertionType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.SubjectGet">
            <summary>设置 AssertionType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.SubjectSetSubjectType">
            <summary>设置 AssertionType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.VersionGet">
            <summary>设置 AssertionType.get_Version() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAssertionType.AllInstances.VersionSetString">
            <summary>设置 AssertionType.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.AuthnContextType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.AuthnContextType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.AuthenticatingAuthorityGet">
            <summary>设置 AuthnContextType.get_AuthenticatingAuthority() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.AuthenticatingAuthoritySetStringArray">
            <summary>设置 AuthnContextType.set_AuthenticatingAuthority(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.Constructor">
            <summary>设置 AuthnContextType.AuthnContextType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.ItemsElementNameGet">
            <summary>设置 AuthnContextType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.ItemsElementNameSetAuthnContextTypeItemsElementNamesArray">
            <summary>设置 AuthnContextType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.ItemsGet">
            <summary>设置 AuthnContextType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.ItemsSetObjectArray">
            <summary>设置 AuthnContextType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.AllInstances.AuthenticatingAuthorityGet">
            <summary>设置 AuthnContextType.get_AuthenticatingAuthority() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.AllInstances.AuthenticatingAuthoritySetStringArray">
            <summary>设置 AuthnContextType.set_AuthenticatingAuthority(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.AllInstances.ItemsElementNameGet">
            <summary>设置 AuthnContextType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.AllInstances.ItemsElementNameSetAuthnContextTypeItemsElementNamesArray">
            <summary>设置 AuthnContextType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.AllInstances.ItemsGet">
            <summary>设置 AuthnContextType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimAuthnContextType.AllInstances.ItemsSetObjectArray">
            <summary>设置 AuthnContextType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.BaseIdAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.BaseIdAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.Constructor">
            <summary>设置 BaseIdAbstractType.BaseIdAbstractType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.NameQualifierGet">
            <summary>设置 BaseIdAbstractType.get_NameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.NameQualifierSetString">
            <summary>设置 BaseIdAbstractType.set_NameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.SpNameQualifierGet">
            <summary>设置 BaseIdAbstractType.get_SpNameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.SpNameQualifierSetString">
            <summary>设置 BaseIdAbstractType.set_SpNameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.AllInstances.NameQualifierGet">
            <summary>设置 BaseIdAbstractType.get_NameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.AllInstances.NameQualifierSetString">
            <summary>设置 BaseIdAbstractType.set_NameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.AllInstances.SpNameQualifierGet">
            <summary>设置 BaseIdAbstractType.get_SpNameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimBaseIdAbstractType.AllInstances.SpNameQualifierSetString">
            <summary>设置 BaseIdAbstractType.set_SpNameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.EncryptedElementType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.EncryptedElementType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.Constructor">
            <summary>设置 EncryptedElementType.EncryptedElementType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.EncryptedDataGet">
            <summary>设置 EncryptedElementType.get_EncryptedData() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.EncryptedDataSetEncryptedDataType">
            <summary>设置 EncryptedElementType.set_EncryptedData(EncryptedDataType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.EncryptedKeyGet">
            <summary>设置 EncryptedElementType.get_EncryptedKey() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.EncryptedKeySetEncryptedKeyTypeArray">
            <summary>设置 EncryptedElementType.set_EncryptedKey(EncryptedKeyType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.AllInstances.EncryptedDataGet">
            <summary>设置 EncryptedElementType.get_EncryptedData() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.AllInstances.EncryptedDataSetEncryptedDataType">
            <summary>设置 EncryptedElementType.set_EncryptedData(EncryptedDataType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.AllInstances.EncryptedKeyGet">
            <summary>设置 EncryptedElementType.get_EncryptedKey() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimEncryptedElementType.AllInstances.EncryptedKeySetEncryptedKeyTypeArray">
            <summary>设置 EncryptedElementType.set_EncryptedKey(EncryptedKeyType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.NameIdType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.NameIdType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.Constructor">
            <summary>设置 NameIdType.NameIdType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.FormatGet">
            <summary>设置 NameIdType.get_Format() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.FormatSetString">
            <summary>设置 NameIdType.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.NameQualifierGet">
            <summary>设置 NameIdType.get_NameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.NameQualifierSetString">
            <summary>设置 NameIdType.set_NameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.SpNameQualifierGet">
            <summary>设置 NameIdType.get_SpNameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.SpNameQualifierSetString">
            <summary>设置 NameIdType.set_SpNameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.SpProvidedIdGet">
            <summary>设置 NameIdType.get_SpProvidedId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.SpProvidedIdSetString">
            <summary>设置 NameIdType.set_SpProvidedId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.ValueGet">
            <summary>设置 NameIdType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.ValueSetString">
            <summary>设置 NameIdType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.FormatGet">
            <summary>设置 NameIdType.get_Format() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.FormatSetString">
            <summary>设置 NameIdType.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.NameQualifierGet">
            <summary>设置 NameIdType.get_NameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.NameQualifierSetString">
            <summary>设置 NameIdType.set_NameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.SpNameQualifierGet">
            <summary>设置 NameIdType.get_SpNameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.SpNameQualifierSetString">
            <summary>设置 NameIdType.set_SpNameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.SpProvidedIdGet">
            <summary>设置 NameIdType.get_SpProvidedId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.SpProvidedIdSetString">
            <summary>设置 NameIdType.set_SpProvidedId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.ValueGet">
            <summary>设置 NameIdType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimNameIdType.AllInstances.ValueSetString">
            <summary>设置 NameIdType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectConfirmationDataType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectConfirmationDataType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.Constructor">
            <summary>设置 SubjectConfirmationDataType.SubjectConfirmationDataType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.TextGet">
            <summary>设置 SubjectConfirmationDataType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.TextSetStringArray">
            <summary>设置 SubjectConfirmationDataType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.AllInstances.TextGet">
            <summary>设置 SubjectConfirmationDataType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationDataType.AllInstances.TextSetStringArray">
            <summary>设置 SubjectConfirmationDataType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectConfirmationType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectConfirmationType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.Constructor">
            <summary>设置 SubjectConfirmationType.SubjectConfirmationType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.ItemGet">
            <summary>设置 SubjectConfirmationType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.ItemSetObject">
            <summary>设置 SubjectConfirmationType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.MethodGet">
            <summary>设置 SubjectConfirmationType.get_Method() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.MethodSetString">
            <summary>设置 SubjectConfirmationType.set_Method(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.SubjectConfirmationDataGet">
            <summary>设置 SubjectConfirmationType.get_SubjectConfirmationData() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.SubjectConfirmationDataSetSubjectConfirmationDataType">
            <summary>设置 SubjectConfirmationType.set_SubjectConfirmationData(SubjectConfirmationDataType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.ItemGet">
            <summary>设置 SubjectConfirmationType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.ItemSetObject">
            <summary>设置 SubjectConfirmationType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.MethodGet">
            <summary>设置 SubjectConfirmationType.get_Method() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.MethodSetString">
            <summary>设置 SubjectConfirmationType.set_Method(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.SubjectConfirmationDataGet">
            <summary>设置 SubjectConfirmationType.get_SubjectConfirmationData() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectConfirmationType.AllInstances.SubjectConfirmationDataSetSubjectConfirmationDataType">
            <summary>设置 SubjectConfirmationType.set_SubjectConfirmationData(SubjectConfirmationDataType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectLocalityType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectLocalityType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.AddressGet">
            <summary>设置 SubjectLocalityType.get_Address() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.AddressSetString">
            <summary>设置 SubjectLocalityType.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.Constructor">
            <summary>设置 SubjectLocalityType.SubjectLocalityType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.DnsNameGet">
            <summary>设置 SubjectLocalityType.get_DnsName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.DnsNameSetString">
            <summary>设置 SubjectLocalityType.set_DnsName(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.AllInstances.AddressGet">
            <summary>设置 SubjectLocalityType.get_Address() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.AllInstances.AddressSetString">
            <summary>设置 SubjectLocalityType.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.AllInstances.DnsNameGet">
            <summary>设置 SubjectLocalityType.get_DnsName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectLocalityType.AllInstances.DnsNameSetString">
            <summary>设置 SubjectLocalityType.set_DnsName(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.Constructor">
            <summary>设置 SubjectType.SubjectType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.ItemsGet">
            <summary>设置 SubjectType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.ItemsSetObjectArray">
            <summary>设置 SubjectType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.AllInstances.ItemsGet">
            <summary>设置 SubjectType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.ShimSubjectType.AllInstances.ItemsSetObjectArray">
            <summary>设置 SubjectType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubActionType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.ActionType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubActionType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubActionType.InitializeStub">
            <summary>初始化 type StubActionType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubActionType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubActionType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubActionType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAdviceType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.AdviceType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAdviceType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAdviceType.InitializeStub">
            <summary>初始化 type StubAdviceType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAdviceType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAdviceType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAdviceType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAssertionType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.AssertionType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAssertionType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAssertionType.InitializeStub">
            <summary>初始化 type StubAssertionType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAssertionType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAssertionType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAssertionType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAuthnContextType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.AuthnContextType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAuthnContextType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAuthnContextType.InitializeStub">
            <summary>初始化 type StubAuthnContextType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAuthnContextType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAuthnContextType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubAuthnContextType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubBaseIdAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.BaseIdAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubBaseIdAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubBaseIdAbstractType.InitializeStub">
            <summary>初始化 type StubBaseIdAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubBaseIdAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubBaseIdAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubBaseIdAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubEncryptedElementType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.EncryptedElementType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubEncryptedElementType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubEncryptedElementType.InitializeStub">
            <summary>初始化 type StubEncryptedElementType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubEncryptedElementType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubEncryptedElementType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubEncryptedElementType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubNameIdType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.NameIdType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubNameIdType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubNameIdType.InitializeStub">
            <summary>初始化 type StubNameIdType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubNameIdType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubNameIdType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubNameIdType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationDataType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectConfirmationDataType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationDataType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationDataType.InitializeStub">
            <summary>初始化 type StubSubjectConfirmationDataType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationDataType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationDataType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationDataType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectConfirmationType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationType.InitializeStub">
            <summary>初始化 type StubSubjectConfirmationType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectConfirmationType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectLocalityType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectLocalityType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectLocalityType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectLocalityType.InitializeStub">
            <summary>初始化 type StubSubjectLocalityType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectLocalityType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectLocalityType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectLocalityType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.SubjectType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectType.InitializeStub">
            <summary>初始化 type StubSubjectType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Fakes.StubSubjectType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.AttributeStatementType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.AttributeStatementType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.Constructor">
            <summary>设置 AttributeStatementType.AttributeStatementType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.ItemsGet">
            <summary>设置 AttributeStatementType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.ItemsSetObjectArray">
            <summary>设置 AttributeStatementType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.AllInstances.ItemsGet">
            <summary>设置 AttributeStatementType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAttributeStatementType.AllInstances.ItemsSetObjectArray">
            <summary>设置 AttributeStatementType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.AuthnStatementType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.AuthnStatementType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AuthnContextGet">
            <summary>设置 AuthnStatementType.get_AuthnContext() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AuthnContextSetAuthnContextType">
            <summary>设置 AuthnStatementType.set_AuthnContext(AuthnContextType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AuthnInstantGet">
            <summary>设置 AuthnStatementType.get_AuthnInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AuthnInstantSetDateTime">
            <summary>设置 AuthnStatementType.set_AuthnInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.Constructor">
            <summary>设置 AuthnStatementType.AuthnStatementType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.SessionIndexGet">
            <summary>设置 AuthnStatementType.get_SessionIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.SessionIndexSetString">
            <summary>设置 AuthnStatementType.set_SessionIndex(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.SessionNotOnOrAfterGet">
            <summary>设置 AuthnStatementType.get_SessionNotOnOrAfter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.SessionNotOnOrAfterSetDateTime">
            <summary>设置 AuthnStatementType.set_SessionNotOnOrAfter(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.SessionNotOnOrAfterSpecifiedGet">
            <summary>设置 AuthnStatementType.get_SessionNotOnOrAfterSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.SessionNotOnOrAfterSpecifiedSetBoolean">
            <summary>设置 AuthnStatementType.set_SessionNotOnOrAfterSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.SubjectLocalityGet">
            <summary>设置 AuthnStatementType.get_SubjectLocality() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.SubjectLocalitySetSubjectLocalityType">
            <summary>设置 AuthnStatementType.set_SubjectLocality(SubjectLocalityType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.AuthnContextGet">
            <summary>设置 AuthnStatementType.get_AuthnContext() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.AuthnContextSetAuthnContextType">
            <summary>设置 AuthnStatementType.set_AuthnContext(AuthnContextType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.AuthnInstantGet">
            <summary>设置 AuthnStatementType.get_AuthnInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.AuthnInstantSetDateTime">
            <summary>设置 AuthnStatementType.set_AuthnInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.SessionIndexGet">
            <summary>设置 AuthnStatementType.get_SessionIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.SessionIndexSetString">
            <summary>设置 AuthnStatementType.set_SessionIndex(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.SessionNotOnOrAfterGet">
            <summary>设置 AuthnStatementType.get_SessionNotOnOrAfter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.SessionNotOnOrAfterSetDateTime">
            <summary>设置 AuthnStatementType.set_SessionNotOnOrAfter(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.SessionNotOnOrAfterSpecifiedGet">
            <summary>设置 AuthnStatementType.get_SessionNotOnOrAfterSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.SessionNotOnOrAfterSpecifiedSetBoolean">
            <summary>设置 AuthnStatementType.set_SessionNotOnOrAfterSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.SubjectLocalityGet">
            <summary>设置 AuthnStatementType.get_SubjectLocality() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthnStatementType.AllInstances.SubjectLocalitySetSubjectLocalityType">
            <summary>设置 AuthnStatementType.set_SubjectLocality(SubjectLocalityType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.AuthzDecisionStatementType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.AuthzDecisionStatementType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.ActionGet">
            <summary>设置 AuthzDecisionStatementType.get_Action() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.ActionSetActionTypeArray">
            <summary>设置 AuthzDecisionStatementType.set_Action(ActionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.Constructor">
            <summary>设置 AuthzDecisionStatementType.AuthzDecisionStatementType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.DecisionGet">
            <summary>设置 AuthzDecisionStatementType.get_Decision() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.DecisionSetDecisionType">
            <summary>设置 AuthzDecisionStatementType.set_Decision(DecisionType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.EvidenceGet">
            <summary>设置 AuthzDecisionStatementType.get_Evidence() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.EvidenceSetEvidenceType">
            <summary>设置 AuthzDecisionStatementType.set_Evidence(EvidenceType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.ResourceGet">
            <summary>设置 AuthzDecisionStatementType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.ResourceSetString">
            <summary>设置 AuthzDecisionStatementType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.AllInstances.ActionGet">
            <summary>设置 AuthzDecisionStatementType.get_Action() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.AllInstances.ActionSetActionTypeArray">
            <summary>设置 AuthzDecisionStatementType.set_Action(ActionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.AllInstances.DecisionGet">
            <summary>设置 AuthzDecisionStatementType.get_Decision() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.AllInstances.DecisionSetDecisionType">
            <summary>设置 AuthzDecisionStatementType.set_Decision(DecisionType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.AllInstances.EvidenceGet">
            <summary>设置 AuthzDecisionStatementType.get_Evidence() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.AllInstances.EvidenceSetEvidenceType">
            <summary>设置 AuthzDecisionStatementType.set_Evidence(EvidenceType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.AllInstances.ResourceGet">
            <summary>设置 AuthzDecisionStatementType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimAuthzDecisionStatementType.AllInstances.ResourceSetString">
            <summary>设置 AuthzDecisionStatementType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimStatementAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.StatementAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimStatementAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.StatementAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimStatementAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimStatementAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimStatementAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimStatementAbstractType.Constructor">
            <summary>设置 StatementAbstractType.StatementAbstractType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.ShimStatementAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAttributeStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.AttributeStatementType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAttributeStatementType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAttributeStatementType.InitializeStub">
            <summary>初始化 type StubAttributeStatementType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAttributeStatementType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAttributeStatementType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAttributeStatementType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthnStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.AuthnStatementType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthnStatementType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthnStatementType.InitializeStub">
            <summary>初始化 type StubAuthnStatementType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthnStatementType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthnStatementType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthnStatementType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthzDecisionStatementType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.AuthzDecisionStatementType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthzDecisionStatementType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthzDecisionStatementType.InitializeStub">
            <summary>初始化 type StubAuthzDecisionStatementType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthzDecisionStatementType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthzDecisionStatementType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubAuthzDecisionStatementType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubStatementAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.StatementAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubStatementAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubStatementAbstractType.InitializeStub">
            <summary>初始化 type StubStatementAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubStatementAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubStatementAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Assertion.Statement.Fakes.StubStatementAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.EvidenceType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.#ctor(DotNetCasClient.Validation.Schema.Saml20.EvidenceType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.Constructor">
            <summary>设置 EvidenceType.EvidenceType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.ItemsElementNameGet">
            <summary>设置 EvidenceType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.ItemsElementNameSetEvidenceTypeItemsElementNamesArray">
            <summary>设置 EvidenceType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.ItemsGet">
            <summary>设置 EvidenceType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.ItemsSetObjectArray">
            <summary>设置 EvidenceType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.AllInstances.ItemsElementNameGet">
            <summary>设置 EvidenceType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.AllInstances.ItemsElementNameSetEvidenceTypeItemsElementNamesArray">
            <summary>设置 EvidenceType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.AllInstances.ItemsGet">
            <summary>设置 EvidenceType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimEvidenceType.AllInstances.ItemsSetObjectArray">
            <summary>设置 EvidenceType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimKeyInfoConfirmationDataType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.KeyInfoConfirmationDataType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimKeyInfoConfirmationDataType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimKeyInfoConfirmationDataType.#ctor(DotNetCasClient.Validation.Schema.Saml20.KeyInfoConfirmationDataType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimKeyInfoConfirmationDataType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimKeyInfoConfirmationDataType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimKeyInfoConfirmationDataType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimKeyInfoConfirmationDataType.Constructor">
            <summary>设置 KeyInfoConfirmationDataType.KeyInfoConfirmationDataType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimKeyInfoConfirmationDataType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.NameIdPolicyType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.#ctor(DotNetCasClient.Validation.Schema.Saml20.NameIdPolicyType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllowCreateGet">
            <summary>设置 NameIdPolicyType.get_AllowCreate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllowCreateSetBoolean">
            <summary>设置 NameIdPolicyType.set_AllowCreate(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllowCreateSpecifiedGet">
            <summary>设置 NameIdPolicyType.get_AllowCreateSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllowCreateSpecifiedSetBoolean">
            <summary>设置 NameIdPolicyType.set_AllowCreateSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.Constructor">
            <summary>设置 NameIdPolicyType.NameIdPolicyType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.FormatGet">
            <summary>设置 NameIdPolicyType.get_Format() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.FormatSetString">
            <summary>设置 NameIdPolicyType.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.SpNameQualifierGet">
            <summary>设置 NameIdPolicyType.get_SpNameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.SpNameQualifierSetString">
            <summary>设置 NameIdPolicyType.set_SpNameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllInstances.AllowCreateGet">
            <summary>设置 NameIdPolicyType.get_AllowCreate() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllInstances.AllowCreateSetBoolean">
            <summary>设置 NameIdPolicyType.set_AllowCreate(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllInstances.AllowCreateSpecifiedGet">
            <summary>设置 NameIdPolicyType.get_AllowCreateSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllInstances.AllowCreateSpecifiedSetBoolean">
            <summary>设置 NameIdPolicyType.set_AllowCreateSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllInstances.FormatGet">
            <summary>设置 NameIdPolicyType.get_Format() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllInstances.FormatSetString">
            <summary>设置 NameIdPolicyType.set_Format(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllInstances.SpNameQualifierGet">
            <summary>设置 NameIdPolicyType.get_SpNameQualifier() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimNameIdPolicyType.AllInstances.SpNameQualifierSetString">
            <summary>设置 NameIdPolicyType.set_SpNameQualifier(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.RelayStateType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.#ctor(DotNetCasClient.Validation.Schema.Saml20.RelayStateType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.ActorGet">
            <summary>设置 RelayStateType.get_Actor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.ActorSetString">
            <summary>设置 RelayStateType.set_Actor(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.Constructor">
            <summary>设置 RelayStateType.RelayStateType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.MustUnderstandGet">
            <summary>设置 RelayStateType.get_MustUnderstand() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.MustUnderstandSetBoolean">
            <summary>设置 RelayStateType.set_MustUnderstand(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.ValueGet">
            <summary>设置 RelayStateType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.ValueSetString">
            <summary>设置 RelayStateType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.AllInstances.ActorGet">
            <summary>设置 RelayStateType.get_Actor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.AllInstances.ActorSetString">
            <summary>设置 RelayStateType.set_Actor(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.AllInstances.MustUnderstandGet">
            <summary>设置 RelayStateType.get_MustUnderstand() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.AllInstances.MustUnderstandSetBoolean">
            <summary>设置 RelayStateType.set_MustUnderstand(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.AllInstances.ValueGet">
            <summary>设置 RelayStateType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimRelayStateType.AllInstances.ValueSetString">
            <summary>设置 RelayStateType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.ResponseType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.#ctor(DotNetCasClient.Validation.Schema.Saml20.ResponseType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.ActorGet">
            <summary>设置 ResponseType.get_Actor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.ActorSetString">
            <summary>设置 ResponseType.set_Actor(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.AssertionConsumerServiceURLGet">
            <summary>设置 ResponseType.get_AssertionConsumerServiceURL() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.AssertionConsumerServiceURLSetString">
            <summary>设置 ResponseType.set_AssertionConsumerServiceURL(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.Constructor">
            <summary>设置 ResponseType.ResponseType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.MustUnderstandGet">
            <summary>设置 ResponseType.get_MustUnderstand() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.MustUnderstandSetBoolean">
            <summary>设置 ResponseType.set_MustUnderstand(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.AllInstances.ActorGet">
            <summary>设置 ResponseType.get_Actor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.AllInstances.ActorSetString">
            <summary>设置 ResponseType.set_Actor(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.AllInstances.AssertionConsumerServiceURLGet">
            <summary>设置 ResponseType.get_AssertionConsumerServiceURL() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.AllInstances.AssertionConsumerServiceURLSetString">
            <summary>设置 ResponseType.set_AssertionConsumerServiceURL(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.AllInstances.MustUnderstandGet">
            <summary>设置 ResponseType.get_MustUnderstand() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.ShimResponseType.AllInstances.MustUnderstandSetBoolean">
            <summary>设置 ResponseType.set_MustUnderstand(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubEvidenceType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.EvidenceType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubEvidenceType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubEvidenceType.InitializeStub">
            <summary>初始化 type StubEvidenceType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubEvidenceType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubEvidenceType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubEvidenceType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubKeyInfoConfirmationDataType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.KeyInfoConfirmationDataType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubKeyInfoConfirmationDataType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubKeyInfoConfirmationDataType.InitializeStub">
            <summary>初始化 type StubKeyInfoConfirmationDataType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubKeyInfoConfirmationDataType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubKeyInfoConfirmationDataType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubKeyInfoConfirmationDataType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubNameIdPolicyType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.NameIdPolicyType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubNameIdPolicyType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubNameIdPolicyType.InitializeStub">
            <summary>初始化 type StubNameIdPolicyType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubNameIdPolicyType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubNameIdPolicyType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubNameIdPolicyType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubRelayStateType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.RelayStateType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubRelayStateType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubRelayStateType.InitializeStub">
            <summary>初始化 type StubRelayStateType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubRelayStateType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubRelayStateType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubRelayStateType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.ResponseType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubResponseType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubResponseType.InitializeStub">
            <summary>初始化 type StubResponseType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubResponseType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubResponseType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Fakes.StubResponseType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AdditionalMetadataLocationType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.AdditionalMetadataLocationType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.Constructor">
            <summary>设置 AdditionalMetadataLocationType.AdditionalMetadataLocationType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.NamespaceGet">
            <summary>设置 AdditionalMetadataLocationType.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.NamespaceSetString">
            <summary>设置 AdditionalMetadataLocationType.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.ValueGet">
            <summary>设置 AdditionalMetadataLocationType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.ValueSetString">
            <summary>设置 AdditionalMetadataLocationType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.AllInstances.NamespaceGet">
            <summary>设置 AdditionalMetadataLocationType.get_Namespace() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.AllInstances.NamespaceSetString">
            <summary>设置 AdditionalMetadataLocationType.set_Namespace(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.AllInstances.ValueGet">
            <summary>设置 AdditionalMetadataLocationType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAdditionalMetadataLocationType.AllInstances.ValueSetString">
            <summary>设置 AdditionalMetadataLocationType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AffiliationDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.AffiliationDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AffiliateMemberGet">
            <summary>设置 AffiliationDescriptorType.get_AffiliateMember() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AffiliateMemberSetStringArray">
            <summary>设置 AffiliationDescriptorType.set_AffiliateMember(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AffiliationOwnerIdGet">
            <summary>设置 AffiliationDescriptorType.get_AffiliationOwnerId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AffiliationOwnerIdSetString">
            <summary>设置 AffiliationDescriptorType.set_AffiliationOwnerId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AnyAttrGet">
            <summary>设置 AffiliationDescriptorType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AnyAttrSetXmlAttributeArray">
            <summary>设置 AffiliationDescriptorType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.CacheDurationGet">
            <summary>设置 AffiliationDescriptorType.get_CacheDuration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.CacheDurationSetString">
            <summary>设置 AffiliationDescriptorType.set_CacheDuration(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.Constructor">
            <summary>设置 AffiliationDescriptorType.AffiliationDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.ExtensionsGet">
            <summary>设置 AffiliationDescriptorType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.ExtensionsSetExtensionsType">
            <summary>设置 AffiliationDescriptorType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.IdGet">
            <summary>设置 AffiliationDescriptorType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.IdSetString">
            <summary>设置 AffiliationDescriptorType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.KeyDescriptorGet">
            <summary>设置 AffiliationDescriptorType.get_KeyDescriptor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.KeyDescriptorSetKeyDescriptorTypeArray">
            <summary>设置 AffiliationDescriptorType.set_KeyDescriptor(KeyDescriptorType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.SignatureGet">
            <summary>设置 AffiliationDescriptorType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.SignatureSetSignatureType">
            <summary>设置 AffiliationDescriptorType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.ValidUntilGet">
            <summary>设置 AffiliationDescriptorType.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.ValidUntilSetDateTime">
            <summary>设置 AffiliationDescriptorType.set_ValidUntil(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.ValidUntilSpecifiedGet">
            <summary>设置 AffiliationDescriptorType.get_ValidUntilSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.ValidUntilSpecifiedSetBoolean">
            <summary>设置 AffiliationDescriptorType.set_ValidUntilSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.AffiliateMemberGet">
            <summary>设置 AffiliationDescriptorType.get_AffiliateMember() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.AffiliateMemberSetStringArray">
            <summary>设置 AffiliationDescriptorType.set_AffiliateMember(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.AffiliationOwnerIdGet">
            <summary>设置 AffiliationDescriptorType.get_AffiliationOwnerId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.AffiliationOwnerIdSetString">
            <summary>设置 AffiliationDescriptorType.set_AffiliationOwnerId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.AnyAttrGet">
            <summary>设置 AffiliationDescriptorType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 AffiliationDescriptorType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.CacheDurationGet">
            <summary>设置 AffiliationDescriptorType.get_CacheDuration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.CacheDurationSetString">
            <summary>设置 AffiliationDescriptorType.set_CacheDuration(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.ExtensionsGet">
            <summary>设置 AffiliationDescriptorType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.ExtensionsSetExtensionsType">
            <summary>设置 AffiliationDescriptorType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.IdGet">
            <summary>设置 AffiliationDescriptorType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.IdSetString">
            <summary>设置 AffiliationDescriptorType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.KeyDescriptorGet">
            <summary>设置 AffiliationDescriptorType.get_KeyDescriptor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.KeyDescriptorSetKeyDescriptorTypeArray">
            <summary>设置 AffiliationDescriptorType.set_KeyDescriptor(KeyDescriptorType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.SignatureGet">
            <summary>设置 AffiliationDescriptorType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.SignatureSetSignatureType">
            <summary>设置 AffiliationDescriptorType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.ValidUntilGet">
            <summary>设置 AffiliationDescriptorType.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.ValidUntilSetDateTime">
            <summary>设置 AffiliationDescriptorType.set_ValidUntil(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.ValidUntilSpecifiedGet">
            <summary>设置 AffiliationDescriptorType.get_ValidUntilSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAffiliationDescriptorType.AllInstances.ValidUntilSpecifiedSetBoolean">
            <summary>设置 AffiliationDescriptorType.set_ValidUntilSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AttributeAuthorityDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.AttributeAuthorityDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AssertionIdRequestServiceGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_AssertionIdRequestService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AssertionIdRequestServiceSetEndpointTypeArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_AssertionIdRequestService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AttributeGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_Attribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AttributeProfileGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_AttributeProfile() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AttributeProfileSetStringArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_AttributeProfile(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AttributeServiceGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_AttributeService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AttributeServiceSetEndpointTypeArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_AttributeService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AttributeSetAttributeTypeArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_Attribute(AttributeType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.Constructor">
            <summary>设置 AttributeAuthorityDescriptorType.AttributeAuthorityDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.NameIdFormatGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_NameIdFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.NameIdFormatSetStringArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_NameIdFormat(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.AssertionIdRequestServiceGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_AssertionIdRequestService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.AssertionIdRequestServiceSetEndpointTypeArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_AssertionIdRequestService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.AttributeGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_Attribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.AttributeProfileGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_AttributeProfile() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.AttributeProfileSetStringArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_AttributeProfile(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.AttributeServiceGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_AttributeService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.AttributeServiceSetEndpointTypeArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_AttributeService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.AttributeSetAttributeTypeArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_Attribute(AttributeType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.NameIdFormatGet">
            <summary>设置 AttributeAuthorityDescriptorType.get_NameIdFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeAuthorityDescriptorType.AllInstances.NameIdFormatSetStringArray">
            <summary>设置 AttributeAuthorityDescriptorType.set_NameIdFormat(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AttributeConsumingServiceType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.AttributeConsumingServiceType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.Constructor">
            <summary>设置 AttributeConsumingServiceType.AttributeConsumingServiceType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.IndexGet">
            <summary>设置 AttributeConsumingServiceType.get_Index() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.IndexSetUInt16">
            <summary>设置 AttributeConsumingServiceType.set_Index(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.IsDefaultGet">
            <summary>设置 AttributeConsumingServiceType.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.IsDefaultSetBoolean">
            <summary>设置 AttributeConsumingServiceType.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.IsDefaultSpecifiedGet">
            <summary>设置 AttributeConsumingServiceType.get_IsDefaultSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.IsDefaultSpecifiedSetBoolean">
            <summary>设置 AttributeConsumingServiceType.set_IsDefaultSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.RequestedAttributeGet">
            <summary>设置 AttributeConsumingServiceType.get_RequestedAttribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.RequestedAttributeSetRequestedAttributeTypeArray">
            <summary>设置 AttributeConsumingServiceType.set_RequestedAttribute(RequestedAttributeType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.ServiceDescriptionGet">
            <summary>设置 AttributeConsumingServiceType.get_ServiceDescription() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.ServiceDescriptionSetLocalizedNameTypeArray">
            <summary>设置 AttributeConsumingServiceType.set_ServiceDescription(LocalizedNameType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.ServiceNameGet">
            <summary>设置 AttributeConsumingServiceType.get_ServiceName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.ServiceNameSetLocalizedNameTypeArray">
            <summary>设置 AttributeConsumingServiceType.set_ServiceName(LocalizedNameType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.IndexGet">
            <summary>设置 AttributeConsumingServiceType.get_Index() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.IndexSetUInt16">
            <summary>设置 AttributeConsumingServiceType.set_Index(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.IsDefaultGet">
            <summary>设置 AttributeConsumingServiceType.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.IsDefaultSetBoolean">
            <summary>设置 AttributeConsumingServiceType.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.IsDefaultSpecifiedGet">
            <summary>设置 AttributeConsumingServiceType.get_IsDefaultSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.IsDefaultSpecifiedSetBoolean">
            <summary>设置 AttributeConsumingServiceType.set_IsDefaultSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.RequestedAttributeGet">
            <summary>设置 AttributeConsumingServiceType.get_RequestedAttribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.RequestedAttributeSetRequestedAttributeTypeArray">
            <summary>设置 AttributeConsumingServiceType.set_RequestedAttribute(RequestedAttributeType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.ServiceDescriptionGet">
            <summary>设置 AttributeConsumingServiceType.get_ServiceDescription() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.ServiceDescriptionSetLocalizedNameTypeArray">
            <summary>设置 AttributeConsumingServiceType.set_ServiceDescription(LocalizedNameType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.ServiceNameGet">
            <summary>设置 AttributeConsumingServiceType.get_ServiceName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAttributeConsumingServiceType.AllInstances.ServiceNameSetLocalizedNameTypeArray">
            <summary>设置 AttributeConsumingServiceType.set_ServiceName(LocalizedNameType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AuthnAuthorityDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.AuthnAuthorityDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AssertionIdRequestServiceGet">
            <summary>设置 AuthnAuthorityDescriptorType.get_AssertionIdRequestService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AssertionIdRequestServiceSetEndpointTypeArray">
            <summary>设置 AuthnAuthorityDescriptorType.set_AssertionIdRequestService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AuthnQueryServiceGet">
            <summary>设置 AuthnAuthorityDescriptorType.get_AuthnQueryService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AuthnQueryServiceSetEndpointTypeArray">
            <summary>设置 AuthnAuthorityDescriptorType.set_AuthnQueryService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.Constructor">
            <summary>设置 AuthnAuthorityDescriptorType.AuthnAuthorityDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.NameIdFormatGet">
            <summary>设置 AuthnAuthorityDescriptorType.get_NameIdFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.NameIdFormatSetStringArray">
            <summary>设置 AuthnAuthorityDescriptorType.set_NameIdFormat(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AllInstances.AssertionIdRequestServiceGet">
            <summary>设置 AuthnAuthorityDescriptorType.get_AssertionIdRequestService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AllInstances.AssertionIdRequestServiceSetEndpointTypeArray">
            <summary>设置 AuthnAuthorityDescriptorType.set_AssertionIdRequestService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AllInstances.AuthnQueryServiceGet">
            <summary>设置 AuthnAuthorityDescriptorType.get_AuthnQueryService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AllInstances.AuthnQueryServiceSetEndpointTypeArray">
            <summary>设置 AuthnAuthorityDescriptorType.set_AuthnQueryService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AllInstances.NameIdFormatGet">
            <summary>设置 AuthnAuthorityDescriptorType.get_NameIdFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimAuthnAuthorityDescriptorType.AllInstances.NameIdFormatSetStringArray">
            <summary>设置 AuthnAuthorityDescriptorType.set_NameIdFormat(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.ContactType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.ContactType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AnyAttrGet">
            <summary>设置 ContactType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AnyAttrSetXmlAttributeArray">
            <summary>设置 ContactType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.CompanyGet">
            <summary>设置 ContactType.get_Company() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.CompanySetString">
            <summary>设置 ContactType.set_Company(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.Constructor">
            <summary>设置 ContactType.ContactType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.ContactTypeTypeGet">
            <summary>设置 ContactType.get_ContactTypeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.ContactTypeTypeSetContactTypeType">
            <summary>设置 ContactType.set_ContactTypeType(ContactTypeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.EmailAddressGet">
            <summary>设置 ContactType.get_EmailAddress() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.EmailAddressSetStringArray">
            <summary>设置 ContactType.set_EmailAddress(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.ExtensionsGet">
            <summary>设置 ContactType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.ExtensionsSetExtensionsType">
            <summary>设置 ContactType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.GivenNameGet">
            <summary>设置 ContactType.get_GivenName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.GivenNameSetString">
            <summary>设置 ContactType.set_GivenName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.SurNameGet">
            <summary>设置 ContactType.get_SurName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.SurNameSetString">
            <summary>设置 ContactType.set_SurName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.TelephoneNumberGet">
            <summary>设置 ContactType.get_TelephoneNumber() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.TelephoneNumberSetStringArray">
            <summary>设置 ContactType.set_TelephoneNumber(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.AnyAttrGet">
            <summary>设置 ContactType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 ContactType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.CompanyGet">
            <summary>设置 ContactType.get_Company() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.CompanySetString">
            <summary>设置 ContactType.set_Company(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.ContactTypeTypeGet">
            <summary>设置 ContactType.get_ContactTypeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.ContactTypeTypeSetContactTypeType">
            <summary>设置 ContactType.set_ContactTypeType(ContactTypeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.EmailAddressGet">
            <summary>设置 ContactType.get_EmailAddress() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.EmailAddressSetStringArray">
            <summary>设置 ContactType.set_EmailAddress(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.ExtensionsGet">
            <summary>设置 ContactType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.ExtensionsSetExtensionsType">
            <summary>设置 ContactType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.GivenNameGet">
            <summary>设置 ContactType.get_GivenName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.GivenNameSetString">
            <summary>设置 ContactType.set_GivenName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.SurNameGet">
            <summary>设置 ContactType.get_SurName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.SurNameSetString">
            <summary>设置 ContactType.set_SurName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.TelephoneNumberGet">
            <summary>设置 ContactType.get_TelephoneNumber() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimContactType.AllInstances.TelephoneNumberSetStringArray">
            <summary>设置 ContactType.set_TelephoneNumber(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.EndpointType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.EndpointType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AnyAttrGet">
            <summary>设置 EndpointType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AnyAttrSetXmlAttributeArray">
            <summary>设置 EndpointType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AnyGet">
            <summary>设置 EndpointType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AnySetXmlElementArray">
            <summary>设置 EndpointType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.BindingGet">
            <summary>设置 EndpointType.get_Binding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.BindingSetString">
            <summary>设置 EndpointType.set_Binding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.Constructor">
            <summary>设置 EndpointType.EndpointType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.LocationGet">
            <summary>设置 EndpointType.get_Location() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.LocationSetString">
            <summary>设置 EndpointType.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.ResponseLocationGet">
            <summary>设置 EndpointType.get_ResponseLocation() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.ResponseLocationSetString">
            <summary>设置 EndpointType.set_ResponseLocation(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.AnyAttrGet">
            <summary>设置 EndpointType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 EndpointType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.AnyGet">
            <summary>设置 EndpointType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.AnySetXmlElementArray">
            <summary>设置 EndpointType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.BindingGet">
            <summary>设置 EndpointType.get_Binding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.BindingSetString">
            <summary>设置 EndpointType.set_Binding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.LocationGet">
            <summary>设置 EndpointType.get_Location() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.LocationSetString">
            <summary>设置 EndpointType.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.ResponseLocationGet">
            <summary>设置 EndpointType.get_ResponseLocation() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEndpointType.AllInstances.ResponseLocationSetString">
            <summary>设置 EndpointType.set_ResponseLocation(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.EntitiesDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.EntitiesDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.CacheDurationGet">
            <summary>设置 EntitiesDescriptorType.get_CacheDuration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.CacheDurationSetString">
            <summary>设置 EntitiesDescriptorType.set_CacheDuration(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.Constructor">
            <summary>设置 EntitiesDescriptorType.EntitiesDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.ExtensionsGet">
            <summary>设置 EntitiesDescriptorType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.ExtensionsSetExtensionsType">
            <summary>设置 EntitiesDescriptorType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.IdGet">
            <summary>设置 EntitiesDescriptorType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.IdSetString">
            <summary>设置 EntitiesDescriptorType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.ItemsGet">
            <summary>设置 EntitiesDescriptorType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.ItemsSetObjectArray">
            <summary>设置 EntitiesDescriptorType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.NameGet">
            <summary>设置 EntitiesDescriptorType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.NameSetString">
            <summary>设置 EntitiesDescriptorType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.SignatureGet">
            <summary>设置 EntitiesDescriptorType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.SignatureSetSignatureType">
            <summary>设置 EntitiesDescriptorType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.ValidUntilGet">
            <summary>设置 EntitiesDescriptorType.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.ValidUntilSetDateTime">
            <summary>设置 EntitiesDescriptorType.set_ValidUntil(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.ValidUntilSpecifiedGet">
            <summary>设置 EntitiesDescriptorType.get_ValidUntilSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.ValidUntilSpecifiedSetBoolean">
            <summary>设置 EntitiesDescriptorType.set_ValidUntilSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.CacheDurationGet">
            <summary>设置 EntitiesDescriptorType.get_CacheDuration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.CacheDurationSetString">
            <summary>设置 EntitiesDescriptorType.set_CacheDuration(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.ExtensionsGet">
            <summary>设置 EntitiesDescriptorType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.ExtensionsSetExtensionsType">
            <summary>设置 EntitiesDescriptorType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.IdGet">
            <summary>设置 EntitiesDescriptorType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.IdSetString">
            <summary>设置 EntitiesDescriptorType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.ItemsGet">
            <summary>设置 EntitiesDescriptorType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.ItemsSetObjectArray">
            <summary>设置 EntitiesDescriptorType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.NameGet">
            <summary>设置 EntitiesDescriptorType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.NameSetString">
            <summary>设置 EntitiesDescriptorType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.SignatureGet">
            <summary>设置 EntitiesDescriptorType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.SignatureSetSignatureType">
            <summary>设置 EntitiesDescriptorType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.ValidUntilGet">
            <summary>设置 EntitiesDescriptorType.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.ValidUntilSetDateTime">
            <summary>设置 EntitiesDescriptorType.set_ValidUntil(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.ValidUntilSpecifiedGet">
            <summary>设置 EntitiesDescriptorType.get_ValidUntilSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntitiesDescriptorType.AllInstances.ValidUntilSpecifiedSetBoolean">
            <summary>设置 EntitiesDescriptorType.set_ValidUntilSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.EntityDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.EntityDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AdditionalMetadataLocationGet">
            <summary>设置 EntityDescriptorType.get_AdditionalMetadataLocation() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AdditionalMetadataLocationSetAdditionalMetadataLocationTypeArray">
            <summary>设置 EntityDescriptorType.set_AdditionalMetadataLocation(AdditionalMetadataLocationType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AnyAttrGet">
            <summary>设置 EntityDescriptorType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AnyAttrSetXmlAttributeArray">
            <summary>设置 EntityDescriptorType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.CacheDurationGet">
            <summary>设置 EntityDescriptorType.get_CacheDuration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.CacheDurationSetString">
            <summary>设置 EntityDescriptorType.set_CacheDuration(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.Constructor">
            <summary>设置 EntityDescriptorType.EntityDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ContactPersonGet">
            <summary>设置 EntityDescriptorType.get_ContactPerson() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ContactPersonSetContactTypeArray">
            <summary>设置 EntityDescriptorType.set_ContactPerson(ContactType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.EntityIdGet">
            <summary>设置 EntityDescriptorType.get_EntityId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.EntityIdSetString">
            <summary>设置 EntityDescriptorType.set_EntityId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ExtensionsGet">
            <summary>设置 EntityDescriptorType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ExtensionsSetExtensionsType">
            <summary>设置 EntityDescriptorType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.IdGet">
            <summary>设置 EntityDescriptorType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.IdSetString">
            <summary>设置 EntityDescriptorType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ItemsGet">
            <summary>设置 EntityDescriptorType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ItemsSetObjectArray">
            <summary>设置 EntityDescriptorType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.OrganizationGet">
            <summary>设置 EntityDescriptorType.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.OrganizationSetOrganizationType">
            <summary>设置 EntityDescriptorType.set_Organization(OrganizationType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.SignatureGet">
            <summary>设置 EntityDescriptorType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.SignatureSetSignatureType">
            <summary>设置 EntityDescriptorType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ValidUntilGet">
            <summary>设置 EntityDescriptorType.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ValidUntilSetDateTime">
            <summary>设置 EntityDescriptorType.set_ValidUntil(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ValidUntilSpecifiedGet">
            <summary>设置 EntityDescriptorType.get_ValidUntilSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.ValidUntilSpecifiedSetBoolean">
            <summary>设置 EntityDescriptorType.set_ValidUntilSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.AdditionalMetadataLocationGet">
            <summary>设置 EntityDescriptorType.get_AdditionalMetadataLocation() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.AdditionalMetadataLocationSetAdditionalMetadataLocationTypeArray">
            <summary>设置 EntityDescriptorType.set_AdditionalMetadataLocation(AdditionalMetadataLocationType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.AnyAttrGet">
            <summary>设置 EntityDescriptorType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 EntityDescriptorType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.CacheDurationGet">
            <summary>设置 EntityDescriptorType.get_CacheDuration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.CacheDurationSetString">
            <summary>设置 EntityDescriptorType.set_CacheDuration(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ContactPersonGet">
            <summary>设置 EntityDescriptorType.get_ContactPerson() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ContactPersonSetContactTypeArray">
            <summary>设置 EntityDescriptorType.set_ContactPerson(ContactType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.EntityIdGet">
            <summary>设置 EntityDescriptorType.get_EntityId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.EntityIdSetString">
            <summary>设置 EntityDescriptorType.set_EntityId(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ExtensionsGet">
            <summary>设置 EntityDescriptorType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ExtensionsSetExtensionsType">
            <summary>设置 EntityDescriptorType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.IdGet">
            <summary>设置 EntityDescriptorType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.IdSetString">
            <summary>设置 EntityDescriptorType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ItemsGet">
            <summary>设置 EntityDescriptorType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ItemsSetObjectArray">
            <summary>设置 EntityDescriptorType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.OrganizationGet">
            <summary>设置 EntityDescriptorType.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.OrganizationSetOrganizationType">
            <summary>设置 EntityDescriptorType.set_Organization(OrganizationType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.SignatureGet">
            <summary>设置 EntityDescriptorType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.SignatureSetSignatureType">
            <summary>设置 EntityDescriptorType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ValidUntilGet">
            <summary>设置 EntityDescriptorType.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ValidUntilSetDateTime">
            <summary>设置 EntityDescriptorType.set_ValidUntil(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ValidUntilSpecifiedGet">
            <summary>设置 EntityDescriptorType.get_ValidUntilSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimEntityDescriptorType.AllInstances.ValidUntilSpecifiedSetBoolean">
            <summary>设置 EntityDescriptorType.set_ValidUntilSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.ExtensionsType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.ExtensionsType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.AnyGet">
            <summary>设置 ExtensionsType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.AnySetXmlElementArray">
            <summary>设置 ExtensionsType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.Constructor">
            <summary>设置 ExtensionsType.ExtensionsType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.AllInstances.AnyGet">
            <summary>设置 ExtensionsType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimExtensionsType.AllInstances.AnySetXmlElementArray">
            <summary>设置 ExtensionsType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.IdpSsoDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.IdpSsoDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AssertionIdRequestServiceGet">
            <summary>设置 IdpSsoDescriptorType.get_AssertionIdRequestService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AssertionIdRequestServiceSetEndpointTypeArray">
            <summary>设置 IdpSsoDescriptorType.set_AssertionIdRequestService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AttributeGet">
            <summary>设置 IdpSsoDescriptorType.get_Attribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AttributeProfileGet">
            <summary>设置 IdpSsoDescriptorType.get_AttributeProfile() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AttributeProfileSetStringArray">
            <summary>设置 IdpSsoDescriptorType.set_AttributeProfile(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AttributeSetAttributeTypeArray">
            <summary>设置 IdpSsoDescriptorType.set_Attribute(AttributeType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.Constructor">
            <summary>设置 IdpSsoDescriptorType.IdpSsoDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.NameIdMappingServiceGet">
            <summary>设置 IdpSsoDescriptorType.get_NameIdMappingService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.NameIdMappingServiceSetEndpointTypeArray">
            <summary>设置 IdpSsoDescriptorType.set_NameIdMappingService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.SingleSignOnServiceGet">
            <summary>设置 IdpSsoDescriptorType.get_SingleSignOnService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.SingleSignOnServiceSetEndpointTypeArray">
            <summary>设置 IdpSsoDescriptorType.set_SingleSignOnService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.WantAuthnRequestsSignedGet">
            <summary>设置 IdpSsoDescriptorType.get_WantAuthnRequestsSigned() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.WantAuthnRequestsSignedSetBoolean">
            <summary>设置 IdpSsoDescriptorType.set_WantAuthnRequestsSigned(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.WantAuthnRequestsSignedSpecifiedGet">
            <summary>设置 IdpSsoDescriptorType.get_WantAuthnRequestsSignedSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.WantAuthnRequestsSignedSpecifiedSetBoolean">
            <summary>设置 IdpSsoDescriptorType.set_WantAuthnRequestsSignedSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.AssertionIdRequestServiceGet">
            <summary>设置 IdpSsoDescriptorType.get_AssertionIdRequestService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.AssertionIdRequestServiceSetEndpointTypeArray">
            <summary>设置 IdpSsoDescriptorType.set_AssertionIdRequestService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.AttributeGet">
            <summary>设置 IdpSsoDescriptorType.get_Attribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.AttributeProfileGet">
            <summary>设置 IdpSsoDescriptorType.get_AttributeProfile() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.AttributeProfileSetStringArray">
            <summary>设置 IdpSsoDescriptorType.set_AttributeProfile(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.AttributeSetAttributeTypeArray">
            <summary>设置 IdpSsoDescriptorType.set_Attribute(AttributeType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.NameIdMappingServiceGet">
            <summary>设置 IdpSsoDescriptorType.get_NameIdMappingService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.NameIdMappingServiceSetEndpointTypeArray">
            <summary>设置 IdpSsoDescriptorType.set_NameIdMappingService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.SingleSignOnServiceGet">
            <summary>设置 IdpSsoDescriptorType.get_SingleSignOnService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.SingleSignOnServiceSetEndpointTypeArray">
            <summary>设置 IdpSsoDescriptorType.set_SingleSignOnService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.WantAuthnRequestsSignedGet">
            <summary>设置 IdpSsoDescriptorType.get_WantAuthnRequestsSigned() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.WantAuthnRequestsSignedSetBoolean">
            <summary>设置 IdpSsoDescriptorType.set_WantAuthnRequestsSigned(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.WantAuthnRequestsSignedSpecifiedGet">
            <summary>设置 IdpSsoDescriptorType.get_WantAuthnRequestsSignedSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIdpSsoDescriptorType.AllInstances.WantAuthnRequestsSignedSpecifiedSetBoolean">
            <summary>设置 IdpSsoDescriptorType.set_WantAuthnRequestsSignedSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.IndexedEndpointType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.IndexedEndpointType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.Constructor">
            <summary>设置 IndexedEndpointType.IndexedEndpointType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.IndexGet">
            <summary>设置 IndexedEndpointType.get_Index() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.IndexSetUInt16">
            <summary>设置 IndexedEndpointType.set_Index(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.IsDefaultGet">
            <summary>设置 IndexedEndpointType.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.IsDefaultSetBoolean">
            <summary>设置 IndexedEndpointType.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.IsDefaultSpecifiedGet">
            <summary>设置 IndexedEndpointType.get_IsDefaultSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.IsDefaultSpecifiedSetBoolean">
            <summary>设置 IndexedEndpointType.set_IsDefaultSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.AllInstances.IndexGet">
            <summary>设置 IndexedEndpointType.get_Index() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.AllInstances.IndexSetUInt16">
            <summary>设置 IndexedEndpointType.set_Index(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.AllInstances.IsDefaultGet">
            <summary>设置 IndexedEndpointType.get_IsDefault() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.AllInstances.IsDefaultSetBoolean">
            <summary>设置 IndexedEndpointType.set_IsDefault(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.AllInstances.IsDefaultSpecifiedGet">
            <summary>设置 IndexedEndpointType.get_IsDefaultSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimIndexedEndpointType.AllInstances.IsDefaultSpecifiedSetBoolean">
            <summary>设置 IndexedEndpointType.set_IsDefaultSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.KeyDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.KeyDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.Constructor">
            <summary>设置 KeyDescriptorType.KeyDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.EncryptionMethodGet">
            <summary>设置 KeyDescriptorType.get_EncryptionMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.EncryptionMethodSetEncryptionMethodTypeArray">
            <summary>设置 KeyDescriptorType.set_EncryptionMethod(EncryptionMethodType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.KeyInfoGet">
            <summary>设置 KeyDescriptorType.get_KeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.KeyInfoSetKeyInfoType">
            <summary>设置 KeyDescriptorType.set_KeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.UseGet">
            <summary>设置 KeyDescriptorType.get_Use() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.UseSetKeyTypes">
            <summary>设置 KeyDescriptorType.set_Use(KeyTypes value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.UseSpecifiedGet">
            <summary>设置 KeyDescriptorType.get_UseSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.UseSpecifiedSetBoolean">
            <summary>设置 KeyDescriptorType.set_UseSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.AllInstances.EncryptionMethodGet">
            <summary>设置 KeyDescriptorType.get_EncryptionMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.AllInstances.EncryptionMethodSetEncryptionMethodTypeArray">
            <summary>设置 KeyDescriptorType.set_EncryptionMethod(EncryptionMethodType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.AllInstances.KeyInfoGet">
            <summary>设置 KeyDescriptorType.get_KeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.AllInstances.KeyInfoSetKeyInfoType">
            <summary>设置 KeyDescriptorType.set_KeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.AllInstances.UseGet">
            <summary>设置 KeyDescriptorType.get_Use() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.AllInstances.UseSetKeyTypes">
            <summary>设置 KeyDescriptorType.set_Use(KeyTypes value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.AllInstances.UseSpecifiedGet">
            <summary>设置 KeyDescriptorType.get_UseSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimKeyDescriptorType.AllInstances.UseSpecifiedSetBoolean">
            <summary>设置 KeyDescriptorType.set_UseSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.LocalizedNameType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.LocalizedNameType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.Constructor">
            <summary>设置 LocalizedNameType.LocalizedNameType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.LangGet">
            <summary>设置 LocalizedNameType.get_Lang() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.LangSetString">
            <summary>设置 LocalizedNameType.set_Lang(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.ValueGet">
            <summary>设置 LocalizedNameType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.ValueSetString">
            <summary>设置 LocalizedNameType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.AllInstances.LangGet">
            <summary>设置 LocalizedNameType.get_Lang() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.AllInstances.LangSetString">
            <summary>设置 LocalizedNameType.set_Lang(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.AllInstances.ValueGet">
            <summary>设置 LocalizedNameType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedNameType.AllInstances.ValueSetString">
            <summary>设置 LocalizedNameType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.LocalizedUriType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.LocalizedUriType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.Constructor">
            <summary>设置 LocalizedUriType.LocalizedUriType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.LangGet">
            <summary>设置 LocalizedUriType.get_Lang() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.LangSetString">
            <summary>设置 LocalizedUriType.set_Lang(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.ValueGet">
            <summary>设置 LocalizedUriType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.ValueSetString">
            <summary>设置 LocalizedUriType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.AllInstances.LangGet">
            <summary>设置 LocalizedUriType.get_Lang() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.AllInstances.LangSetString">
            <summary>设置 LocalizedUriType.set_Lang(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.AllInstances.ValueGet">
            <summary>设置 LocalizedUriType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimLocalizedUriType.AllInstances.ValueSetString">
            <summary>设置 LocalizedUriType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.OrganizationType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.OrganizationType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AnyAttrGet">
            <summary>设置 OrganizationType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AnyAttrSetXmlAttributeArray">
            <summary>设置 OrganizationType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.Constructor">
            <summary>设置 OrganizationType.OrganizationType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.ExtensionsGet">
            <summary>设置 OrganizationType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.ExtensionsSetExtensionsType">
            <summary>设置 OrganizationType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.OrganizationDisplayNameGet">
            <summary>设置 OrganizationType.get_OrganizationDisplayName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.OrganizationDisplayNameSetLocalizedNameTypeArray">
            <summary>设置 OrganizationType.set_OrganizationDisplayName(LocalizedNameType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.OrganizationNameGet">
            <summary>设置 OrganizationType.get_OrganizationName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.OrganizationNameSetLocalizedNameTypeArray">
            <summary>设置 OrganizationType.set_OrganizationName(LocalizedNameType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.OrganizationUrlGet">
            <summary>设置 OrganizationType.get_OrganizationUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.OrganizationUrlSetLocalizedUriTypeArray">
            <summary>设置 OrganizationType.set_OrganizationUrl(LocalizedUriType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.AnyAttrGet">
            <summary>设置 OrganizationType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 OrganizationType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.ExtensionsGet">
            <summary>设置 OrganizationType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.ExtensionsSetExtensionsType">
            <summary>设置 OrganizationType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.OrganizationDisplayNameGet">
            <summary>设置 OrganizationType.get_OrganizationDisplayName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.OrganizationDisplayNameSetLocalizedNameTypeArray">
            <summary>设置 OrganizationType.set_OrganizationDisplayName(LocalizedNameType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.OrganizationNameGet">
            <summary>设置 OrganizationType.get_OrganizationName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.OrganizationNameSetLocalizedNameTypeArray">
            <summary>设置 OrganizationType.set_OrganizationName(LocalizedNameType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.OrganizationUrlGet">
            <summary>设置 OrganizationType.get_OrganizationUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimOrganizationType.AllInstances.OrganizationUrlSetLocalizedUriTypeArray">
            <summary>设置 OrganizationType.set_OrganizationUrl(LocalizedUriType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.PdpDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.PdpDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AssertionIdRequestServiceGet">
            <summary>设置 PdpDescriptorType.get_AssertionIdRequestService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AssertionIdRequestServiceSetEndpointTypeArray">
            <summary>设置 PdpDescriptorType.set_AssertionIdRequestService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AuthzServiceGet">
            <summary>设置 PdpDescriptorType.get_AuthzService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AuthzServiceSetEndpointTypeArray">
            <summary>设置 PdpDescriptorType.set_AuthzService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.Constructor">
            <summary>设置 PdpDescriptorType.PdpDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.NameIdFormatGet">
            <summary>设置 PdpDescriptorType.get_NameIdFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.NameIdFormatSetStringArray">
            <summary>设置 PdpDescriptorType.set_NameIdFormat(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AllInstances.AssertionIdRequestServiceGet">
            <summary>设置 PdpDescriptorType.get_AssertionIdRequestService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AllInstances.AssertionIdRequestServiceSetEndpointTypeArray">
            <summary>设置 PdpDescriptorType.set_AssertionIdRequestService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AllInstances.AuthzServiceGet">
            <summary>设置 PdpDescriptorType.get_AuthzService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AllInstances.AuthzServiceSetEndpointTypeArray">
            <summary>设置 PdpDescriptorType.set_AuthzService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AllInstances.NameIdFormatGet">
            <summary>设置 PdpDescriptorType.get_NameIdFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimPdpDescriptorType.AllInstances.NameIdFormatSetStringArray">
            <summary>设置 PdpDescriptorType.set_NameIdFormat(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.RequestedAttributeType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.RequestedAttributeType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.Constructor">
            <summary>设置 RequestedAttributeType.RequestedAttributeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.IsRequiredGet">
            <summary>设置 RequestedAttributeType.get_IsRequired() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.IsRequiredSetBoolean">
            <summary>设置 RequestedAttributeType.set_IsRequired(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.IsRequiredSpecifiedGet">
            <summary>设置 RequestedAttributeType.get_IsRequiredSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.IsRequiredSpecifiedSetBoolean">
            <summary>设置 RequestedAttributeType.set_IsRequiredSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.AllInstances.IsRequiredGet">
            <summary>设置 RequestedAttributeType.get_IsRequired() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.AllInstances.IsRequiredSetBoolean">
            <summary>设置 RequestedAttributeType.set_IsRequired(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.AllInstances.IsRequiredSpecifiedGet">
            <summary>设置 RequestedAttributeType.get_IsRequiredSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRequestedAttributeType.AllInstances.IsRequiredSpecifiedSetBoolean">
            <summary>设置 RequestedAttributeType.set_IsRequiredSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.RoleDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.RoleDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AnyAttrGet">
            <summary>设置 RoleDescriptorType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AnyAttrSetXmlAttributeArray">
            <summary>设置 RoleDescriptorType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.CacheDurationGet">
            <summary>设置 RoleDescriptorType.get_CacheDuration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.CacheDurationSetString">
            <summary>设置 RoleDescriptorType.set_CacheDuration(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.Constructor">
            <summary>设置 RoleDescriptorType.RoleDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ContactPersonGet">
            <summary>设置 RoleDescriptorType.get_ContactPerson() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ContactPersonSetContactTypeArray">
            <summary>设置 RoleDescriptorType.set_ContactPerson(ContactType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ErrorUrlGet">
            <summary>设置 RoleDescriptorType.get_ErrorUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ErrorUrlSetString">
            <summary>设置 RoleDescriptorType.set_ErrorUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ExtensionsGet">
            <summary>设置 RoleDescriptorType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ExtensionsSetExtensionsType">
            <summary>设置 RoleDescriptorType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.IdGet">
            <summary>设置 RoleDescriptorType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.IdSetString">
            <summary>设置 RoleDescriptorType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.KeyDescriptorGet">
            <summary>设置 RoleDescriptorType.get_KeyDescriptor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.KeyDescriptorSetKeyDescriptorTypeArray">
            <summary>设置 RoleDescriptorType.set_KeyDescriptor(KeyDescriptorType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.OrganizationGet">
            <summary>设置 RoleDescriptorType.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.OrganizationSetOrganizationType">
            <summary>设置 RoleDescriptorType.set_Organization(OrganizationType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ProtocolSupportEnumerationGet">
            <summary>设置 RoleDescriptorType.get_ProtocolSupportEnumeration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ProtocolSupportEnumerationSetStringArray">
            <summary>设置 RoleDescriptorType.set_ProtocolSupportEnumeration(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.SignatureGet">
            <summary>设置 RoleDescriptorType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.SignatureSetSignatureType">
            <summary>设置 RoleDescriptorType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ValidUntilGet">
            <summary>设置 RoleDescriptorType.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ValidUntilSetDateTime">
            <summary>设置 RoleDescriptorType.set_ValidUntil(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ValidUntilSpecifiedGet">
            <summary>设置 RoleDescriptorType.get_ValidUntilSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.ValidUntilSpecifiedSetBoolean">
            <summary>设置 RoleDescriptorType.set_ValidUntilSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.AnyAttrGet">
            <summary>设置 RoleDescriptorType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 RoleDescriptorType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.CacheDurationGet">
            <summary>设置 RoleDescriptorType.get_CacheDuration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.CacheDurationSetString">
            <summary>设置 RoleDescriptorType.set_CacheDuration(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ContactPersonGet">
            <summary>设置 RoleDescriptorType.get_ContactPerson() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ContactPersonSetContactTypeArray">
            <summary>设置 RoleDescriptorType.set_ContactPerson(ContactType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ErrorUrlGet">
            <summary>设置 RoleDescriptorType.get_ErrorUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ErrorUrlSetString">
            <summary>设置 RoleDescriptorType.set_ErrorUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ExtensionsGet">
            <summary>设置 RoleDescriptorType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ExtensionsSetExtensionsType">
            <summary>设置 RoleDescriptorType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.IdGet">
            <summary>设置 RoleDescriptorType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.IdSetString">
            <summary>设置 RoleDescriptorType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.KeyDescriptorGet">
            <summary>设置 RoleDescriptorType.get_KeyDescriptor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.KeyDescriptorSetKeyDescriptorTypeArray">
            <summary>设置 RoleDescriptorType.set_KeyDescriptor(KeyDescriptorType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.OrganizationGet">
            <summary>设置 RoleDescriptorType.get_Organization() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.OrganizationSetOrganizationType">
            <summary>设置 RoleDescriptorType.set_Organization(OrganizationType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ProtocolSupportEnumerationGet">
            <summary>设置 RoleDescriptorType.get_ProtocolSupportEnumeration() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ProtocolSupportEnumerationSetStringArray">
            <summary>设置 RoleDescriptorType.set_ProtocolSupportEnumeration(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.SignatureGet">
            <summary>设置 RoleDescriptorType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.SignatureSetSignatureType">
            <summary>设置 RoleDescriptorType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ValidUntilGet">
            <summary>设置 RoleDescriptorType.get_ValidUntil() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ValidUntilSetDateTime">
            <summary>设置 RoleDescriptorType.set_ValidUntil(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ValidUntilSpecifiedGet">
            <summary>设置 RoleDescriptorType.get_ValidUntilSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimRoleDescriptorType.AllInstances.ValidUntilSpecifiedSetBoolean">
            <summary>设置 RoleDescriptorType.set_ValidUntilSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.SpSsoDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.SpSsoDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AssertionConsumerServiceGet">
            <summary>设置 SpSsoDescriptorType.get_AssertionConsumerService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AssertionConsumerServiceSetIndexedEndpointTypeArray">
            <summary>设置 SpSsoDescriptorType.set_AssertionConsumerService(IndexedEndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AttributeConsumingServiceGet">
            <summary>设置 SpSsoDescriptorType.get_AttributeConsumingService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AttributeConsumingServiceSetAttributeConsumingServiceTypeArray">
            <summary>设置 SpSsoDescriptorType.set_AttributeConsumingService(AttributeConsumingServiceType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AuthnRequestsSignedGet">
            <summary>设置 SpSsoDescriptorType.get_AuthnRequestsSigned() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AuthnRequestsSignedSetBoolean">
            <summary>设置 SpSsoDescriptorType.set_AuthnRequestsSigned(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AuthnRequestsSignedSpecifiedGet">
            <summary>设置 SpSsoDescriptorType.get_AuthnRequestsSignedSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AuthnRequestsSignedSpecifiedSetBoolean">
            <summary>设置 SpSsoDescriptorType.set_AuthnRequestsSignedSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.Constructor">
            <summary>设置 SpSsoDescriptorType.SpSsoDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.WantAssertionsSignedGet">
            <summary>设置 SpSsoDescriptorType.get_WantAssertionsSigned() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.WantAssertionsSignedSetBoolean">
            <summary>设置 SpSsoDescriptorType.set_WantAssertionsSigned(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.WantAssertionsSignedSpecifiedGet">
            <summary>设置 SpSsoDescriptorType.get_WantAssertionsSignedSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.WantAssertionsSignedSpecifiedSetBoolean">
            <summary>设置 SpSsoDescriptorType.set_WantAssertionsSignedSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.AssertionConsumerServiceGet">
            <summary>设置 SpSsoDescriptorType.get_AssertionConsumerService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.AssertionConsumerServiceSetIndexedEndpointTypeArray">
            <summary>设置 SpSsoDescriptorType.set_AssertionConsumerService(IndexedEndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.AttributeConsumingServiceGet">
            <summary>设置 SpSsoDescriptorType.get_AttributeConsumingService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.AttributeConsumingServiceSetAttributeConsumingServiceTypeArray">
            <summary>设置 SpSsoDescriptorType.set_AttributeConsumingService(AttributeConsumingServiceType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.AuthnRequestsSignedGet">
            <summary>设置 SpSsoDescriptorType.get_AuthnRequestsSigned() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.AuthnRequestsSignedSetBoolean">
            <summary>设置 SpSsoDescriptorType.set_AuthnRequestsSigned(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.AuthnRequestsSignedSpecifiedGet">
            <summary>设置 SpSsoDescriptorType.get_AuthnRequestsSignedSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.AuthnRequestsSignedSpecifiedSetBoolean">
            <summary>设置 SpSsoDescriptorType.set_AuthnRequestsSignedSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.WantAssertionsSignedGet">
            <summary>设置 SpSsoDescriptorType.get_WantAssertionsSigned() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.WantAssertionsSignedSetBoolean">
            <summary>设置 SpSsoDescriptorType.set_WantAssertionsSigned(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.WantAssertionsSignedSpecifiedGet">
            <summary>设置 SpSsoDescriptorType.get_WantAssertionsSignedSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSpSsoDescriptorType.AllInstances.WantAssertionsSignedSpecifiedSetBoolean">
            <summary>设置 SpSsoDescriptorType.set_WantAssertionsSignedSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.SsoDescriptorType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Metadata.SsoDescriptorType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.ArtifactResolutionServiceGet">
            <summary>设置 SsoDescriptorType.get_ArtifactResolutionService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.ArtifactResolutionServiceSetIndexedEndpointTypeArray">
            <summary>设置 SsoDescriptorType.set_ArtifactResolutionService(IndexedEndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.Constructor">
            <summary>设置 SsoDescriptorType.SsoDescriptorType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.ManageNameIdServiceGet">
            <summary>设置 SsoDescriptorType.get_ManageNameIdService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.ManageNameIdServiceSetEndpointTypeArray">
            <summary>设置 SsoDescriptorType.set_ManageNameIdService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.NameIdFormatGet">
            <summary>设置 SsoDescriptorType.get_NameIdFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.NameIdFormatSetStringArray">
            <summary>设置 SsoDescriptorType.set_NameIdFormat(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.SingleLogoutServiceGet">
            <summary>设置 SsoDescriptorType.get_SingleLogoutService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.SingleLogoutServiceSetEndpointTypeArray">
            <summary>设置 SsoDescriptorType.set_SingleLogoutService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.AllInstances.ArtifactResolutionServiceGet">
            <summary>设置 SsoDescriptorType.get_ArtifactResolutionService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.AllInstances.ArtifactResolutionServiceSetIndexedEndpointTypeArray">
            <summary>设置 SsoDescriptorType.set_ArtifactResolutionService(IndexedEndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.AllInstances.ManageNameIdServiceGet">
            <summary>设置 SsoDescriptorType.get_ManageNameIdService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.AllInstances.ManageNameIdServiceSetEndpointTypeArray">
            <summary>设置 SsoDescriptorType.set_ManageNameIdService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.AllInstances.NameIdFormatGet">
            <summary>设置 SsoDescriptorType.get_NameIdFormat() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.AllInstances.NameIdFormatSetStringArray">
            <summary>设置 SsoDescriptorType.set_NameIdFormat(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.AllInstances.SingleLogoutServiceGet">
            <summary>设置 SsoDescriptorType.get_SingleLogoutService() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.ShimSsoDescriptorType.AllInstances.SingleLogoutServiceSetEndpointTypeArray">
            <summary>设置 SsoDescriptorType.set_SingleLogoutService(EndpointType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAdditionalMetadataLocationType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AdditionalMetadataLocationType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAdditionalMetadataLocationType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAdditionalMetadataLocationType.InitializeStub">
            <summary>初始化 type StubAdditionalMetadataLocationType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAdditionalMetadataLocationType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAdditionalMetadataLocationType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAdditionalMetadataLocationType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAffiliationDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AffiliationDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAffiliationDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAffiliationDescriptorType.InitializeStub">
            <summary>初始化 type StubAffiliationDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAffiliationDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAffiliationDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAffiliationDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeAuthorityDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AttributeAuthorityDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeAuthorityDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeAuthorityDescriptorType.InitializeStub">
            <summary>初始化 type StubAttributeAuthorityDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeAuthorityDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeAuthorityDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeAuthorityDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeConsumingServiceType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AttributeConsumingServiceType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeConsumingServiceType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeConsumingServiceType.InitializeStub">
            <summary>初始化 type StubAttributeConsumingServiceType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeConsumingServiceType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeConsumingServiceType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAttributeConsumingServiceType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAuthnAuthorityDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.AuthnAuthorityDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAuthnAuthorityDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAuthnAuthorityDescriptorType.InitializeStub">
            <summary>初始化 type StubAuthnAuthorityDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAuthnAuthorityDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAuthnAuthorityDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubAuthnAuthorityDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubContactType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.ContactType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubContactType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubContactType.InitializeStub">
            <summary>初始化 type StubContactType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubContactType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubContactType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubContactType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEndpointType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.EndpointType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEndpointType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEndpointType.InitializeStub">
            <summary>初始化 type StubEndpointType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEndpointType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEndpointType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEndpointType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntitiesDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.EntitiesDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntitiesDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntitiesDescriptorType.InitializeStub">
            <summary>初始化 type StubEntitiesDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntitiesDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntitiesDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntitiesDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntityDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.EntityDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntityDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntityDescriptorType.InitializeStub">
            <summary>初始化 type StubEntityDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntityDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntityDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubEntityDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubExtensionsType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.ExtensionsType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubExtensionsType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubExtensionsType.InitializeStub">
            <summary>初始化 type StubExtensionsType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubExtensionsType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubExtensionsType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubExtensionsType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIdpSsoDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.IdpSsoDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIdpSsoDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIdpSsoDescriptorType.InitializeStub">
            <summary>初始化 type StubIdpSsoDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIdpSsoDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIdpSsoDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIdpSsoDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIndexedEndpointType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.IndexedEndpointType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIndexedEndpointType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIndexedEndpointType.InitializeStub">
            <summary>初始化 type StubIndexedEndpointType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIndexedEndpointType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIndexedEndpointType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubIndexedEndpointType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubKeyDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.KeyDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubKeyDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubKeyDescriptorType.InitializeStub">
            <summary>初始化 type StubKeyDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubKeyDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubKeyDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubKeyDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedNameType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.LocalizedNameType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedNameType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedNameType.InitializeStub">
            <summary>初始化 type StubLocalizedNameType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedNameType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedNameType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedNameType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedUriType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.LocalizedUriType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedUriType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedUriType.InitializeStub">
            <summary>初始化 type StubLocalizedUriType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedUriType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedUriType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubLocalizedUriType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubOrganizationType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.OrganizationType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubOrganizationType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubOrganizationType.InitializeStub">
            <summary>初始化 type StubOrganizationType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubOrganizationType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubOrganizationType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubOrganizationType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubPdpDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.PdpDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubPdpDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubPdpDescriptorType.InitializeStub">
            <summary>初始化 type StubPdpDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubPdpDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubPdpDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubPdpDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRequestedAttributeType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.RequestedAttributeType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRequestedAttributeType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRequestedAttributeType.InitializeStub">
            <summary>初始化 type StubRequestedAttributeType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRequestedAttributeType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRequestedAttributeType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRequestedAttributeType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRoleDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.RoleDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRoleDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRoleDescriptorType.InitializeStub">
            <summary>初始化 type StubRoleDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRoleDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRoleDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubRoleDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSpSsoDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.SpSsoDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSpSsoDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSpSsoDescriptorType.InitializeStub">
            <summary>初始化 type StubSpSsoDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSpSsoDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSpSsoDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSpSsoDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSsoDescriptorType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Metadata.SsoDescriptorType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSsoDescriptorType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSsoDescriptorType.InitializeStub">
            <summary>初始化 type StubSsoDescriptorType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSsoDescriptorType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSsoDescriptorType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Metadata.Fakes.StubSsoDescriptorType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.ExtensionsType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.ExtensionsType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.AnyGet">
            <summary>设置 ExtensionsType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.AnySetXmlElementArray">
            <summary>设置 ExtensionsType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.Constructor">
            <summary>设置 ExtensionsType.ExtensionsType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.AllInstances.AnyGet">
            <summary>设置 ExtensionsType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.ShimExtensionsType.AllInstances.AnySetXmlElementArray">
            <summary>设置 ExtensionsType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.StubExtensionsType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.ExtensionsType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.StubExtensionsType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.StubExtensionsType.InitializeStub">
            <summary>初始化 type StubExtensionsType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.StubExtensionsType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.StubExtensionsType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Extensions.Fakes.StubExtensionsType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.IdpEntryType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.IdpEntryType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.Constructor">
            <summary>设置 IdpEntryType.IdpEntryType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.LocGet">
            <summary>设置 IdpEntryType.get_Loc() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.LocSetString">
            <summary>设置 IdpEntryType.set_Loc(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.NameGet">
            <summary>设置 IdpEntryType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.NameSetString">
            <summary>设置 IdpEntryType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.ProviderIdGet">
            <summary>设置 IdpEntryType.get_ProviderId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.ProviderIdSetString">
            <summary>设置 IdpEntryType.set_ProviderId(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.AllInstances.LocGet">
            <summary>设置 IdpEntryType.get_Loc() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.AllInstances.LocSetString">
            <summary>设置 IdpEntryType.set_Loc(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.AllInstances.NameGet">
            <summary>设置 IdpEntryType.get_Name() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.AllInstances.NameSetString">
            <summary>设置 IdpEntryType.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.AllInstances.ProviderIdGet">
            <summary>设置 IdpEntryType.get_ProviderId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpEntryType.AllInstances.ProviderIdSetString">
            <summary>设置 IdpEntryType.set_ProviderId(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.IdpListType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.IdpListType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.Constructor">
            <summary>设置 IdpListType.IdpListType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.GetCompleteGet">
            <summary>设置 IdpListType.get_GetComplete() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.GetCompleteSetString">
            <summary>设置 IdpListType.set_GetComplete(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.IdpEntryGet">
            <summary>设置 IdpListType.get_IdpEntry() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.IdpEntrySetIdpEntryTypeArray">
            <summary>设置 IdpListType.set_IdpEntry(IdpEntryType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.AllInstances.GetCompleteGet">
            <summary>设置 IdpListType.get_GetComplete() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.AllInstances.GetCompleteSetString">
            <summary>设置 IdpListType.set_GetComplete(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.AllInstances.IdpEntryGet">
            <summary>设置 IdpListType.get_IdpEntry() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimIdpListType.AllInstances.IdpEntrySetIdpEntryTypeArray">
            <summary>设置 IdpListType.set_IdpEntry(IdpEntryType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.RequestedAuthnContextType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.RequestedAuthnContextType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.ComparisonGet">
            <summary>设置 RequestedAuthnContextType.get_Comparison() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.ComparisonSetAuthnContextComparisonType">
            <summary>设置 RequestedAuthnContextType.set_Comparison(AuthnContextComparisonType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.ComparisonSpecifiedGet">
            <summary>设置 RequestedAuthnContextType.get_ComparisonSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.ComparisonSpecifiedSetBoolean">
            <summary>设置 RequestedAuthnContextType.set_ComparisonSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.Constructor">
            <summary>设置 RequestedAuthnContextType.RequestedAuthnContextType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.ItemsElementNameGet">
            <summary>设置 RequestedAuthnContextType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.ItemsElementNameSetRequestedAuthnContextTypeItemsElementNamesArray">
            <summary>设置 RequestedAuthnContextType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.ItemsGet">
            <summary>设置 RequestedAuthnContextType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.ItemsSetStringArray">
            <summary>设置 RequestedAuthnContextType.set_Items(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.AllInstances.ComparisonGet">
            <summary>设置 RequestedAuthnContextType.get_Comparison() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.AllInstances.ComparisonSetAuthnContextComparisonType">
            <summary>设置 RequestedAuthnContextType.set_Comparison(AuthnContextComparisonType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.AllInstances.ComparisonSpecifiedGet">
            <summary>设置 RequestedAuthnContextType.get_ComparisonSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.AllInstances.ComparisonSpecifiedSetBoolean">
            <summary>设置 RequestedAuthnContextType.set_ComparisonSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.AllInstances.ItemsElementNameGet">
            <summary>设置 RequestedAuthnContextType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.AllInstances.ItemsElementNameSetRequestedAuthnContextTypeItemsElementNamesArray">
            <summary>设置 RequestedAuthnContextType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.AllInstances.ItemsGet">
            <summary>设置 RequestedAuthnContextType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimRequestedAuthnContextType.AllInstances.ItemsSetStringArray">
            <summary>设置 RequestedAuthnContextType.set_Items(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.ScopingType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.ScopingType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.Constructor">
            <summary>设置 ScopingType.ScopingType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.IdpListGet">
            <summary>设置 ScopingType.get_IdpList() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.IdpListSetIdpListType">
            <summary>设置 ScopingType.set_IdpList(IdpListType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.ProxyCountGet">
            <summary>设置 ScopingType.get_ProxyCount() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.ProxyCountSetString">
            <summary>设置 ScopingType.set_ProxyCount(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.RequesterIdGet">
            <summary>设置 ScopingType.get_RequesterId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.RequesterIdSetStringArray">
            <summary>设置 ScopingType.set_RequesterId(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.AllInstances.IdpListGet">
            <summary>设置 ScopingType.get_IdpList() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.AllInstances.IdpListSetIdpListType">
            <summary>设置 ScopingType.set_IdpList(IdpListType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.AllInstances.ProxyCountGet">
            <summary>设置 ScopingType.get_ProxyCount() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.AllInstances.ProxyCountSetString">
            <summary>设置 ScopingType.set_ProxyCount(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.AllInstances.RequesterIdGet">
            <summary>设置 ScopingType.get_RequesterId() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimScopingType.AllInstances.RequesterIdSetStringArray">
            <summary>设置 ScopingType.set_RequesterId(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusCodeType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusCodeType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.Constructor">
            <summary>设置 StatusCodeType.StatusCodeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.StatusCodeGet">
            <summary>设置 StatusCodeType.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.StatusCodeSetStatusCodeType">
            <summary>设置 StatusCodeType.set_StatusCode(StatusCodeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.ValueGet">
            <summary>设置 StatusCodeType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.ValueSetString">
            <summary>设置 StatusCodeType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.AllInstances.StatusCodeGet">
            <summary>设置 StatusCodeType.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.AllInstances.StatusCodeSetStatusCodeType">
            <summary>设置 StatusCodeType.set_StatusCode(StatusCodeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.AllInstances.ValueGet">
            <summary>设置 StatusCodeType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusCodeType.AllInstances.ValueSetString">
            <summary>设置 StatusCodeType.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusDetailType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusDetailType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.AnyGet">
            <summary>设置 StatusDetailType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.AnySetXmlElementArray">
            <summary>设置 StatusDetailType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.Constructor">
            <summary>设置 StatusDetailType.StatusDetailType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.AllInstances.AnyGet">
            <summary>设置 StatusDetailType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusDetailType.AllInstances.AnySetXmlElementArray">
            <summary>设置 StatusDetailType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.Constructor">
            <summary>设置 StatusType.StatusType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.StatusCodeGet">
            <summary>设置 StatusType.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.StatusCodeSetStatusCodeType">
            <summary>设置 StatusType.set_StatusCode(StatusCodeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.StatusDetailGet">
            <summary>设置 StatusType.get_StatusDetail() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.StatusDetailSetStatusDetailType">
            <summary>设置 StatusType.set_StatusDetail(StatusDetailType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.StatusMessageGet">
            <summary>设置 StatusType.get_StatusMessage() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.StatusMessageSetString">
            <summary>设置 StatusType.set_StatusMessage(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.AllInstances.StatusCodeGet">
            <summary>设置 StatusType.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.AllInstances.StatusCodeSetStatusCodeType">
            <summary>设置 StatusType.set_StatusCode(StatusCodeType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.AllInstances.StatusDetailGet">
            <summary>设置 StatusType.get_StatusDetail() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.AllInstances.StatusDetailSetStatusDetailType">
            <summary>设置 StatusType.set_StatusDetail(StatusDetailType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.AllInstances.StatusMessageGet">
            <summary>设置 StatusType.get_StatusMessage() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimStatusType.AllInstances.StatusMessageSetString">
            <summary>设置 StatusType.set_StatusMessage(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimTerminateType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.TerminateType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimTerminateType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimTerminateType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.TerminateType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimTerminateType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimTerminateType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimTerminateType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimTerminateType.Constructor">
            <summary>设置 TerminateType.TerminateType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.ShimTerminateType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpEntryType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.IdpEntryType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpEntryType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpEntryType.InitializeStub">
            <summary>初始化 type StubIdpEntryType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpEntryType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpEntryType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpEntryType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpListType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.IdpListType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpListType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpListType.InitializeStub">
            <summary>初始化 type StubIdpListType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpListType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpListType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubIdpListType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubRequestedAuthnContextType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.RequestedAuthnContextType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubRequestedAuthnContextType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubRequestedAuthnContextType.InitializeStub">
            <summary>初始化 type StubRequestedAuthnContextType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubRequestedAuthnContextType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubRequestedAuthnContextType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubRequestedAuthnContextType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubScopingType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.ScopingType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubScopingType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubScopingType.InitializeStub">
            <summary>初始化 type StubScopingType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubScopingType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubScopingType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubScopingType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusCodeType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusCodeType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusCodeType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusCodeType.InitializeStub">
            <summary>初始化 type StubStatusCodeType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusCodeType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusCodeType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusCodeType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusDetailType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusDetailType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusDetailType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusDetailType.InitializeStub">
            <summary>初始化 type StubStatusDetailType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusDetailType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusDetailType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusDetailType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusType.InitializeStub">
            <summary>初始化 type StubStatusType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubStatusType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubTerminateType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.TerminateType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubTerminateType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubTerminateType.InitializeStub">
            <summary>初始化 type StubTerminateType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubTerminateType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubTerminateType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Fakes.StubTerminateType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.ArtifactResolveType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.ArtifactResolveType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.ArtifactGet">
            <summary>设置 ArtifactResolveType.get_Artifact() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.ArtifactSetString">
            <summary>设置 ArtifactResolveType.set_Artifact(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.Constructor">
            <summary>设置 ArtifactResolveType.ArtifactResolveType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.AllInstances.ArtifactGet">
            <summary>设置 ArtifactResolveType.get_Artifact() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimArtifactResolveType.AllInstances.ArtifactSetString">
            <summary>设置 ArtifactResolveType.set_Artifact(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.AssertionIdRequestType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.AssertionIdRequestType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.AssertionIdRefGet">
            <summary>设置 AssertionIdRequestType.get_AssertionIdRef() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.AssertionIdRefSetStringArray">
            <summary>设置 AssertionIdRequestType.set_AssertionIdRef(String[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.Constructor">
            <summary>设置 AssertionIdRequestType.AssertionIdRequestType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.AllInstances.AssertionIdRefGet">
            <summary>设置 AssertionIdRequestType.get_AssertionIdRef() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAssertionIdRequestType.AllInstances.AssertionIdRefSetStringArray">
            <summary>设置 AssertionIdRequestType.set_AssertionIdRef(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.AuthnRequestType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.AuthnRequestType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AssertionConsumerServiceIndexGet">
            <summary>设置 AuthnRequestType.get_AssertionConsumerServiceIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AssertionConsumerServiceIndexSetUInt16">
            <summary>设置 AuthnRequestType.set_AssertionConsumerServiceIndex(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AssertionConsumerServiceIndexSpecifiedGet">
            <summary>设置 AuthnRequestType.get_AssertionConsumerServiceIndexSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AssertionConsumerServiceIndexSpecifiedSetBoolean">
            <summary>设置 AuthnRequestType.set_AssertionConsumerServiceIndexSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AssertionConsumerServiceUrlGet">
            <summary>设置 AuthnRequestType.get_AssertionConsumerServiceUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AssertionConsumerServiceUrlSetString">
            <summary>设置 AuthnRequestType.set_AssertionConsumerServiceUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AttributeConsumingServiceIndexGet">
            <summary>设置 AuthnRequestType.get_AttributeConsumingServiceIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AttributeConsumingServiceIndexSetUInt16">
            <summary>设置 AuthnRequestType.set_AttributeConsumingServiceIndex(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AttributeConsumingServiceIndexSpecifiedGet">
            <summary>设置 AuthnRequestType.get_AttributeConsumingServiceIndexSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AttributeConsumingServiceIndexSpecifiedSetBoolean">
            <summary>设置 AuthnRequestType.set_AttributeConsumingServiceIndexSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ConditionsGet">
            <summary>设置 AuthnRequestType.get_Conditions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ConditionsSetConditionsType">
            <summary>设置 AuthnRequestType.set_Conditions(ConditionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.Constructor">
            <summary>设置 AuthnRequestType.AuthnRequestType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ForceAuthnGet">
            <summary>设置 AuthnRequestType.get_ForceAuthn() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ForceAuthnSetBoolean">
            <summary>设置 AuthnRequestType.set_ForceAuthn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ForceAuthnSpecifiedGet">
            <summary>设置 AuthnRequestType.get_ForceAuthnSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ForceAuthnSpecifiedSetBoolean">
            <summary>设置 AuthnRequestType.set_ForceAuthnSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.IsPassiveGet">
            <summary>设置 AuthnRequestType.get_IsPassive() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.IsPassiveSetBoolean">
            <summary>设置 AuthnRequestType.set_IsPassive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.IsPassiveSpecifiedGet">
            <summary>设置 AuthnRequestType.get_IsPassiveSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.IsPassiveSpecifiedSetBoolean">
            <summary>设置 AuthnRequestType.set_IsPassiveSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.NameIdPolicyGet">
            <summary>设置 AuthnRequestType.get_NameIdPolicy() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.NameIdPolicySetNameIdPolicyType">
            <summary>设置 AuthnRequestType.set_NameIdPolicy(NameIdPolicyType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ProtocolBindingGet">
            <summary>设置 AuthnRequestType.get_ProtocolBinding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ProtocolBindingSetString">
            <summary>设置 AuthnRequestType.set_ProtocolBinding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ProviderNameGet">
            <summary>设置 AuthnRequestType.get_ProviderName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ProviderNameSetString">
            <summary>设置 AuthnRequestType.set_ProviderName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.RequestedAuthnContextGet">
            <summary>设置 AuthnRequestType.get_RequestedAuthnContext() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.RequestedAuthnContextSetRequestedAuthnContextType">
            <summary>设置 AuthnRequestType.set_RequestedAuthnContext(RequestedAuthnContextType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ScopingGet">
            <summary>设置 AuthnRequestType.get_Scoping() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.ScopingSetScopingType">
            <summary>设置 AuthnRequestType.set_Scoping(ScopingType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.SubjectGet">
            <summary>设置 AuthnRequestType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.SubjectSetSubjectType">
            <summary>设置 AuthnRequestType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AssertionConsumerServiceIndexGet">
            <summary>设置 AuthnRequestType.get_AssertionConsumerServiceIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AssertionConsumerServiceIndexSetUInt16">
            <summary>设置 AuthnRequestType.set_AssertionConsumerServiceIndex(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AssertionConsumerServiceIndexSpecifiedGet">
            <summary>设置 AuthnRequestType.get_AssertionConsumerServiceIndexSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AssertionConsumerServiceIndexSpecifiedSetBoolean">
            <summary>设置 AuthnRequestType.set_AssertionConsumerServiceIndexSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AssertionConsumerServiceUrlGet">
            <summary>设置 AuthnRequestType.get_AssertionConsumerServiceUrl() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AssertionConsumerServiceUrlSetString">
            <summary>设置 AuthnRequestType.set_AssertionConsumerServiceUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AttributeConsumingServiceIndexGet">
            <summary>设置 AuthnRequestType.get_AttributeConsumingServiceIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AttributeConsumingServiceIndexSetUInt16">
            <summary>设置 AuthnRequestType.set_AttributeConsumingServiceIndex(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AttributeConsumingServiceIndexSpecifiedGet">
            <summary>设置 AuthnRequestType.get_AttributeConsumingServiceIndexSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.AttributeConsumingServiceIndexSpecifiedSetBoolean">
            <summary>设置 AuthnRequestType.set_AttributeConsumingServiceIndexSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ConditionsGet">
            <summary>设置 AuthnRequestType.get_Conditions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ConditionsSetConditionsType">
            <summary>设置 AuthnRequestType.set_Conditions(ConditionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ForceAuthnGet">
            <summary>设置 AuthnRequestType.get_ForceAuthn() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ForceAuthnSetBoolean">
            <summary>设置 AuthnRequestType.set_ForceAuthn(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ForceAuthnSpecifiedGet">
            <summary>设置 AuthnRequestType.get_ForceAuthnSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ForceAuthnSpecifiedSetBoolean">
            <summary>设置 AuthnRequestType.set_ForceAuthnSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.IsPassiveGet">
            <summary>设置 AuthnRequestType.get_IsPassive() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.IsPassiveSetBoolean">
            <summary>设置 AuthnRequestType.set_IsPassive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.IsPassiveSpecifiedGet">
            <summary>设置 AuthnRequestType.get_IsPassiveSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.IsPassiveSpecifiedSetBoolean">
            <summary>设置 AuthnRequestType.set_IsPassiveSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.NameIdPolicyGet">
            <summary>设置 AuthnRequestType.get_NameIdPolicy() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.NameIdPolicySetNameIdPolicyType">
            <summary>设置 AuthnRequestType.set_NameIdPolicy(NameIdPolicyType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ProtocolBindingGet">
            <summary>设置 AuthnRequestType.get_ProtocolBinding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ProtocolBindingSetString">
            <summary>设置 AuthnRequestType.set_ProtocolBinding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ProviderNameGet">
            <summary>设置 AuthnRequestType.get_ProviderName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ProviderNameSetString">
            <summary>设置 AuthnRequestType.set_ProviderName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.RequestedAuthnContextGet">
            <summary>设置 AuthnRequestType.get_RequestedAuthnContext() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.RequestedAuthnContextSetRequestedAuthnContextType">
            <summary>设置 AuthnRequestType.set_RequestedAuthnContext(RequestedAuthnContextType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ScopingGet">
            <summary>设置 AuthnRequestType.get_Scoping() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.ScopingSetScopingType">
            <summary>设置 AuthnRequestType.set_Scoping(ScopingType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.SubjectGet">
            <summary>设置 AuthnRequestType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimAuthnRequestType.AllInstances.SubjectSetSubjectType">
            <summary>设置 AuthnRequestType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.LogoutRequestType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.LogoutRequestType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.Constructor">
            <summary>设置 LogoutRequestType.LogoutRequestType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.ItemGet">
            <summary>设置 LogoutRequestType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.ItemSetObject">
            <summary>设置 LogoutRequestType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.NotOnOrAfterGet">
            <summary>设置 LogoutRequestType.get_NotOnOrAfter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.NotOnOrAfterSetDateTime">
            <summary>设置 LogoutRequestType.set_NotOnOrAfter(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.NotOnOrAfterSpecifiedGet">
            <summary>设置 LogoutRequestType.get_NotOnOrAfterSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.NotOnOrAfterSpecifiedSetBoolean">
            <summary>设置 LogoutRequestType.set_NotOnOrAfterSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.ReasonGet">
            <summary>设置 LogoutRequestType.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.ReasonSetString">
            <summary>设置 LogoutRequestType.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.SessionIndexGet">
            <summary>设置 LogoutRequestType.get_SessionIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.SessionIndexSetStringArray">
            <summary>设置 LogoutRequestType.set_SessionIndex(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.ItemGet">
            <summary>设置 LogoutRequestType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.ItemSetObject">
            <summary>设置 LogoutRequestType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.NotOnOrAfterGet">
            <summary>设置 LogoutRequestType.get_NotOnOrAfter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.NotOnOrAfterSetDateTime">
            <summary>设置 LogoutRequestType.set_NotOnOrAfter(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.NotOnOrAfterSpecifiedGet">
            <summary>设置 LogoutRequestType.get_NotOnOrAfterSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.NotOnOrAfterSpecifiedSetBoolean">
            <summary>设置 LogoutRequestType.set_NotOnOrAfterSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.ReasonGet">
            <summary>设置 LogoutRequestType.get_Reason() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.ReasonSetString">
            <summary>设置 LogoutRequestType.set_Reason(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.SessionIndexGet">
            <summary>设置 LogoutRequestType.get_SessionIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimLogoutRequestType.AllInstances.SessionIndexSetStringArray">
            <summary>设置 LogoutRequestType.set_SessionIndex(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.ManageNameIdRequestType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.ManageNameIdRequestType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.Constructor">
            <summary>设置 ManageNameIdRequestType.ManageNameIdRequestType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.Item1Get">
            <summary>设置 ManageNameIdRequestType.get_Item1() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.Item1SetObject">
            <summary>设置 ManageNameIdRequestType.set_Item1(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.ItemGet">
            <summary>设置 ManageNameIdRequestType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.ItemSetObject">
            <summary>设置 ManageNameIdRequestType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.AllInstances.Item1Get">
            <summary>设置 ManageNameIdRequestType.get_Item1() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.AllInstances.Item1SetObject">
            <summary>设置 ManageNameIdRequestType.set_Item1(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.AllInstances.ItemGet">
            <summary>设置 ManageNameIdRequestType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimManageNameIdRequestType.AllInstances.ItemSetObject">
            <summary>设置 ManageNameIdRequestType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.NameIdMappingRequestType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.NameIdMappingRequestType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.Constructor">
            <summary>设置 NameIdMappingRequestType.NameIdMappingRequestType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.ItemGet">
            <summary>设置 NameIdMappingRequestType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.ItemSetObject">
            <summary>设置 NameIdMappingRequestType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.NameIdPolicyGet">
            <summary>设置 NameIdMappingRequestType.get_NameIdPolicy() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.NameIdPolicySetNameIdPolicyType">
            <summary>设置 NameIdMappingRequestType.set_NameIdPolicy(NameIdPolicyType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.AllInstances.ItemGet">
            <summary>设置 NameIdMappingRequestType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.AllInstances.ItemSetObject">
            <summary>设置 NameIdMappingRequestType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.AllInstances.NameIdPolicyGet">
            <summary>设置 NameIdMappingRequestType.get_NameIdPolicy() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimNameIdMappingRequestType.AllInstances.NameIdPolicySetNameIdPolicyType">
            <summary>设置 NameIdMappingRequestType.set_NameIdPolicy(NameIdPolicyType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.RequestAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.RequestAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.ConsentGet">
            <summary>设置 RequestAbstractType.get_Consent() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.ConsentSetString">
            <summary>设置 RequestAbstractType.set_Consent(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.Constructor">
            <summary>设置 RequestAbstractType.RequestAbstractType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.DestinationGet">
            <summary>设置 RequestAbstractType.get_Destination() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.DestinationSetString">
            <summary>设置 RequestAbstractType.set_Destination(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.ExtensionsGet">
            <summary>设置 RequestAbstractType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.ExtensionsSetExtensionsType">
            <summary>设置 RequestAbstractType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.IdGet">
            <summary>设置 RequestAbstractType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.IdSetString">
            <summary>设置 RequestAbstractType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.IssueInstantGet">
            <summary>设置 RequestAbstractType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.IssueInstantSetDateTime">
            <summary>设置 RequestAbstractType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.IssuerGet">
            <summary>设置 RequestAbstractType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.IssuerSetNameIdType">
            <summary>设置 RequestAbstractType.set_Issuer(NameIdType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.SignatureGet">
            <summary>设置 RequestAbstractType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.SignatureSetSignatureType">
            <summary>设置 RequestAbstractType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.VersionGet">
            <summary>设置 RequestAbstractType.get_Version() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.VersionSetString">
            <summary>设置 RequestAbstractType.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.ConsentGet">
            <summary>设置 RequestAbstractType.get_Consent() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.ConsentSetString">
            <summary>设置 RequestAbstractType.set_Consent(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.DestinationGet">
            <summary>设置 RequestAbstractType.get_Destination() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.DestinationSetString">
            <summary>设置 RequestAbstractType.set_Destination(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.ExtensionsGet">
            <summary>设置 RequestAbstractType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.ExtensionsSetExtensionsType">
            <summary>设置 RequestAbstractType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.IdGet">
            <summary>设置 RequestAbstractType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.IdSetString">
            <summary>设置 RequestAbstractType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.IssueInstantGet">
            <summary>设置 RequestAbstractType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.IssueInstantSetDateTime">
            <summary>设置 RequestAbstractType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.IssuerGet">
            <summary>设置 RequestAbstractType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.IssuerSetNameIdType">
            <summary>设置 RequestAbstractType.set_Issuer(NameIdType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.SignatureGet">
            <summary>设置 RequestAbstractType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.SignatureSetSignatureType">
            <summary>设置 RequestAbstractType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.VersionGet">
            <summary>设置 RequestAbstractType.get_Version() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestAbstractType.AllInstances.VersionSetString">
            <summary>设置 RequestAbstractType.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.RequestType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.RequestType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.ActorGet">
            <summary>设置 RequestType.get_Actor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.ActorSetString">
            <summary>设置 RequestType.set_Actor(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.Constructor">
            <summary>设置 RequestType.RequestType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.IdpListGet">
            <summary>设置 RequestType.get_IdpList() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.IdpListSetIdpListType">
            <summary>设置 RequestType.set_IdpList(IdpListType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.IsPassiveGet">
            <summary>设置 RequestType.get_IsPassive() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.IsPassiveSetBoolean">
            <summary>设置 RequestType.set_IsPassive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.IsPassiveSpecifiedGet">
            <summary>设置 RequestType.get_IsPassiveSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.IsPassiveSpecifiedSetBoolean">
            <summary>设置 RequestType.set_IsPassiveSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.IssuerGet">
            <summary>设置 RequestType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.IssuerSetNameIdType">
            <summary>设置 RequestType.set_Issuer(NameIdType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.MustUnderstandGet">
            <summary>设置 RequestType.get_MustUnderstand() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.MustUnderstandSetBoolean">
            <summary>设置 RequestType.set_MustUnderstand(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.ProviderNameGet">
            <summary>设置 RequestType.get_ProviderName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.ProviderNameSetString">
            <summary>设置 RequestType.set_ProviderName(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.ActorGet">
            <summary>设置 RequestType.get_Actor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.ActorSetString">
            <summary>设置 RequestType.set_Actor(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.IdpListGet">
            <summary>设置 RequestType.get_IdpList() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.IdpListSetIdpListType">
            <summary>设置 RequestType.set_IdpList(IdpListType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.IsPassiveGet">
            <summary>设置 RequestType.get_IsPassive() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.IsPassiveSetBoolean">
            <summary>设置 RequestType.set_IsPassive(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.IsPassiveSpecifiedGet">
            <summary>设置 RequestType.get_IsPassiveSpecified() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.IsPassiveSpecifiedSetBoolean">
            <summary>设置 RequestType.set_IsPassiveSpecified(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.IssuerGet">
            <summary>设置 RequestType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.IssuerSetNameIdType">
            <summary>设置 RequestType.set_Issuer(NameIdType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.MustUnderstandGet">
            <summary>设置 RequestType.get_MustUnderstand() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.MustUnderstandSetBoolean">
            <summary>设置 RequestType.set_MustUnderstand(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.ProviderNameGet">
            <summary>设置 RequestType.get_ProviderName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.ShimRequestType.AllInstances.ProviderNameSetString">
            <summary>设置 RequestType.set_ProviderName(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubArtifactResolveType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.ArtifactResolveType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubArtifactResolveType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubArtifactResolveType.InitializeStub">
            <summary>初始化 type StubArtifactResolveType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubArtifactResolveType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubArtifactResolveType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubArtifactResolveType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAssertionIdRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.AssertionIdRequestType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAssertionIdRequestType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAssertionIdRequestType.InitializeStub">
            <summary>初始化 type StubAssertionIdRequestType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAssertionIdRequestType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAssertionIdRequestType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAssertionIdRequestType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAuthnRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.AuthnRequestType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAuthnRequestType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAuthnRequestType.InitializeStub">
            <summary>初始化 type StubAuthnRequestType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAuthnRequestType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAuthnRequestType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubAuthnRequestType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubLogoutRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.LogoutRequestType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubLogoutRequestType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubLogoutRequestType.InitializeStub">
            <summary>初始化 type StubLogoutRequestType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubLogoutRequestType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubLogoutRequestType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubLogoutRequestType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubManageNameIdRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.ManageNameIdRequestType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubManageNameIdRequestType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubManageNameIdRequestType.InitializeStub">
            <summary>初始化 type StubManageNameIdRequestType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubManageNameIdRequestType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubManageNameIdRequestType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubManageNameIdRequestType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubNameIdMappingRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.NameIdMappingRequestType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubNameIdMappingRequestType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubNameIdMappingRequestType.InitializeStub">
            <summary>初始化 type StubNameIdMappingRequestType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubNameIdMappingRequestType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubNameIdMappingRequestType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubNameIdMappingRequestType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.RequestAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestAbstractType.InitializeStub">
            <summary>初始化 type StubRequestAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.RequestType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestType.InitializeStub">
            <summary>初始化 type StubRequestType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Request.Fakes.StubRequestType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.ResponseType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.ResponseType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.Constructor">
            <summary>设置 ResponseType.ResponseType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.ItemsGet">
            <summary>设置 ResponseType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.ItemsSetObjectArray">
            <summary>设置 ResponseType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.AllInstances.ItemsGet">
            <summary>设置 ResponseType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.ShimResponseType.AllInstances.ItemsSetObjectArray">
            <summary>设置 ResponseType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.StubResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.ResponseType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.StubResponseType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.StubResponseType.InitializeStub">
            <summary>初始化 type StubResponseType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.StubResponseType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.StubResponseType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.Response.Fakes.StubResponseType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.ArtifactResponseType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.ArtifactResponseType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.AnyGet">
            <summary>设置 ArtifactResponseType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.AnySetXmlElement">
            <summary>设置 ArtifactResponseType.set_Any(XmlElement value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.Constructor">
            <summary>设置 ArtifactResponseType.ArtifactResponseType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.AllInstances.AnyGet">
            <summary>设置 ArtifactResponseType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimArtifactResponseType.AllInstances.AnySetXmlElement">
            <summary>设置 ArtifactResponseType.set_Any(XmlElement value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.NameIdMappingResponseType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.NameIdMappingResponseType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.Constructor">
            <summary>设置 NameIdMappingResponseType.NameIdMappingResponseType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.ItemGet">
            <summary>设置 NameIdMappingResponseType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.ItemSetObject">
            <summary>设置 NameIdMappingResponseType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.AllInstances.ItemGet">
            <summary>设置 NameIdMappingResponseType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimNameIdMappingResponseType.AllInstances.ItemSetObject">
            <summary>设置 NameIdMappingResponseType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.StatusResponseType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.StatusResponseType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.ConsentGet">
            <summary>设置 StatusResponseType.get_Consent() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.ConsentSetString">
            <summary>设置 StatusResponseType.set_Consent(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.Constructor">
            <summary>设置 StatusResponseType.StatusResponseType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.DestinationGet">
            <summary>设置 StatusResponseType.get_Destination() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.DestinationSetString">
            <summary>设置 StatusResponseType.set_Destination(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.ExtensionsGet">
            <summary>设置 StatusResponseType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.ExtensionsSetExtensionsType">
            <summary>设置 StatusResponseType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.IdGet">
            <summary>设置 StatusResponseType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.IdSetString">
            <summary>设置 StatusResponseType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.InResponseToGet">
            <summary>设置 StatusResponseType.get_InResponseTo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.InResponseToSetString">
            <summary>设置 StatusResponseType.set_InResponseTo(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.IssueInstantGet">
            <summary>设置 StatusResponseType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.IssueInstantSetDateTime">
            <summary>设置 StatusResponseType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.IssuerGet">
            <summary>设置 StatusResponseType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.IssuerSetNameIdType">
            <summary>设置 StatusResponseType.set_Issuer(NameIdType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.SignatureGet">
            <summary>设置 StatusResponseType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.SignatureSetSignatureType">
            <summary>设置 StatusResponseType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.StatusGet">
            <summary>设置 StatusResponseType.get_Status() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.StatusSetStatusType">
            <summary>设置 StatusResponseType.set_Status(StatusType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.VersionGet">
            <summary>设置 StatusResponseType.get_Version() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.VersionSetString">
            <summary>设置 StatusResponseType.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.ConsentGet">
            <summary>设置 StatusResponseType.get_Consent() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.ConsentSetString">
            <summary>设置 StatusResponseType.set_Consent(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.DestinationGet">
            <summary>设置 StatusResponseType.get_Destination() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.DestinationSetString">
            <summary>设置 StatusResponseType.set_Destination(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.ExtensionsGet">
            <summary>设置 StatusResponseType.get_Extensions() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.ExtensionsSetExtensionsType">
            <summary>设置 StatusResponseType.set_Extensions(ExtensionsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.IdGet">
            <summary>设置 StatusResponseType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.IdSetString">
            <summary>设置 StatusResponseType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.InResponseToGet">
            <summary>设置 StatusResponseType.get_InResponseTo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.InResponseToSetString">
            <summary>设置 StatusResponseType.set_InResponseTo(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.IssueInstantGet">
            <summary>设置 StatusResponseType.get_IssueInstant() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.IssueInstantSetDateTime">
            <summary>设置 StatusResponseType.set_IssueInstant(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.IssuerGet">
            <summary>设置 StatusResponseType.get_Issuer() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.IssuerSetNameIdType">
            <summary>设置 StatusResponseType.set_Issuer(NameIdType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.SignatureGet">
            <summary>设置 StatusResponseType.get_Signature() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.SignatureSetSignatureType">
            <summary>设置 StatusResponseType.set_Signature(SignatureType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.StatusGet">
            <summary>设置 StatusResponseType.get_Status() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.StatusSetStatusType">
            <summary>设置 StatusResponseType.set_Status(StatusType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.VersionGet">
            <summary>设置 StatusResponseType.get_Version() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.ShimStatusResponseType.AllInstances.VersionSetString">
            <summary>设置 StatusResponseType.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubArtifactResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.ArtifactResponseType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubArtifactResponseType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubArtifactResponseType.InitializeStub">
            <summary>初始化 type StubArtifactResponseType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubArtifactResponseType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubArtifactResponseType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubArtifactResponseType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubNameIdMappingResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.NameIdMappingResponseType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubNameIdMappingResponseType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubNameIdMappingResponseType.InitializeStub">
            <summary>初始化 type StubNameIdMappingResponseType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubNameIdMappingResponseType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubNameIdMappingResponseType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubNameIdMappingResponseType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubStatusResponseType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.StatusResponseType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubStatusResponseType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubStatusResponseType.InitializeStub">
            <summary>初始化 type StubStatusResponseType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubStatusResponseType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubStatusResponseType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.StatusResponse.Fakes.StubStatusResponseType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.AttributeQueryType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.AttributeQueryType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AttributeGet">
            <summary>设置 AttributeQueryType.get_Attribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AttributeSetAttributeTypeArray">
            <summary>设置 AttributeQueryType.set_Attribute(AttributeType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.Constructor">
            <summary>设置 AttributeQueryType.AttributeQueryType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AllInstances.AttributeGet">
            <summary>设置 AttributeQueryType.get_Attribute() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAttributeQueryType.AllInstances.AttributeSetAttributeTypeArray">
            <summary>设置 AttributeQueryType.set_Attribute(AttributeType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.AuthnQueryType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.AuthnQueryType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.Constructor">
            <summary>设置 AuthnQueryType.AuthnQueryType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.RequestedAuthnContextGet">
            <summary>设置 AuthnQueryType.get_RequestedAuthnContext() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.RequestedAuthnContextSetRequestedAuthnContextType">
            <summary>设置 AuthnQueryType.set_RequestedAuthnContext(RequestedAuthnContextType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.SessionIndexGet">
            <summary>设置 AuthnQueryType.get_SessionIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.SessionIndexSetString">
            <summary>设置 AuthnQueryType.set_SessionIndex(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.AllInstances.RequestedAuthnContextGet">
            <summary>设置 AuthnQueryType.get_RequestedAuthnContext() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.AllInstances.RequestedAuthnContextSetRequestedAuthnContextType">
            <summary>设置 AuthnQueryType.set_RequestedAuthnContext(RequestedAuthnContextType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.AllInstances.SessionIndexGet">
            <summary>设置 AuthnQueryType.get_SessionIndex() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthnQueryType.AllInstances.SessionIndexSetString">
            <summary>设置 AuthnQueryType.set_SessionIndex(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.AuthzDecisionQueryType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.AuthzDecisionQueryType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.ActionGet">
            <summary>设置 AuthzDecisionQueryType.get_Action() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.ActionSetActionTypeArray">
            <summary>设置 AuthzDecisionQueryType.set_Action(ActionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.Constructor">
            <summary>设置 AuthzDecisionQueryType.AuthzDecisionQueryType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.EvidenceGet">
            <summary>设置 AuthzDecisionQueryType.get_Evidence() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.EvidenceSetEvidenceType">
            <summary>设置 AuthzDecisionQueryType.set_Evidence(EvidenceType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.ResourceGet">
            <summary>设置 AuthzDecisionQueryType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.ResourceSetString">
            <summary>设置 AuthzDecisionQueryType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.AllInstances.ActionGet">
            <summary>设置 AuthzDecisionQueryType.get_Action() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.AllInstances.ActionSetActionTypeArray">
            <summary>设置 AuthzDecisionQueryType.set_Action(ActionType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.AllInstances.EvidenceGet">
            <summary>设置 AuthzDecisionQueryType.get_Evidence() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.AllInstances.EvidenceSetEvidenceType">
            <summary>设置 AuthzDecisionQueryType.set_Evidence(EvidenceType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.AllInstances.ResourceGet">
            <summary>设置 AuthzDecisionQueryType.get_Resource() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimAuthzDecisionQueryType.AllInstances.ResourceSetString">
            <summary>设置 AuthzDecisionQueryType.set_Resource(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.SubjectQueryAbstractType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.#ctor(DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.SubjectQueryAbstractType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.Constructor">
            <summary>设置 SubjectQueryAbstractType.SubjectQueryAbstractType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.SubjectGet">
            <summary>设置 SubjectQueryAbstractType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.SubjectSetSubjectType">
            <summary>设置 SubjectQueryAbstractType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.AllInstances.SubjectGet">
            <summary>设置 SubjectQueryAbstractType.get_Subject() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.ShimSubjectQueryAbstractType.AllInstances.SubjectSetSubjectType">
            <summary>设置 SubjectQueryAbstractType.set_Subject(SubjectType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAttributeQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.AttributeQueryType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.InitializeStub">
            <summary>初始化 type StubAttributeQueryType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAttributeQueryType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthnQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.AuthnQueryType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthnQueryType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthnQueryType.InitializeStub">
            <summary>初始化 type StubAuthnQueryType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthnQueryType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthnQueryType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthnQueryType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthzDecisionQueryType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.AuthzDecisionQueryType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthzDecisionQueryType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthzDecisionQueryType.InitializeStub">
            <summary>初始化 type StubAuthzDecisionQueryType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthzDecisionQueryType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthzDecisionQueryType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubAuthzDecisionQueryType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType">
            <summary>DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.SubjectQueryAbstractType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.InitializeStub">
            <summary>初始化 type StubSubjectQueryAbstractType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Saml20.Protocol.SubjectQuery.Fakes.StubSubjectQueryAbstractType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Body 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.#ctor(DotNetCasClient.Validation.Schema.SoapEnvelope.Body)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.AnyAttrGet">
            <summary>设置 Body.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.AnyAttrSetXmlAttributeArray">
            <summary>设置 Body.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.AnyGet">
            <summary>设置 Body.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.AnySetXmlElementArray">
            <summary>设置 Body.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.Constructor">
            <summary>设置 Body.Body() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.AllInstances.AnyAttrGet">
            <summary>设置 Body.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 Body.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.AllInstances.AnyGet">
            <summary>设置 Body.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimBody.AllInstances.AnySetXmlElementArray">
            <summary>设置 Body.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Detail 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.#ctor(DotNetCasClient.Validation.Schema.SoapEnvelope.Detail)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.AnyAttrGet">
            <summary>设置 Detail.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.AnyAttrSetXmlAttributeArray">
            <summary>设置 Detail.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.AnyGet">
            <summary>设置 Detail.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.AnySetXmlElementArray">
            <summary>设置 Detail.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.Constructor">
            <summary>设置 Detail.Detail() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.AllInstances.AnyAttrGet">
            <summary>设置 Detail.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 Detail.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.AllInstances.AnyGet">
            <summary>设置 Detail.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimDetail.AllInstances.AnySetXmlElementArray">
            <summary>设置 Detail.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Envelope 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.#ctor(DotNetCasClient.Validation.Schema.SoapEnvelope.Envelope)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AnyAttrGet">
            <summary>设置 Envelope.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AnyAttrSetXmlAttributeArray">
            <summary>设置 Envelope.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AnyGet">
            <summary>设置 Envelope.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AnySetXmlElementArray">
            <summary>设置 Envelope.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.BodyGet">
            <summary>设置 Envelope.get_Body() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.BodySetBody">
            <summary>设置 Envelope.set_Body(Body value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.Constructor">
            <summary>设置 Envelope.Envelope() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.HeaderGet">
            <summary>设置 Envelope.get_Header() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.HeaderSetHeader">
            <summary>设置 Envelope.set_Header(Header value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AllInstances.AnyAttrGet">
            <summary>设置 Envelope.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 Envelope.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AllInstances.AnyGet">
            <summary>设置 Envelope.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AllInstances.AnySetXmlElementArray">
            <summary>设置 Envelope.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AllInstances.BodyGet">
            <summary>设置 Envelope.get_Body() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AllInstances.BodySetBody">
            <summary>设置 Envelope.set_Body(Body value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AllInstances.HeaderGet">
            <summary>设置 Envelope.get_Header() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimEnvelope.AllInstances.HeaderSetHeader">
            <summary>设置 Envelope.set_Header(Header value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Fault 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.#ctor(DotNetCasClient.Validation.Schema.SoapEnvelope.Fault)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.Constructor">
            <summary>设置 Fault.Fault() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.DetailGet">
            <summary>设置 Fault.get_Detail() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.DetailSetDetail">
            <summary>设置 Fault.set_Detail(Detail value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.FaultActorGet">
            <summary>设置 Fault.get_FaultActor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.FaultActorSetString">
            <summary>设置 Fault.set_FaultActor(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.FaultCodeGet">
            <summary>设置 Fault.get_FaultCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.FaultCodeSetXmlQualifiedName">
            <summary>设置 Fault.set_FaultCode(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.FaultStringGet">
            <summary>设置 Fault.get_FaultString() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.FaultStringSetString">
            <summary>设置 Fault.set_FaultString(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.AllInstances.DetailGet">
            <summary>设置 Fault.get_Detail() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.AllInstances.DetailSetDetail">
            <summary>设置 Fault.set_Detail(Detail value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.AllInstances.FaultActorGet">
            <summary>设置 Fault.get_FaultActor() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.AllInstances.FaultActorSetString">
            <summary>设置 Fault.set_FaultActor(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.AllInstances.FaultCodeGet">
            <summary>设置 Fault.get_FaultCode() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.AllInstances.FaultCodeSetXmlQualifiedName">
            <summary>设置 Fault.set_FaultCode(XmlQualifiedName value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.AllInstances.FaultStringGet">
            <summary>设置 Fault.get_FaultString() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimFault.AllInstances.FaultStringSetString">
            <summary>设置 Fault.set_FaultString(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Header 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.#ctor(DotNetCasClient.Validation.Schema.SoapEnvelope.Header)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.AnyAttrGet">
            <summary>设置 Header.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.AnyAttrSetXmlAttributeArray">
            <summary>设置 Header.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.AnyGet">
            <summary>设置 Header.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.AnySetXmlElementArray">
            <summary>设置 Header.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.Constructor">
            <summary>设置 Header.Header() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.AllInstances.AnyAttrGet">
            <summary>设置 Header.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 Header.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.AllInstances.AnyGet">
            <summary>设置 Header.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.ShimHeader.AllInstances.AnySetXmlElementArray">
            <summary>设置 Header.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubBody">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Body 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubBody.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubBody.InitializeStub">
            <summary>初始化 type StubBody 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubBody.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubBody.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubBody.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubDetail">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Detail 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubDetail.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubDetail.InitializeStub">
            <summary>初始化 type StubDetail 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubDetail.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubDetail.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubDetail.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubEnvelope">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Envelope 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubEnvelope.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubEnvelope.InitializeStub">
            <summary>初始化 type StubEnvelope 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubEnvelope.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubEnvelope.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubEnvelope.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubFault">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Fault 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubFault.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubFault.InitializeStub">
            <summary>初始化 type StubFault 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubFault.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubFault.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubFault.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubHeader">
            <summary>DotNetCasClient.Validation.Schema.SoapEnvelope.Header 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubHeader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubHeader.InitializeStub">
            <summary>初始化 type StubHeader 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubHeader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubHeader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.SoapEnvelope.Fakes.StubHeader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.AgreementMethodType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.#ctor(DotNetCasClient.Validation.Schema.Xenc.AgreementMethodType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AlgorithmGet">
            <summary>设置 AgreementMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AlgorithmSetString">
            <summary>设置 AgreementMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AnyGet">
            <summary>设置 AgreementMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AnySetXmlNodeArray">
            <summary>设置 AgreementMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.Constructor">
            <summary>设置 AgreementMethodType.AgreementMethodType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.KaNonceGet">
            <summary>设置 AgreementMethodType.get_KaNonce() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.KaNonceSetByteArray">
            <summary>设置 AgreementMethodType.set_KaNonce(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.OriginatorKeyInfoGet">
            <summary>设置 AgreementMethodType.get_OriginatorKeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.OriginatorKeyInfoSetKeyInfoType">
            <summary>设置 AgreementMethodType.set_OriginatorKeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.RecipientKeyInfoGet">
            <summary>设置 AgreementMethodType.get_RecipientKeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.RecipientKeyInfoSetKeyInfoType">
            <summary>设置 AgreementMethodType.set_RecipientKeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.AlgorithmGet">
            <summary>设置 AgreementMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.AlgorithmSetString">
            <summary>设置 AgreementMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.AnyGet">
            <summary>设置 AgreementMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.AnySetXmlNodeArray">
            <summary>设置 AgreementMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.KaNonceGet">
            <summary>设置 AgreementMethodType.get_KaNonce() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.KaNonceSetByteArray">
            <summary>设置 AgreementMethodType.set_KaNonce(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.OriginatorKeyInfoGet">
            <summary>设置 AgreementMethodType.get_OriginatorKeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.OriginatorKeyInfoSetKeyInfoType">
            <summary>设置 AgreementMethodType.set_OriginatorKeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.RecipientKeyInfoGet">
            <summary>设置 AgreementMethodType.get_RecipientKeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimAgreementMethodType.AllInstances.RecipientKeyInfoSetKeyInfoType">
            <summary>设置 AgreementMethodType.set_RecipientKeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.CipherDataType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.#ctor(DotNetCasClient.Validation.Schema.Xenc.CipherDataType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.Constructor">
            <summary>设置 CipherDataType.CipherDataType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.ItemGet">
            <summary>设置 CipherDataType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.ItemSetObject">
            <summary>设置 CipherDataType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.AllInstances.ItemGet">
            <summary>设置 CipherDataType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherDataType.AllInstances.ItemSetObject">
            <summary>设置 CipherDataType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.CipherReferenceType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.#ctor(DotNetCasClient.Validation.Schema.Xenc.CipherReferenceType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.Constructor">
            <summary>设置 CipherReferenceType.CipherReferenceType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.ItemGet">
            <summary>设置 CipherReferenceType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.ItemSetTransformsType">
            <summary>设置 CipherReferenceType.set_Item(TransformsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.UriGet">
            <summary>设置 CipherReferenceType.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.UriSetString">
            <summary>设置 CipherReferenceType.set_Uri(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.AllInstances.ItemGet">
            <summary>设置 CipherReferenceType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.AllInstances.ItemSetTransformsType">
            <summary>设置 CipherReferenceType.set_Item(TransformsType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.AllInstances.UriGet">
            <summary>设置 CipherReferenceType.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimCipherReferenceType.AllInstances.UriSetString">
            <summary>设置 CipherReferenceType.set_Uri(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedDataType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptedDataType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedDataType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedDataType.#ctor(DotNetCasClient.Validation.Schema.Xenc.EncryptedDataType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedDataType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedDataType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedDataType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedDataType.Constructor">
            <summary>设置 EncryptedDataType.EncryptedDataType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedDataType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptedKeyType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.#ctor(DotNetCasClient.Validation.Schema.Xenc.EncryptedKeyType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.CarriedKeyNameGet">
            <summary>设置 EncryptedKeyType.get_CarriedKeyName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.CarriedKeyNameSetString">
            <summary>设置 EncryptedKeyType.set_CarriedKeyName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.Constructor">
            <summary>设置 EncryptedKeyType.EncryptedKeyType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.RecipientGet">
            <summary>设置 EncryptedKeyType.get_Recipient() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.RecipientSetString">
            <summary>设置 EncryptedKeyType.set_Recipient(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.ReferenceListGet">
            <summary>设置 EncryptedKeyType.get_ReferenceList() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.ReferenceListSetReferenceList">
            <summary>设置 EncryptedKeyType.set_ReferenceList(ReferenceList value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.AllInstances.CarriedKeyNameGet">
            <summary>设置 EncryptedKeyType.get_CarriedKeyName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.AllInstances.CarriedKeyNameSetString">
            <summary>设置 EncryptedKeyType.set_CarriedKeyName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.AllInstances.RecipientGet">
            <summary>设置 EncryptedKeyType.get_Recipient() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.AllInstances.RecipientSetString">
            <summary>设置 EncryptedKeyType.set_Recipient(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.AllInstances.ReferenceListGet">
            <summary>设置 EncryptedKeyType.get_ReferenceList() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedKeyType.AllInstances.ReferenceListSetReferenceList">
            <summary>设置 EncryptedKeyType.set_ReferenceList(ReferenceList value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptedType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.#ctor(DotNetCasClient.Validation.Schema.Xenc.EncryptedType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.CipherDataGet">
            <summary>设置 EncryptedType.get_CipherData() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.CipherDataSetCipherDataType">
            <summary>设置 EncryptedType.set_CipherData(CipherDataType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.Constructor">
            <summary>设置 EncryptedType.EncryptedType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.EncodingGet">
            <summary>设置 EncryptedType.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.EncodingSetString">
            <summary>设置 EncryptedType.set_Encoding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.EncryptionMethodGet">
            <summary>设置 EncryptedType.get_EncryptionMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.EncryptionMethodSetEncryptionMethodType">
            <summary>设置 EncryptedType.set_EncryptionMethod(EncryptionMethodType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.EncryptionPropertiesGet">
            <summary>设置 EncryptedType.get_EncryptionProperties() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.EncryptionPropertiesSetEncryptionPropertiesType">
            <summary>设置 EncryptedType.set_EncryptionProperties(EncryptionPropertiesType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.IdGet">
            <summary>设置 EncryptedType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.IdSetString">
            <summary>设置 EncryptedType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.KeyInfoGet">
            <summary>设置 EncryptedType.get_KeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.KeyInfoSetKeyInfoType">
            <summary>设置 EncryptedType.set_KeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.MimeTypeGet">
            <summary>设置 EncryptedType.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.MimeTypeSetString">
            <summary>设置 EncryptedType.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.TypeGet">
            <summary>设置 EncryptedType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.TypeSetString">
            <summary>设置 EncryptedType.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.CipherDataGet">
            <summary>设置 EncryptedType.get_CipherData() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.CipherDataSetCipherDataType">
            <summary>设置 EncryptedType.set_CipherData(CipherDataType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.EncodingGet">
            <summary>设置 EncryptedType.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.EncodingSetString">
            <summary>设置 EncryptedType.set_Encoding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.EncryptionMethodGet">
            <summary>设置 EncryptedType.get_EncryptionMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.EncryptionMethodSetEncryptionMethodType">
            <summary>设置 EncryptedType.set_EncryptionMethod(EncryptionMethodType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.EncryptionPropertiesGet">
            <summary>设置 EncryptedType.get_EncryptionProperties() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.EncryptionPropertiesSetEncryptionPropertiesType">
            <summary>设置 EncryptedType.set_EncryptionProperties(EncryptionPropertiesType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.IdGet">
            <summary>设置 EncryptedType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.IdSetString">
            <summary>设置 EncryptedType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.KeyInfoGet">
            <summary>设置 EncryptedType.get_KeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.KeyInfoSetKeyInfoType">
            <summary>设置 EncryptedType.set_KeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.MimeTypeGet">
            <summary>设置 EncryptedType.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.MimeTypeSetString">
            <summary>设置 EncryptedType.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.TypeGet">
            <summary>设置 EncryptedType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptedType.AllInstances.TypeSetString">
            <summary>设置 EncryptedType.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptionMethodType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.#ctor(DotNetCasClient.Validation.Schema.Xenc.EncryptionMethodType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AlgorithmGet">
            <summary>设置 EncryptionMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AlgorithmSetString">
            <summary>设置 EncryptionMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AnyGet">
            <summary>设置 EncryptionMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AnySetXmlNodeArray">
            <summary>设置 EncryptionMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.Constructor">
            <summary>设置 EncryptionMethodType.EncryptionMethodType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.KeySizeGet">
            <summary>设置 EncryptionMethodType.get_KeySize() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.KeySizeSetString">
            <summary>设置 EncryptionMethodType.set_KeySize(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.OaepParamsGet">
            <summary>设置 EncryptionMethodType.get_OaepParams() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.OaepParamsSetByteArray">
            <summary>设置 EncryptionMethodType.set_OaepParams(Byte[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AllInstances.AlgorithmGet">
            <summary>设置 EncryptionMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AllInstances.AlgorithmSetString">
            <summary>设置 EncryptionMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AllInstances.AnyGet">
            <summary>设置 EncryptionMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AllInstances.AnySetXmlNodeArray">
            <summary>设置 EncryptionMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AllInstances.KeySizeGet">
            <summary>设置 EncryptionMethodType.get_KeySize() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AllInstances.KeySizeSetString">
            <summary>设置 EncryptionMethodType.set_KeySize(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AllInstances.OaepParamsGet">
            <summary>设置 EncryptionMethodType.get_OaepParams() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionMethodType.AllInstances.OaepParamsSetByteArray">
            <summary>设置 EncryptionMethodType.set_OaepParams(Byte[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptionPropertiesType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.#ctor(DotNetCasClient.Validation.Schema.Xenc.EncryptionPropertiesType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.Constructor">
            <summary>设置 EncryptionPropertiesType.EncryptionPropertiesType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.EncryptionPropertyGet">
            <summary>设置 EncryptionPropertiesType.get_EncryptionProperty() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.EncryptionPropertySetEncryptionPropertyTypeArray">
            <summary>设置 EncryptionPropertiesType.set_EncryptionProperty(EncryptionPropertyType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.IdGet">
            <summary>设置 EncryptionPropertiesType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.IdSetString">
            <summary>设置 EncryptionPropertiesType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.AllInstances.EncryptionPropertyGet">
            <summary>设置 EncryptionPropertiesType.get_EncryptionProperty() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.AllInstances.EncryptionPropertySetEncryptionPropertyTypeArray">
            <summary>设置 EncryptionPropertiesType.set_EncryptionProperty(EncryptionPropertyType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.AllInstances.IdGet">
            <summary>设置 EncryptionPropertiesType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertiesType.AllInstances.IdSetString">
            <summary>设置 EncryptionPropertiesType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptionPropertyType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.#ctor(DotNetCasClient.Validation.Schema.Xenc.EncryptionPropertyType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AnyAttrGet">
            <summary>设置 EncryptionPropertyType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AnyAttrSetXmlAttributeArray">
            <summary>设置 EncryptionPropertyType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.Constructor">
            <summary>设置 EncryptionPropertyType.EncryptionPropertyType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.IdGet">
            <summary>设置 EncryptionPropertyType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.IdSetString">
            <summary>设置 EncryptionPropertyType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.ItemsGet">
            <summary>设置 EncryptionPropertyType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.ItemsSetXmlElementArray">
            <summary>设置 EncryptionPropertyType.set_Items(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.TargetGet">
            <summary>设置 EncryptionPropertyType.get_Target() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.TargetSetString">
            <summary>设置 EncryptionPropertyType.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.TextGet">
            <summary>设置 EncryptionPropertyType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.TextSetStringArray">
            <summary>设置 EncryptionPropertyType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.AnyAttrGet">
            <summary>设置 EncryptionPropertyType.get_AnyAttr() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.AnyAttrSetXmlAttributeArray">
            <summary>设置 EncryptionPropertyType.set_AnyAttr(XmlAttribute[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.IdGet">
            <summary>设置 EncryptionPropertyType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.IdSetString">
            <summary>设置 EncryptionPropertyType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.ItemsGet">
            <summary>设置 EncryptionPropertyType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.ItemsSetXmlElementArray">
            <summary>设置 EncryptionPropertyType.set_Items(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.TargetGet">
            <summary>设置 EncryptionPropertyType.get_Target() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.TargetSetString">
            <summary>设置 EncryptionPropertyType.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.TextGet">
            <summary>设置 EncryptionPropertyType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimEncryptionPropertyType.AllInstances.TextSetStringArray">
            <summary>设置 EncryptionPropertyType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList">
            <summary>DotNetCasClient.Validation.Schema.Xenc.ReferenceList 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.#ctor(DotNetCasClient.Validation.Schema.Xenc.ReferenceList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.Constructor">
            <summary>设置 ReferenceList.ReferenceList() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.ItemsElementNameGet">
            <summary>设置 ReferenceList.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.ItemsElementNameSetReferenceListItemsElementNamesArray">
            <summary>设置 ReferenceList.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.ItemsGet">
            <summary>设置 ReferenceList.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.ItemsSetReferenceTypeArray">
            <summary>设置 ReferenceList.set_Items(ReferenceType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.AllInstances.ItemsElementNameGet">
            <summary>设置 ReferenceList.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.AllInstances.ItemsElementNameSetReferenceListItemsElementNamesArray">
            <summary>设置 ReferenceList.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.AllInstances.ItemsGet">
            <summary>设置 ReferenceList.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceList.AllInstances.ItemsSetReferenceTypeArray">
            <summary>设置 ReferenceList.set_Items(ReferenceType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.ReferenceType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.#ctor(DotNetCasClient.Validation.Schema.Xenc.ReferenceType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.AnyGet">
            <summary>设置 ReferenceType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.AnySetXmlElementArray">
            <summary>设置 ReferenceType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.Constructor">
            <summary>设置 ReferenceType.ReferenceType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.UriGet">
            <summary>设置 ReferenceType.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.UriSetString">
            <summary>设置 ReferenceType.set_Uri(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.AllInstances.AnyGet">
            <summary>设置 ReferenceType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.AllInstances.AnySetXmlElementArray">
            <summary>设置 ReferenceType.set_Any(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.AllInstances.UriGet">
            <summary>设置 ReferenceType.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimReferenceType.AllInstances.UriSetString">
            <summary>设置 ReferenceType.set_Uri(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.TransformsType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.#ctor(DotNetCasClient.Validation.Schema.Xenc.TransformsType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.Constructor">
            <summary>设置 TransformsType.TransformsType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.TransformGet">
            <summary>设置 TransformsType.get_Transform() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.TransformSetTransformTypeArray">
            <summary>设置 TransformsType.set_Transform(TransformType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.AllInstances.TransformGet">
            <summary>设置 TransformsType.get_Transform() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.ShimTransformsType.AllInstances.TransformSetTransformTypeArray">
            <summary>设置 TransformsType.set_Transform(TransformType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubAgreementMethodType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.AgreementMethodType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubAgreementMethodType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubAgreementMethodType.InitializeStub">
            <summary>初始化 type StubAgreementMethodType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubAgreementMethodType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubAgreementMethodType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubAgreementMethodType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherDataType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.CipherDataType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherDataType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherDataType.InitializeStub">
            <summary>初始化 type StubCipherDataType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherDataType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherDataType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherDataType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherReferenceType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.CipherReferenceType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherReferenceType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherReferenceType.InitializeStub">
            <summary>初始化 type StubCipherReferenceType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherReferenceType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherReferenceType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubCipherReferenceType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedDataType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptedDataType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedDataType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedDataType.InitializeStub">
            <summary>初始化 type StubEncryptedDataType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedDataType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedDataType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedDataType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedKeyType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptedKeyType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedKeyType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedKeyType.InitializeStub">
            <summary>初始化 type StubEncryptedKeyType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedKeyType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedKeyType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedKeyType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptedType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedType.InitializeStub">
            <summary>初始化 type StubEncryptedType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptedType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionMethodType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptionMethodType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionMethodType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionMethodType.InitializeStub">
            <summary>初始化 type StubEncryptionMethodType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionMethodType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionMethodType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionMethodType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertiesType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptionPropertiesType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertiesType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertiesType.InitializeStub">
            <summary>初始化 type StubEncryptionPropertiesType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertiesType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertiesType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertiesType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertyType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.EncryptionPropertyType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertyType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertyType.InitializeStub">
            <summary>初始化 type StubEncryptionPropertyType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertyType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertyType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubEncryptionPropertyType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceList">
            <summary>DotNetCasClient.Validation.Schema.Xenc.ReferenceList 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceList.InitializeStub">
            <summary>初始化 type StubReferenceList 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.ReferenceType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceType.InitializeStub">
            <summary>初始化 type StubReferenceType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubReferenceType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubTransformsType">
            <summary>DotNetCasClient.Validation.Schema.Xenc.TransformsType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubTransformsType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubTransformsType.InitializeStub">
            <summary>初始化 type StubTransformsType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubTransformsType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubTransformsType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.Xenc.Fakes.StubTransformsType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.CanonicalizationMethodType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.CanonicalizationMethodType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.AlgorithmGet">
            <summary>设置 CanonicalizationMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.AlgorithmSetString">
            <summary>设置 CanonicalizationMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.AnyGet">
            <summary>设置 CanonicalizationMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.AnySetXmlNodeArray">
            <summary>设置 CanonicalizationMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.Constructor">
            <summary>设置 CanonicalizationMethodType.CanonicalizationMethodType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.AllInstances.AlgorithmGet">
            <summary>设置 CanonicalizationMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.AllInstances.AlgorithmSetString">
            <summary>设置 CanonicalizationMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.AllInstances.AnyGet">
            <summary>设置 CanonicalizationMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimCanonicalizationMethodType.AllInstances.AnySetXmlNodeArray">
            <summary>设置 CanonicalizationMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.DigestMethodType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.DigestMethodType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.AlgorithmGet">
            <summary>设置 DigestMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.AlgorithmSetString">
            <summary>设置 DigestMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.AnyGet">
            <summary>设置 DigestMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.AnySetXmlNodeArray">
            <summary>设置 DigestMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.Constructor">
            <summary>设置 DigestMethodType.DigestMethodType() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.AllInstances.AlgorithmGet">
            <summary>设置 DigestMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.AllInstances.AlgorithmSetString">
            <summary>设置 DigestMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.AllInstances.AnyGet">
            <summary>设置 DigestMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDigestMethodType.AllInstances.AnySetXmlNodeArray">
            <summary>设置 DigestMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.DsaKeyValueType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.DsaKeyValueType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.Constructor">
            <summary>设置 DsaKeyValueType.DsaKeyValueType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.GGet">
            <summary>设置 DsaKeyValueType.get_G() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.GSetByteArray">
            <summary>设置 DsaKeyValueType.set_G(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.JGet">
            <summary>设置 DsaKeyValueType.get_J() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.JSetByteArray">
            <summary>设置 DsaKeyValueType.set_J(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.PGet">
            <summary>设置 DsaKeyValueType.get_P() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.PSetByteArray">
            <summary>设置 DsaKeyValueType.set_P(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.PgenCounterGet">
            <summary>设置 DsaKeyValueType.get_PgenCounter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.PgenCounterSetByteArray">
            <summary>设置 DsaKeyValueType.set_PgenCounter(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.QGet">
            <summary>设置 DsaKeyValueType.get_Q() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.QSetByteArray">
            <summary>设置 DsaKeyValueType.set_Q(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.SeedGet">
            <summary>设置 DsaKeyValueType.get_Seed() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.SeedSetByteArray">
            <summary>设置 DsaKeyValueType.set_Seed(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.YGet">
            <summary>设置 DsaKeyValueType.get_Y() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.YSetByteArray">
            <summary>设置 DsaKeyValueType.set_Y(Byte[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.GGet">
            <summary>设置 DsaKeyValueType.get_G() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.GSetByteArray">
            <summary>设置 DsaKeyValueType.set_G(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.JGet">
            <summary>设置 DsaKeyValueType.get_J() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.JSetByteArray">
            <summary>设置 DsaKeyValueType.set_J(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.PGet">
            <summary>设置 DsaKeyValueType.get_P() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.PSetByteArray">
            <summary>设置 DsaKeyValueType.set_P(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.PgenCounterGet">
            <summary>设置 DsaKeyValueType.get_PgenCounter() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.PgenCounterSetByteArray">
            <summary>设置 DsaKeyValueType.set_PgenCounter(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.QGet">
            <summary>设置 DsaKeyValueType.get_Q() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.QSetByteArray">
            <summary>设置 DsaKeyValueType.set_Q(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.SeedGet">
            <summary>设置 DsaKeyValueType.get_Seed() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.SeedSetByteArray">
            <summary>设置 DsaKeyValueType.set_Seed(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.YGet">
            <summary>设置 DsaKeyValueType.get_Y() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimDsaKeyValueType.AllInstances.YSetByteArray">
            <summary>设置 DsaKeyValueType.set_Y(Byte[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.KeyInfoType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.KeyInfoType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.Constructor">
            <summary>设置 KeyInfoType.KeyInfoType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.IdGet">
            <summary>设置 KeyInfoType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.IdSetString">
            <summary>设置 KeyInfoType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.ItemsElementNameGet">
            <summary>设置 KeyInfoType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.ItemsElementNameSetKeyInfoTypeItemsElementNamesArray">
            <summary>设置 KeyInfoType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.ItemsGet">
            <summary>设置 KeyInfoType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.ItemsSetObjectArray">
            <summary>设置 KeyInfoType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.TextGet">
            <summary>设置 KeyInfoType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.TextSetStringArray">
            <summary>设置 KeyInfoType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.AllInstances.IdGet">
            <summary>设置 KeyInfoType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.AllInstances.IdSetString">
            <summary>设置 KeyInfoType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.AllInstances.ItemsElementNameGet">
            <summary>设置 KeyInfoType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.AllInstances.ItemsElementNameSetKeyInfoTypeItemsElementNamesArray">
            <summary>设置 KeyInfoType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.AllInstances.ItemsGet">
            <summary>设置 KeyInfoType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.AllInstances.ItemsSetObjectArray">
            <summary>设置 KeyInfoType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.AllInstances.TextGet">
            <summary>设置 KeyInfoType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyInfoType.AllInstances.TextSetStringArray">
            <summary>设置 KeyInfoType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.KeyValueType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.KeyValueType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.Constructor">
            <summary>设置 KeyValueType.KeyValueType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.ItemGet">
            <summary>设置 KeyValueType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.ItemSetObject">
            <summary>设置 KeyValueType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.TextGet">
            <summary>设置 KeyValueType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.TextSetStringArray">
            <summary>设置 KeyValueType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.AllInstances.ItemGet">
            <summary>设置 KeyValueType.get_Item() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.AllInstances.ItemSetObject">
            <summary>设置 KeyValueType.set_Item(Object value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.AllInstances.TextGet">
            <summary>设置 KeyValueType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimKeyValueType.AllInstances.TextSetStringArray">
            <summary>设置 KeyValueType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.ManifestType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.ManifestType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.Constructor">
            <summary>设置 ManifestType.ManifestType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.IdGet">
            <summary>设置 ManifestType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.IdSetString">
            <summary>设置 ManifestType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.ReferenceGet">
            <summary>设置 ManifestType.get_Reference() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.ReferenceSetReferenceTypeArray">
            <summary>设置 ManifestType.set_Reference(ReferenceType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.AllInstances.IdGet">
            <summary>设置 ManifestType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.AllInstances.IdSetString">
            <summary>设置 ManifestType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.AllInstances.ReferenceGet">
            <summary>设置 ManifestType.get_Reference() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimManifestType.AllInstances.ReferenceSetReferenceTypeArray">
            <summary>设置 ManifestType.set_Reference(ReferenceType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.ObjectType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.ObjectType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AnyGet">
            <summary>设置 ObjectType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AnySetXmlNodeArray">
            <summary>设置 ObjectType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.Constructor">
            <summary>设置 ObjectType.ObjectType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.EncodingGet">
            <summary>设置 ObjectType.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.EncodingSetString">
            <summary>设置 ObjectType.set_Encoding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.IdGet">
            <summary>设置 ObjectType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.IdSetString">
            <summary>设置 ObjectType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.MimeTypeGet">
            <summary>设置 ObjectType.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.MimeTypeSetString">
            <summary>设置 ObjectType.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AllInstances.AnyGet">
            <summary>设置 ObjectType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AllInstances.AnySetXmlNodeArray">
            <summary>设置 ObjectType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AllInstances.EncodingGet">
            <summary>设置 ObjectType.get_Encoding() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AllInstances.EncodingSetString">
            <summary>设置 ObjectType.set_Encoding(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AllInstances.IdGet">
            <summary>设置 ObjectType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AllInstances.IdSetString">
            <summary>设置 ObjectType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AllInstances.MimeTypeGet">
            <summary>设置 ObjectType.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimObjectType.AllInstances.MimeTypeSetString">
            <summary>设置 ObjectType.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.PgpDataType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.PgpDataType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.Constructor">
            <summary>设置 PgpDataType.PgpDataType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.ItemsElementNameGet">
            <summary>设置 PgpDataType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.ItemsElementNameSetPgpDataTypeItemsElementNamesArray">
            <summary>设置 PgpDataType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.ItemsGet">
            <summary>设置 PgpDataType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.ItemsSetObjectArray">
            <summary>设置 PgpDataType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.AllInstances.ItemsElementNameGet">
            <summary>设置 PgpDataType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.AllInstances.ItemsElementNameSetPgpDataTypeItemsElementNamesArray">
            <summary>设置 PgpDataType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.AllInstances.ItemsGet">
            <summary>设置 PgpDataType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimPgpDataType.AllInstances.ItemsSetObjectArray">
            <summary>设置 PgpDataType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.ReferenceType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.ReferenceType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.Constructor">
            <summary>设置 ReferenceType.ReferenceType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.DigestMethodGet">
            <summary>设置 ReferenceType.get_DigestMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.DigestMethodSetDigestMethodType">
            <summary>设置 ReferenceType.set_DigestMethod(DigestMethodType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.DigestValueGet">
            <summary>设置 ReferenceType.get_DigestValue() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.DigestValueSetByteArray">
            <summary>设置 ReferenceType.set_DigestValue(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.IdGet">
            <summary>设置 ReferenceType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.IdSetString">
            <summary>设置 ReferenceType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.TransformsGet">
            <summary>设置 ReferenceType.get_Transforms() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.TransformsSetTransformTypeArray">
            <summary>设置 ReferenceType.set_Transforms(TransformType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.TypeGet">
            <summary>设置 ReferenceType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.TypeSetString">
            <summary>设置 ReferenceType.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.UriGet">
            <summary>设置 ReferenceType.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.UriSetString">
            <summary>设置 ReferenceType.set_Uri(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.DigestMethodGet">
            <summary>设置 ReferenceType.get_DigestMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.DigestMethodSetDigestMethodType">
            <summary>设置 ReferenceType.set_DigestMethod(DigestMethodType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.DigestValueGet">
            <summary>设置 ReferenceType.get_DigestValue() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.DigestValueSetByteArray">
            <summary>设置 ReferenceType.set_DigestValue(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.IdGet">
            <summary>设置 ReferenceType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.IdSetString">
            <summary>设置 ReferenceType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.TransformsGet">
            <summary>设置 ReferenceType.get_Transforms() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.TransformsSetTransformTypeArray">
            <summary>设置 ReferenceType.set_Transforms(TransformType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.TypeGet">
            <summary>设置 ReferenceType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.TypeSetString">
            <summary>设置 ReferenceType.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.UriGet">
            <summary>设置 ReferenceType.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimReferenceType.AllInstances.UriSetString">
            <summary>设置 ReferenceType.set_Uri(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.RetrievalMethodType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.RetrievalMethodType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.Constructor">
            <summary>设置 RetrievalMethodType.RetrievalMethodType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.TransformsGet">
            <summary>设置 RetrievalMethodType.get_Transforms() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.TransformsSetTransformTypeArray">
            <summary>设置 RetrievalMethodType.set_Transforms(TransformType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.TypeGet">
            <summary>设置 RetrievalMethodType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.TypeSetString">
            <summary>设置 RetrievalMethodType.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.UriGet">
            <summary>设置 RetrievalMethodType.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.UriSetString">
            <summary>设置 RetrievalMethodType.set_Uri(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.AllInstances.TransformsGet">
            <summary>设置 RetrievalMethodType.get_Transforms() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.AllInstances.TransformsSetTransformTypeArray">
            <summary>设置 RetrievalMethodType.set_Transforms(TransformType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.AllInstances.TypeGet">
            <summary>设置 RetrievalMethodType.get_Type() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.AllInstances.TypeSetString">
            <summary>设置 RetrievalMethodType.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.AllInstances.UriGet">
            <summary>设置 RetrievalMethodType.get_Uri() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRetrievalMethodType.AllInstances.UriSetString">
            <summary>设置 RetrievalMethodType.set_Uri(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.RsaKeyValueType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.RsaKeyValueType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.Constructor">
            <summary>设置 RsaKeyValueType.RsaKeyValueType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.ExponentGet">
            <summary>设置 RsaKeyValueType.get_Exponent() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.ExponentSetByteArray">
            <summary>设置 RsaKeyValueType.set_Exponent(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.ModulusGet">
            <summary>设置 RsaKeyValueType.get_Modulus() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.ModulusSetByteArray">
            <summary>设置 RsaKeyValueType.set_Modulus(Byte[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.AllInstances.ExponentGet">
            <summary>设置 RsaKeyValueType.get_Exponent() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.AllInstances.ExponentSetByteArray">
            <summary>设置 RsaKeyValueType.set_Exponent(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.AllInstances.ModulusGet">
            <summary>设置 RsaKeyValueType.get_Modulus() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimRsaKeyValueType.AllInstances.ModulusSetByteArray">
            <summary>设置 RsaKeyValueType.set_Modulus(Byte[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignatureMethodType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.SignatureMethodType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AlgorithmGet">
            <summary>设置 SignatureMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AlgorithmSetString">
            <summary>设置 SignatureMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AnyGet">
            <summary>设置 SignatureMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AnySetXmlNodeArray">
            <summary>设置 SignatureMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.Constructor">
            <summary>设置 SignatureMethodType.SignatureMethodType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.HmacOutputLengthGet">
            <summary>设置 SignatureMethodType.get_HmacOutputLength() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.HmacOutputLengthSetString">
            <summary>设置 SignatureMethodType.set_HmacOutputLength(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AllInstances.AlgorithmGet">
            <summary>设置 SignatureMethodType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AllInstances.AlgorithmSetString">
            <summary>设置 SignatureMethodType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AllInstances.AnyGet">
            <summary>设置 SignatureMethodType.get_Any() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AllInstances.AnySetXmlNodeArray">
            <summary>设置 SignatureMethodType.set_Any(XmlNode[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AllInstances.HmacOutputLengthGet">
            <summary>设置 SignatureMethodType.get_HmacOutputLength() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureMethodType.AllInstances.HmacOutputLengthSetString">
            <summary>设置 SignatureMethodType.set_HmacOutputLength(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignaturePropertiesType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.SignaturePropertiesType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.Constructor">
            <summary>设置 SignaturePropertiesType.SignaturePropertiesType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.IdGet">
            <summary>设置 SignaturePropertiesType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.IdSetString">
            <summary>设置 SignaturePropertiesType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.SignaturePropertyGet">
            <summary>设置 SignaturePropertiesType.get_SignatureProperty() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.SignaturePropertySetSignaturePropertyTypeArray">
            <summary>设置 SignaturePropertiesType.set_SignatureProperty(SignaturePropertyType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.AllInstances.IdGet">
            <summary>设置 SignaturePropertiesType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.AllInstances.IdSetString">
            <summary>设置 SignaturePropertiesType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.AllInstances.SignaturePropertyGet">
            <summary>设置 SignaturePropertiesType.get_SignatureProperty() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertiesType.AllInstances.SignaturePropertySetSignaturePropertyTypeArray">
            <summary>设置 SignaturePropertiesType.set_SignatureProperty(SignaturePropertyType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignaturePropertyType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.SignaturePropertyType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.Constructor">
            <summary>设置 SignaturePropertyType.SignaturePropertyType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.IdGet">
            <summary>设置 SignaturePropertyType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.IdSetString">
            <summary>设置 SignaturePropertyType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.ItemsGet">
            <summary>设置 SignaturePropertyType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.ItemsSetXmlElementArray">
            <summary>设置 SignaturePropertyType.set_Items(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.TargetGet">
            <summary>设置 SignaturePropertyType.get_Target() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.TargetSetString">
            <summary>设置 SignaturePropertyType.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.TextGet">
            <summary>设置 SignaturePropertyType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.TextSetStringArray">
            <summary>设置 SignaturePropertyType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.AllInstances.IdGet">
            <summary>设置 SignaturePropertyType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.AllInstances.IdSetString">
            <summary>设置 SignaturePropertyType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.AllInstances.ItemsGet">
            <summary>设置 SignaturePropertyType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.AllInstances.ItemsSetXmlElementArray">
            <summary>设置 SignaturePropertyType.set_Items(XmlElement[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.AllInstances.TargetGet">
            <summary>设置 SignaturePropertyType.get_Target() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.AllInstances.TargetSetString">
            <summary>设置 SignaturePropertyType.set_Target(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.AllInstances.TextGet">
            <summary>设置 SignaturePropertyType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignaturePropertyType.AllInstances.TextSetStringArray">
            <summary>设置 SignaturePropertyType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignatureType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.SignatureType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.Constructor">
            <summary>设置 SignatureType.SignatureType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.IdGet">
            <summary>设置 SignatureType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.IdSetString">
            <summary>设置 SignatureType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.KeyInfoGet">
            <summary>设置 SignatureType.get_KeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.KeyInfoSetKeyInfoType">
            <summary>设置 SignatureType.set_KeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.ObjectGet">
            <summary>设置 SignatureType.get_Object() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.ObjectSetObjectTypeArray">
            <summary>设置 SignatureType.set_Object(ObjectType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.SignatureValueGet">
            <summary>设置 SignatureType.get_SignatureValue() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.SignatureValueSetSignatureValueType">
            <summary>设置 SignatureType.set_SignatureValue(SignatureValueType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.SignedInfoGet">
            <summary>设置 SignatureType.get_SignedInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.SignedInfoSetSignedInfoType">
            <summary>设置 SignatureType.set_SignedInfo(SignedInfoType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.IdGet">
            <summary>设置 SignatureType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.IdSetString">
            <summary>设置 SignatureType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.KeyInfoGet">
            <summary>设置 SignatureType.get_KeyInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.KeyInfoSetKeyInfoType">
            <summary>设置 SignatureType.set_KeyInfo(KeyInfoType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.ObjectGet">
            <summary>设置 SignatureType.get_Object() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.ObjectSetObjectTypeArray">
            <summary>设置 SignatureType.set_Object(ObjectType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.SignatureValueGet">
            <summary>设置 SignatureType.get_SignatureValue() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.SignatureValueSetSignatureValueType">
            <summary>设置 SignatureType.set_SignatureValue(SignatureValueType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.SignedInfoGet">
            <summary>设置 SignatureType.get_SignedInfo() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureType.AllInstances.SignedInfoSetSignedInfoType">
            <summary>设置 SignatureType.set_SignedInfo(SignedInfoType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignatureValueType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.SignatureValueType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.Constructor">
            <summary>设置 SignatureValueType.SignatureValueType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.IdGet">
            <summary>设置 SignatureValueType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.IdSetString">
            <summary>设置 SignatureValueType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.ValueGet">
            <summary>设置 SignatureValueType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.ValueSetByteArray">
            <summary>设置 SignatureValueType.set_Value(Byte[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.AllInstances.IdGet">
            <summary>设置 SignatureValueType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.AllInstances.IdSetString">
            <summary>设置 SignatureValueType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.AllInstances.ValueGet">
            <summary>设置 SignatureValueType.get_Value() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignatureValueType.AllInstances.ValueSetByteArray">
            <summary>设置 SignatureValueType.set_Value(Byte[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignedInfoType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.SignedInfoType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.CanonicalizationMethodGet">
            <summary>设置 SignedInfoType.get_CanonicalizationMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.CanonicalizationMethodSetCanonicalizationMethodType">
            <summary>设置 SignedInfoType.set_CanonicalizationMethod(CanonicalizationMethodType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.Constructor">
            <summary>设置 SignedInfoType.SignedInfoType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.IdGet">
            <summary>设置 SignedInfoType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.IdSetString">
            <summary>设置 SignedInfoType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.ReferenceGet">
            <summary>设置 SignedInfoType.get_Reference() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.ReferenceSetReferenceTypeArray">
            <summary>设置 SignedInfoType.set_Reference(ReferenceType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.SignatureMethodGet">
            <summary>设置 SignedInfoType.get_SignatureMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.SignatureMethodSetSignatureMethodType">
            <summary>设置 SignedInfoType.set_SignatureMethod(SignatureMethodType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.AllInstances.CanonicalizationMethodGet">
            <summary>设置 SignedInfoType.get_CanonicalizationMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.AllInstances.CanonicalizationMethodSetCanonicalizationMethodType">
            <summary>设置 SignedInfoType.set_CanonicalizationMethod(CanonicalizationMethodType value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.AllInstances.IdGet">
            <summary>设置 SignedInfoType.get_Id() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.AllInstances.IdSetString">
            <summary>设置 SignedInfoType.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.AllInstances.ReferenceGet">
            <summary>设置 SignedInfoType.get_Reference() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.AllInstances.ReferenceSetReferenceTypeArray">
            <summary>设置 SignedInfoType.set_Reference(ReferenceType[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.AllInstances.SignatureMethodGet">
            <summary>设置 SignedInfoType.get_SignatureMethod() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSignedInfoType.AllInstances.SignatureMethodSetSignatureMethodType">
            <summary>设置 SignedInfoType.set_SignatureMethod(SignatureMethodType value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SpkiDataType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.SpkiDataType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.Constructor">
            <summary>设置 SpkiDataType.SpkiDataType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.ItemsGet">
            <summary>设置 SpkiDataType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.ItemsSetObjectArray">
            <summary>设置 SpkiDataType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.AllInstances.ItemsGet">
            <summary>设置 SpkiDataType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimSpkiDataType.AllInstances.ItemsSetObjectArray">
            <summary>设置 SpkiDataType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.TransformType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.TransformType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.AlgorithmGet">
            <summary>设置 TransformType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.AlgorithmSetString">
            <summary>设置 TransformType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.Constructor">
            <summary>设置 TransformType.TransformType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.ItemsGet">
            <summary>设置 TransformType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.ItemsSetObjectArray">
            <summary>设置 TransformType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.TextGet">
            <summary>设置 TransformType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.TextSetStringArray">
            <summary>设置 TransformType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.AllInstances.AlgorithmGet">
            <summary>设置 TransformType.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.AllInstances.AlgorithmSetString">
            <summary>设置 TransformType.set_Algorithm(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.AllInstances.ItemsGet">
            <summary>设置 TransformType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.AllInstances.ItemsSetObjectArray">
            <summary>设置 TransformType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.AllInstances.TextGet">
            <summary>设置 TransformType.get_Text() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformType.AllInstances.TextSetStringArray">
            <summary>设置 TransformType.set_Text(String[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.TransformsType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.TransformsType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.Constructor">
            <summary>设置 TransformsType.TransformsType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.TransformGet">
            <summary>设置 TransformsType.get_Transform() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.TransformSetTransformTypeArray">
            <summary>设置 TransformsType.set_Transform(TransformType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.AllInstances.TransformGet">
            <summary>设置 TransformsType.get_Transform() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimTransformsType.AllInstances.TransformSetTransformTypeArray">
            <summary>设置 TransformsType.set_Transform(TransformType[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.X509DataType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.X509DataType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.Constructor">
            <summary>设置 X509DataType.X509DataType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.ItemsElementNameGet">
            <summary>设置 X509DataType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.ItemsElementNameSetX509DataTypeItemsElementNamesArray">
            <summary>设置 X509DataType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.ItemsGet">
            <summary>设置 X509DataType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.ItemsSetObjectArray">
            <summary>设置 X509DataType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.AllInstances.ItemsElementNameGet">
            <summary>设置 X509DataType.get_ItemsElementName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.AllInstances.ItemsElementNameSetX509DataTypeItemsElementNamesArray">
            <summary>设置 X509DataType.set_ItemsElementName(ItemsElementNames[] value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.AllInstances.ItemsGet">
            <summary>设置 X509DataType.get_Items() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509DataType.AllInstances.ItemsSetObjectArray">
            <summary>设置 X509DataType.set_Items(Object[] value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.X509IssuerSerialType 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.#ctor(DotNetCasClient.Validation.Schema.XmlDsig.X509IssuerSerialType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.Constructor">
            <summary>设置 X509IssuerSerialType.X509IssuerSerialType() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.X509IssuerNameGet">
            <summary>设置 X509IssuerSerialType.get_X509IssuerName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.X509IssuerNameSetString">
            <summary>设置 X509IssuerSerialType.set_X509IssuerName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.X509SerialNumberGet">
            <summary>设置 X509IssuerSerialType.get_X509SerialNumber() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.X509SerialNumberSetString">
            <summary>设置 X509IssuerSerialType.set_X509SerialNumber(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.AllInstances.X509IssuerNameGet">
            <summary>设置 X509IssuerSerialType.get_X509IssuerName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.AllInstances.X509IssuerNameSetString">
            <summary>设置 X509IssuerSerialType.set_X509IssuerName(String value) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.AllInstances.X509SerialNumberGet">
            <summary>设置 X509IssuerSerialType.get_X509SerialNumber() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.ShimX509IssuerSerialType.AllInstances.X509SerialNumberSetString">
            <summary>设置 X509IssuerSerialType.set_X509SerialNumber(String value) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubCanonicalizationMethodType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.CanonicalizationMethodType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubCanonicalizationMethodType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubCanonicalizationMethodType.InitializeStub">
            <summary>初始化 type StubCanonicalizationMethodType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubCanonicalizationMethodType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubCanonicalizationMethodType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubCanonicalizationMethodType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDigestMethodType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.DigestMethodType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDigestMethodType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDigestMethodType.InitializeStub">
            <summary>初始化 type StubDigestMethodType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDigestMethodType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDigestMethodType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDigestMethodType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDsaKeyValueType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.DsaKeyValueType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDsaKeyValueType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDsaKeyValueType.InitializeStub">
            <summary>初始化 type StubDsaKeyValueType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDsaKeyValueType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDsaKeyValueType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubDsaKeyValueType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyInfoType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.KeyInfoType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyInfoType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyInfoType.InitializeStub">
            <summary>初始化 type StubKeyInfoType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyInfoType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyInfoType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyInfoType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyValueType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.KeyValueType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyValueType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyValueType.InitializeStub">
            <summary>初始化 type StubKeyValueType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyValueType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyValueType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubKeyValueType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubManifestType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.ManifestType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubManifestType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubManifestType.InitializeStub">
            <summary>初始化 type StubManifestType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubManifestType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubManifestType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubManifestType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubObjectType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.ObjectType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubObjectType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubObjectType.InitializeStub">
            <summary>初始化 type StubObjectType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubObjectType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubObjectType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubObjectType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubPgpDataType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.PgpDataType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubPgpDataType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubPgpDataType.InitializeStub">
            <summary>初始化 type StubPgpDataType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubPgpDataType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubPgpDataType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubPgpDataType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubReferenceType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.ReferenceType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubReferenceType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubReferenceType.InitializeStub">
            <summary>初始化 type StubReferenceType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubReferenceType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubReferenceType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubReferenceType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRetrievalMethodType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.RetrievalMethodType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRetrievalMethodType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRetrievalMethodType.InitializeStub">
            <summary>初始化 type StubRetrievalMethodType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRetrievalMethodType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRetrievalMethodType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRetrievalMethodType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRsaKeyValueType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.RsaKeyValueType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRsaKeyValueType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRsaKeyValueType.InitializeStub">
            <summary>初始化 type StubRsaKeyValueType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRsaKeyValueType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRsaKeyValueType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubRsaKeyValueType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureMethodType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignatureMethodType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureMethodType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureMethodType.InitializeStub">
            <summary>初始化 type StubSignatureMethodType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureMethodType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureMethodType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureMethodType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertiesType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignaturePropertiesType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertiesType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertiesType.InitializeStub">
            <summary>初始化 type StubSignaturePropertiesType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertiesType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertiesType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertiesType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertyType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignaturePropertyType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertyType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertyType.InitializeStub">
            <summary>初始化 type StubSignaturePropertyType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertyType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertyType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignaturePropertyType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignatureType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureType.InitializeStub">
            <summary>初始化 type StubSignatureType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureValueType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignatureValueType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureValueType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureValueType.InitializeStub">
            <summary>初始化 type StubSignatureValueType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureValueType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureValueType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignatureValueType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignedInfoType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SignedInfoType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignedInfoType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignedInfoType.InitializeStub">
            <summary>初始化 type StubSignedInfoType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignedInfoType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignedInfoType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSignedInfoType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSpkiDataType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.SpkiDataType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSpkiDataType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSpkiDataType.InitializeStub">
            <summary>初始化 type StubSpkiDataType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSpkiDataType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSpkiDataType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubSpkiDataType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.TransformType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformType.InitializeStub">
            <summary>初始化 type StubTransformType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformsType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.TransformsType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformsType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformsType.InitializeStub">
            <summary>初始化 type StubTransformsType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformsType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformsType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubTransformsType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509DataType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.X509DataType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509DataType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509DataType.InitializeStub">
            <summary>初始化 type StubX509DataType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509DataType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509DataType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509DataType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509IssuerSerialType">
            <summary>DotNetCasClient.Validation.Schema.XmlDsig.X509IssuerSerialType 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509IssuerSerialType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509IssuerSerialType.InitializeStub">
            <summary>初始化 type StubX509IssuerSerialType 的新实例</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509IssuerSerialType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509IssuerSerialType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.Schema.XmlDsig.Fakes.StubX509IssuerSerialType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator">
            <summary>DotNetCasClient.Validation.TicketValidator.AbstractCasProtocolTicketValidator 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.#ctor(DotNetCasClient.Validation.TicketValidator.AbstractCasProtocolTicketValidator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.ArtifactParameterNameGet">
            <summary>设置 AbstractCasProtocolTicketValidator.get_ArtifactParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.Constructor">
            <summary>设置 AbstractCasProtocolTicketValidator.AbstractCasProtocolTicketValidator() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.ServiceParameterNameGet">
            <summary>设置 AbstractCasProtocolTicketValidator.get_ServiceParameterName() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.AllInstances.ArtifactParameterNameGet">
            <summary>设置 AbstractCasProtocolTicketValidator.get_ArtifactParameterName() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractCasProtocolTicketValidator.AllInstances.ServiceParameterNameGet">
            <summary>设置 AbstractCasProtocolTicketValidator.get_ServiceParameterName() 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator">
            <summary>DotNetCasClient.Validation.TicketValidator.AbstractUrlTicketValidator 的填充码类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.#ctor(DotNetCasClient.Validation.TicketValidator.AbstractUrlTicketValidator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.Constructor">
            <summary>设置 AbstractUrlTicketValidator.AbstractUrlTicketValidator() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.CustomParametersGet">
            <summary>设置 AbstractUrlTicketValidator.get_CustomParameters() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.RetrieveResponseFromServerStringString">
            <summary>设置 AbstractUrlTicketValidator.RetrieveResponseFromServer(String validationUrl, String ticket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.StaticConstructor">
            <summary>设置 AbstractUrlTicketValidator.AbstractUrlTicketValidator() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.ValidateString">
            <summary>设置 AbstractUrlTicketValidator.Validate(String ticket) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.AllInstances.CustomParametersGet">
            <summary>设置 AbstractUrlTicketValidator.get_CustomParameters() 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.AllInstances.RetrieveResponseFromServerStringString">
            <summary>设置 AbstractUrlTicketValidator.RetrieveResponseFromServer(String validationUrl, String ticket) 的 填充码</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.ShimAbstractUrlTicketValidator.AllInstances.ValidateString">
            <summary>设置 AbstractUrlTicketValidator.Validate(String ticket) 的 填充码</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator">
            <summary>DotNetCasClient.Validation.TicketValidator.AbstractCasProtocolTicketValidator 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.ArtifactParameterNameGet">
            <summary>设置 AbstractCasProtocolTicketValidator.get_ArtifactParameterName() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.Initialize">
            <summary>设置 AbstractUrlTicketValidator.Initialize() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.Initialize01">
            <summary>设置 AbstractUrlTicketValidator.Initialize() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.InitializeStub">
            <summary>初始化 type StubAbstractCasProtocolTicketValidator 的新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.ParseResponseFromServer(System.String,System.String)">
            <summary>设置 AbstractUrlTicketValidator.ParseResponseFromServer(String response, String ticket) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.ParseResponseFromServerStringString">
            <summary>设置 AbstractUrlTicketValidator.ParseResponseFromServer(String response, String ticket) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.RetrieveResponseFromServer(System.String,System.String)">
            <summary>设置 AbstractUrlTicketValidator.RetrieveResponseFromServer(String validationUrl, String ticket) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.RetrieveResponseFromServerStringString">
            <summary>设置 AbstractUrlTicketValidator.RetrieveResponseFromServer(String validationUrl, String ticket) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.ServiceParameterNameGet">
            <summary>设置 AbstractCasProtocolTicketValidator.get_ServiceParameterName() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.UrlSuffixGet">
            <summary>设置 AbstractUrlTicketValidator.get_UrlSuffix() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.ArtifactParameterName">
            <summary>设置 AbstractCasProtocolTicketValidator.get_ArtifactParameterName() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.ServiceParameterName">
            <summary>设置 AbstractCasProtocolTicketValidator.get_ServiceParameterName() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractCasProtocolTicketValidator.UrlSuffix">
            <summary>设置 AbstractUrlTicketValidator.get_UrlSuffix() 的 stub</summary>
        </member>
        <member name="T:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator">
            <summary>DotNetCasClient.Validation.TicketValidator.AbstractUrlTicketValidator 的存根类型</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.ArtifactParameterNameGet">
            <summary>设置 AbstractUrlTicketValidator.get_ArtifactParameterName() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.Initialize">
            <summary>设置 AbstractUrlTicketValidator.Initialize() 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.Initialize01">
            <summary>设置 AbstractUrlTicketValidator.Initialize() 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.InitializeStub">
            <summary>初始化 type StubAbstractUrlTicketValidator 的新实例</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.ParseResponseFromServer(System.String,System.String)">
            <summary>设置 AbstractUrlTicketValidator.ParseResponseFromServer(String response, String ticket) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.ParseResponseFromServerStringString">
            <summary>设置 AbstractUrlTicketValidator.ParseResponseFromServer(String response, String ticket) 的 stub</summary>
        </member>
        <member name="M:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.RetrieveResponseFromServer(System.String,System.String)">
            <summary>设置 AbstractUrlTicketValidator.RetrieveResponseFromServer(String validationUrl, String ticket) 的 存根</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.RetrieveResponseFromServerStringString">
            <summary>设置 AbstractUrlTicketValidator.RetrieveResponseFromServer(String validationUrl, String ticket) 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.ServiceParameterNameGet">
            <summary>设置 AbstractUrlTicketValidator.get_ServiceParameterName() 的 stub</summary>
        </member>
        <member name="F:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.UrlSuffixGet">
            <summary>设置 AbstractUrlTicketValidator.get_UrlSuffix() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.ArtifactParameterName">
            <summary>设置 AbstractUrlTicketValidator.get_ArtifactParameterName() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.ServiceParameterName">
            <summary>设置 AbstractUrlTicketValidator.get_ServiceParameterName() 的 stub</summary>
        </member>
        <member name="P:DotNetCasClient.Validation.TicketValidator.Fakes.StubAbstractUrlTicketValidator.UrlSuffix">
            <summary>设置 AbstractUrlTicketValidator.get_UrlSuffix() 的 stub</summary>
        </member>
    </members>
</doc>
